

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May  6 13:48:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F25K80 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  002C18                     __pidataBANK0:
    96                           	opt callstack 0
    97                           
    98                           ;initializer for uds_get_vin@F12348
    99  002C18  30                 	db	48
   100  002C19  FF                 	db	255
   101  002C1A  01                 	db	1
   102  002C1B  55                 	db	85
   103  002C1C  55                 	db	85
   104  002C1D  55                 	db	85
   105  002C1E  55                 	db	85
   106  002C1F  55                 	db	85
   107                           
   108                           ;initializer for uds_get_vin@F12346
   109  002C20  03                 	db	3
   110  002C21  22                 	db	34
   111  002C22  F1                 	db	241
   112  002C23  90                 	db	144
   113  002C24  55                 	db	85
   114  002C25  55                 	db	85
   115  002C26  55                 	db	85
   116  002C27  55                 	db	85
   117                           
   118                           	psect	idataBANK1
   119  002C28                     __pidataBANK1:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for uds_get_soc@F12336
   123  002C28  03                 	db	3
   124  002C29  22                 	db	34
   125  002C2A  1D                 	db	29
   126  002C2B  D0                 	db	208
   127  002C2C  55                 	db	85
   128  002C2D  55                 	db	85
   129  002C2E  55                 	db	85
   130  002C2F  55                 	db	85
   131                           
   132                           	psect	mediumconst
   133  007EDE                     __pmediumconst:
   134                           	opt callstack 0
   135  007EDE  00                 	db	0
   136  007EDF                     __powers_:
   137                           	opt callstack 0
   138  007EDF  0000               	dw	0
   139  007EE1  3F80               	dw	16256
   140  007EE3  0000               	dw	0
   141  007EE5  4120               	dw	16672
   142  007EE7  0000               	dw	0
   143  007EE9  42C8               	dw	17096
   144  007EEB  0000               	dw	0
   145  007EED  447A               	dw	17530
   146  007EEF  4000               	dw	16384
   147  007EF1  461C               	dw	17948
   148  007EF3  5000               	dw	20480
   149  007EF5  47C3               	dw	18371
   150  007EF7  2400               	dw	9216
   151  007EF9  4974               	dw	18804
   152  007EFB  9680               	dw	38528
   153  007EFD  4B18               	dw	19224
   154  007EFF  BC20               	dw	48160
   155  007F01  4CBE               	dw	19646
   156  007F03  6B28               	dw	27432
   157  007F05  4E6E               	dw	20078
   158  007F07  02F9               	dw	761
   159  007F09  5015               	dw	20501
   160  007F0B  78EC               	dw	30956
   161  007F0D  60AD               	dw	24749
   162  007F0F  F2CA               	dw	62154
   163  007F11  7149               	dw	29001
   164  007F13                     __end_of__powers_:
   165                           	opt callstack 0
   166  007F13                     __npowers_:
   167                           	opt callstack 0
   168  007F13  0000               	dw	0
   169  007F15  3F80               	dw	16256
   170  007F17  CCCD               	dw	52429
   171  007F19  3DCC               	dw	15820
   172  007F1B  D70A               	dw	55050
   173  007F1D  3C23               	dw	15395
   174  007F1F  126F               	dw	4719
   175  007F21  3A83               	dw	14979
   176  007F23  B717               	dw	46871
   177  007F25  38D1               	dw	14545
   178  007F27  C5AC               	dw	50604
   179  007F29  3727               	dw	14119
   180  007F2B  37BD               	dw	14269
   181  007F2D  3586               	dw	13702
   182  007F2F  BF95               	dw	49045
   183  007F31  33D6               	dw	13270
   184  007F33  CC77               	dw	52343
   185  007F35  322B               	dw	12843
   186  007F37  705F               	dw	28767
   187  007F39  3089               	dw	12425
   188  007F3B  E6FF               	dw	59135
   189  007F3D  2EDB               	dw	11995
   190  007F3F  E508               	dw	58632
   191  007F41  1E3C               	dw	7740
   192  007F43  4260               	dw	16992
   193  007F45  0DA2               	dw	3490
   194  007F47                     __end_of__npowers_:
   195                           	opt callstack 0
   196  007F47                     _dpowers:
   197                           	opt callstack 0
   198  007F47  0001               	dw	1
   199  007F49  0000               	dw	0
   200  007F4B  000A               	dw	10
   201  007F4D  0000               	dw	0
   202  007F4F  0064               	dw	100
   203  007F51  0000               	dw	0
   204  007F53  03E8               	dw	1000
   205  007F55  0000               	dw	0
   206  007F57  2710               	dw	10000
   207  007F59  0000               	dw	0
   208  007F5B  86A0               	dw	34464
   209  007F5D  0001               	dw	1
   210  007F5F  4240               	dw	16960
   211  007F61  000F               	dw	15
   212  007F63  9680               	dw	38528
   213  007F65  0098               	dw	152
   214  007F67  E100               	dw	57600
   215  007F69  05F5               	dw	1525
   216  007F6B  CA00               	dw	51712
   217  007F6D  3B9A               	dw	15258
   218  007F6F                     __end_of_dpowers:
   219                           	opt callstack 0
   220  0000                     _B1CONbits	set	3728
   221  0000                     _RXM1SIDL	set	3837
   222  0000                     _RXM1SIDH	set	3836
   223  0000                     _RXM0SIDL	set	3833
   224  0000                     _RXM0SIDH	set	3832
   225  0000                     _RXF5SIDL	set	3829
   226  0000                     _RXF5SIDH	set	3828
   227  0000                     _RXF4SIDL	set	3825
   228  0000                     _RXF4SIDH	set	3824
   229  0000                     _RXF3SIDL	set	3821
   230  0000                     _RXF3SIDH	set	3820
   231  0000                     _RXF2SIDL	set	3817
   232  0000                     _RXF2SIDH	set	3816
   233  0000                     _RXF1SIDL	set	3813
   234  0000                     _RXF1SIDH	set	3812
   235  0000                     _RXF0SIDL	set	3809
   236  0000                     _RXF0SIDH	set	3808
   237  0000                     _BRGCON3	set	3653
   238  0000                     _BRGCON2	set	3652
   239  0000                     _BRGCON1	set	3651
   240  0000                     _RXM1EXIDEN	set	30699
   241  0000                     _RXM0EXIDM	set	30667
   242  0000                     _TXB2CON	set	3840
   243  0000                     _TXB1CON	set	3856
   244  0000                     _TXB0CON	set	3872
   245  0000                     _RXB1CON	set	3888
   246  0000                     _CANSTAT	set	3950
   247  0000                     _CANCON	set	3951
   248  0000                     _CIOCON	set	3952
   249  0000                     _TXREG1	set	4013
   250  0000                     _RCREG1	set	4014
   251  0000                     _SPBRGH1	set	3965
   252  0000                     _RCSTA1bits	set	4011
   253  0000                     _PIE1	set	3997
   254  0000                     _PIR1bits	set	3998
   255  0000                     _TXSTA1bits	set	4012
   256  0000                     _PIE1bits	set	3997
   257  0000                     _SPBRG1	set	4015
   258  0000                     _BAUDCON1	set	4007
   259  0000                     _RCSTA1	set	4011
   260  0000                     _TXSTA1	set	4012
   261  0000                     _TRISCbits	set	3988
   262  0000                     _RXB0CON	set	3936
   263  0000                     _IRXIF	set	31679
   264  0000                     _RXB1OVFL	set	31630
   265  0000                     _RXB1IF	set	31673
   266  0000                     _RXB0FILHIT0	set	31488
   267  0000                     _RXB0OVFL	set	31631
   268  0000                     _RXB0IF	set	31672
   269  0000                     _RXB0FUL	set	31495
   270  0000                     _MDSEL0	set	31638
   271  0000                     _MDSEL1	set	31639
   272  0000                     _PEIE	set	32662
   273  0000                     _GIE	set	32663
   274  0000                     _RB7	set	31759
   275  0000                     _TRISB7	set	31903
   276  007F6F                     STR_9:
   277  007F6F  0A                 	db	10
   278  007F70  65                 	db	101	;'e'
   279  007F71  72                 	db	114	;'r'
   280  007F72  72                 	db	114	;'r'
   281  007F73  6F                 	db	111	;'o'
   282  007F74  72                 	db	114	;'r'
   283  007F75  3A                 	db	58	;':'
   284  007F76  20                 	db	32
   285  007F77  63                 	db	99	;'c'
   286  007F78  61                 	db	97	;'a'
   287  007F79  6E                 	db	110	;'n'
   288  007F7A  20                 	db	32
   289  007F7B  73                 	db	115	;'s'
   290  007F7C  65                 	db	101	;'e'
   291  007F7D  6E                 	db	110	;'n'
   292  007F7E  64                 	db	100	;'d'
   293  007F7F  20                 	db	32
   294  007F80  66                 	db	102	;'f'
   295  007F81  61                 	db	97	;'a'
   296  007F82  69                 	db	105	;'i'
   297  007F83  6C                 	db	108	;'l'
   298  007F84  65                 	db	101	;'e'
   299  007F85  64                 	db	100	;'d'
   300  007F86  0A                 	db	10
   301  007F87  00                 	db	0
   302  007F88                     STR_4:
   303  007F88  76                 	db	118	;'v'
   304  007F89  61                 	db	97	;'a'
   305  007F8A  6C                 	db	108	;'l'
   306  007F8B  75                 	db	117	;'u'
   307  007F8C  65                 	db	101	;'e'
   308  007F8D  20                 	db	32
   309  007F8E  73                 	db	115	;'s'
   310  007F8F  6F                 	db	111	;'o'
   311  007F90  63                 	db	99	;'c'
   312  007F91  3A                 	db	58	;':'
   313  007F92  20                 	db	32
   314  007F93  25                 	db	37
   315  007F94  2E                 	db	46
   316  007F95  31                 	db	49	;'1'
   317  007F96  66                 	db	102	;'f'
   318  007F97  20                 	db	32
   319  007F98  25                 	db	37
   320  007F99  25                 	db	37
   321  007F9A  0A                 	db	10
   322  007F9B  00                 	db	0
   323  007F9C                     STR_14:
   324  007F9C  65                 	db	101	;'e'
   325  007F9D  72                 	db	114	;'r'
   326  007F9E  72                 	db	114	;'r'
   327  007F9F  6F                 	db	111	;'o'
   328  007FA0  72                 	db	114	;'r'
   329  007FA1  3A                 	db	58	;':'
   330  007FA2  20                 	db	32
   331  007FA3  69                 	db	105	;'i'
   332  007FA4  6E                 	db	110	;'n'
   333  007FA5  76                 	db	118	;'v'
   334  007FA6  61                 	db	97	;'a'
   335  007FA7  6C                 	db	108	;'l'
   336  007FA8  69                 	db	105	;'i'
   337  007FA9  64                 	db	100	;'d'
   338  007FAA  20                 	db	32
   339  007FAB  63                 	db	99	;'c'
   340  007FAC  6D                 	db	109	;'m'
   341  007FAD  64                 	db	100	;'d'
   342  007FAE  20                 	db	32
   343  007FAF  00                 	db	0
   344  007FB0                     STR_1:
   345  007FB0  73                 	db	115	;'s'
   346  007FB1  74                 	db	116	;'t'
   347  007FB2  61                 	db	97	;'a'
   348  007FB3  74                 	db	116	;'t'
   349  007FB4  75                 	db	117	;'u'
   350  007FB5  73                 	db	115	;'s'
   351  007FB6  3A                 	db	58	;':'
   352  007FB7  20                 	db	32
   353  007FB8  73                 	db	115	;'s'
   354  007FB9  65                 	db	101	;'e'
   355  007FBA  6E                 	db	110	;'n'
   356  007FBB  64                 	db	100	;'d'
   357  007FBC  20                 	db	32
   358  007FBD  63                 	db	99	;'c'
   359  007FBE  61                 	db	97	;'a'
   360  007FBF  6E                 	db	110	;'n'
   361  007FC0  0A                 	db	10
   362  007FC1  00                 	db	0
   363  007FC2                     STR_3:
   364  007FC2  73                 	db	115	;'s'
   365  007FC3  74                 	db	116	;'t'
   366  007FC4  61                 	db	97	;'a'
   367  007FC5  74                 	db	116	;'t'
   368  007FC6  75                 	db	117	;'u'
   369  007FC7  73                 	db	115	;'s'
   370  007FC8  3A                 	db	58	;':'
   371  007FC9  20                 	db	32
   372  007FCA  72                 	db	114	;'r'
   373  007FCB  65                 	db	101	;'e'
   374  007FCC  63                 	db	99	;'c'
   375  007FCD  76                 	db	118	;'v'
   376  007FCE  20                 	db	32
   377  007FCF  63                 	db	99	;'c'
   378  007FD0  61                 	db	97	;'a'
   379  007FD1  6E                 	db	110	;'n'
   380  007FD2  0A                 	db	10
   381  007FD3  00                 	db	0
   382  007FD4                     STR_5:
   383  007FD4  65                 	db	101	;'e'
   384  007FD5  72                 	db	114	;'r'
   385  007FD6  72                 	db	114	;'r'
   386  007FD7  6F                 	db	111	;'o'
   387  007FD8  72                 	db	114	;'r'
   388  007FD9  3A                 	db	58	;':'
   389  007FDA  20                 	db	32
   390  007FDB  74                 	db	116	;'t'
   391  007FDC  69                 	db	105	;'i'
   392  007FDD  6D                 	db	109	;'m'
   393  007FDE  65                 	db	101	;'e'
   394  007FDF  6F                 	db	111	;'o'
   395  007FE0  75                 	db	117	;'u'
   396  007FE1  74                 	db	116	;'t'
   397  007FE2  0A                 	db	10
   398  007FE3  00                 	db	0
   399  007FE4                     STR_15:
   400  007FE4  73                 	db	115	;'s'
   401  007FE5  74                 	db	116	;'t'
   402  007FE6  61                 	db	97	;'a'
   403  007FE7  74                 	db	116	;'t'
   404  007FE8  75                 	db	117	;'u'
   405  007FE9  73                 	db	115	;'s'
   406  007FEA  3A                 	db	58	;':'
   407  007FEB  20                 	db	32
   408  007FEC  72                 	db	114	;'r'
   409  007FED  65                 	db	101	;'e'
   410  007FEE  61                 	db	97	;'a'
   411  007FEF  64                 	db	100	;'d'
   412  007FF0  79                 	db	121	;'y'
   413  007FF1  0A                 	db	10
   414  007FF2  00                 	db	0
   415  007FF3                     STR_10:
   416  007FF3  76                 	db	118	;'v'
   417  007FF4  61                 	db	97	;'a'
   418  007FF5  6C                 	db	108	;'l'
   419  007FF6  75                 	db	117	;'u'
   420  007FF7  65                 	db	101	;'e'
   421  007FF8  20                 	db	32
   422  007FF9  76                 	db	118	;'v'
   423  007FFA  69                 	db	105	;'i'
   424  007FFB  6E                 	db	110	;'n'
   425  007FFC  3A                 	db	58	;':'
   426  007FFD  20                 	db	32
   427  007FFE  00                 	db	0
   428  0000                     
   429                           ; #config settings
   430  007FFF  00                 	db	0	; dummy byte at the end
   431  0000                     
   432                           	psect	cinit
   433  0028C8                     __pcinit:
   434                           	opt callstack 0
   435  0028C8                     start_initialization:
   436                           	opt callstack 0
   437  0028C8                     __initialization:
   438                           	opt callstack 0
   439                           
   440                           ; Initialize objects allocated to BANK1 (8 bytes)
   441                           ; load TBLPTR registers with __pidataBANK1
   442  0028C8  0E28               	movlw	low __pidataBANK1
   443  0028CA  6EF6               	movwf	tblptrl,c
   444  0028CC  0E2C               	movlw	high __pidataBANK1
   445  0028CE  6EF7               	movwf	tblptrh,c
   446  0028D0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   447  0028D2  6EF8               	movwf	tblptru,c
   448  0028D4  EE01  F0B4         	lfsr	0,__pdataBANK1
   449  0028D8  EE10 F008          	lfsr	1,8
   450  0028DC                     copy_data0:
   451  0028DC  0009               	tblrd		*+
   452  0028DE  CFF5 FFEE          	movff	tablat,postinc0
   453  0028E2  50E5               	movf	postdec1,w,c
   454  0028E4  50E1               	movf	fsr1l,w,c
   455  0028E6  E1FA               	bnz	copy_data0
   456                           
   457                           ; Initialize objects allocated to BANK0 (16 bytes)
   458                           ; load TBLPTR registers with __pidataBANK0
   459  0028E8  0E18               	movlw	low __pidataBANK0
   460  0028EA  6EF6               	movwf	tblptrl,c
   461  0028EC  0E2C               	movlw	high __pidataBANK0
   462  0028EE  6EF7               	movwf	tblptrh,c
   463  0028F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   464  0028F2  6EF8               	movwf	tblptru,c
   465  0028F4  EE00  F0C9         	lfsr	0,__pdataBANK0
   466  0028F8  EE10 F010          	lfsr	1,16
   467  0028FC                     copy_data1:
   468  0028FC  0009               	tblrd		*+
   469  0028FE  CFF5 FFEE          	movff	tablat,postinc0
   470  002902  50E5               	movf	postdec1,w,c
   471  002904  50E1               	movf	fsr1l,w,c
   472  002906  E1FA               	bnz	copy_data1
   473                           
   474                           ; Clear objects allocated to BANK0 (37 bytes)
   475  002908  EE00  F0A4         	lfsr	0,__pbssBANK0
   476  00290C  0E25               	movlw	37
   477  00290E                     clear_0:
   478  00290E  6AEE               	clrf	postinc0,c
   479  002910  06E8               	decf	wreg,f,c
   480  002912  E1FD               	bnz	clear_0
   481                           
   482                           ; Clear objects allocated to COMRAM (3 bytes)
   483  002914  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   484  002916  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   485  002918  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   486  00291A                     end_of_initialization:
   487                           	opt callstack 0
   488  00291A                     __end_of__initialization:
   489                           	opt callstack 0
   490  00291A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   491  00291C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   492  00291E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   493  002920  6EF8               	movwf	tblptru,c
   494  002922  0100               	movlb	0
   495  002924  EFC1  F014         	goto	_main	;jump to C main() function
   496                           
   497                           	psect	bssCOMRAM
   498  00005A                     __pbssCOMRAM:
   499                           	opt callstack 0
   500  00005A                     _USART1_Status:
   501                           	opt callstack 0
   502  00005A                     	ds	1
   503  00005B                     _ctmp:
   504                           	opt callstack 0
   505  00005B                     	ds	1
   506  00005C                     _cmd:
   507                           	opt callstack 0
   508  00005C                     	ds	1
   509                           
   510                           	psect	bssBANK0
   511  0000A4                     __pbssBANK0:
   512                           	opt callstack 0
   513  0000A4                     _RxBuffer:
   514                           	opt callstack 0
   515  0000A4                     	ds	32
   516  0000C4                     _outIndex:
   517                           	opt callstack 0
   518  0000C4                     	ds	2
   519  0000C6                     _inIndex:
   520                           	opt callstack 0
   521  0000C6                     	ds	2
   522  0000C8                     __ECANRxFilterHitInfo:
   523                           	opt callstack 0
   524  0000C8                     	ds	1
   525                           
   526                           	psect	dataBANK0
   527  0000C9                     __pdataBANK0:
   528                           	opt callstack 0
   529  0000C9                     uds_get_vin@F12348:
   530                           	opt callstack 0
   531  0000C9                     	ds	8
   532  0000D1                     uds_get_vin@F12346:
   533                           	opt callstack 0
   534  0000D1                     	ds	8
   535                           
   536                           	psect	dataBANK1
   537  0001B4                     __pdataBANK1:
   538                           	opt callstack 0
   539  0001B4                     uds_get_soc@F12336:
   540                           	opt callstack 0
   541  0001B4                     	ds	8
   542                           
   543                           	psect	cstackBANK1
   544  000100                     __pcstackBANK1:
   545                           	opt callstack 0
   546  000100                     uds_get_soc@buf:
   547                           	opt callstack 0
   548                           
   549                           ; 128 bytes @ 0x0
   550  000100                     	ds	128
   551  000180                     uds_get_soc@msg2:
   552                           	opt callstack 0
   553                           
   554                           ; 32 bytes @ 0x80
   555  000180                     	ds	32
   556  0001A0                     uds_get_soc@msg:
   557                           	opt callstack 0
   558                           
   559                           ; 8 bytes @ 0xA0
   560  0001A0                     	ds	8
   561  0001A8                     _uds_get_soc$1885:
   562                           	opt callstack 0
   563                           
   564                           ; 4 bytes @ 0xA8
   565  0001A8                     	ds	4
   566  0001AC                     uds_get_soc@len:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0xAC
   570  0001AC                     	ds	1
   571  0001AD                     uds_get_soc@i:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0xAD
   575  0001AD                     	ds	2
   576  0001AF                     uds_get_soc@flags:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0xAF
   580  0001AF                     	ds	1
   581  0001B0                     uds_get_soc@id:
   582                           	opt callstack 0
   583                           
   584                           ; 4 bytes @ 0xB0
   585  0001B0                     	ds	4
   586                           
   587                           	psect	cstackBANK0
   588  000060                     __pcstackBANK0:
   589                           	opt callstack 0
   590  000060                     _sprintf$1889:
   591                           	opt callstack 0
   592  000060                     uds_get_vin@msg_start:
   593                           	opt callstack 0
   594                           
   595                           ; 8 bytes @ 0x0
   596  000060                     	ds	4
   597  000064                     sprintf@ap:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x4
   601  000064                     	ds	2
   602  000066                     sprintf@cp:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x6
   606  000066                     	ds	2
   607  000068                     sprintf@len:
   608                           	opt callstack 0
   609  000068                     uds_get_vin@msg_continue:
   610                           	opt callstack 0
   611                           
   612                           ; 8 bytes @ 0x8
   613  000068                     	ds	2
   614  00006A                     sprintf@flag:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0xA
   618  00006A                     	ds	2
   619  00006C                     sprintf@val:
   620                           	opt callstack 0
   621                           
   622                           ; 4 bytes @ 0xC
   623  00006C                     	ds	4
   624  000070                     sprintf@eexp:
   625                           	opt callstack 0
   626  000070                     uds_get_vin@msg2:
   627                           	opt callstack 0
   628                           
   629                           ; 32 bytes @ 0x10
   630  000070                     	ds	2
   631  000072                     sprintf@tmpval:
   632                           	opt callstack 0
   633                           
   634                           ; 4 bytes @ 0x12
   635  000072                     	ds	4
   636  000076                     sprintf@fval:
   637                           	opt callstack 0
   638                           
   639                           ; 4 bytes @ 0x16
   640  000076                     	ds	4
   641  00007A                     sprintf@prec:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x1A
   645  00007A                     	ds	2
   646  00007C                     sprintf@c:
   647                           	opt callstack 0
   648                           
   649                           ; 1 bytes @ 0x1C
   650  00007C                     	ds	20
   651  000090                     uds_get_vin@total_size:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x30
   655  000090                     	ds	2
   656  000092                     uds_get_vin@i:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x32
   660  000092                     	ds	2
   661  000094                     uds_get_vin@t:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x34
   665  000094                     	ds	2
   666  000096                     uds_get_vin@len:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x36
   670  000096                     	ds	1
   671  000097                     uds_get_vin@i_336:
   672                           	opt callstack 0
   673                           
   674                           ; 1 bytes @ 0x37
   675  000097                     	ds	1
   676  000098                     uds_get_vin@flags:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x38
   680  000098                     	ds	1
   681  000099                     uds_get_vin@id:
   682                           	opt callstack 0
   683                           
   684                           ; 4 bytes @ 0x39
   685  000099                     	ds	4
   686  00009D                     ??_shell:
   687                           
   688                           ; 1 bytes @ 0x3D
   689  00009D                     	ds	1
   690  00009E                     
   691                           ; 2 bytes @ 0x3E
   692  00009E                     	ds	2
   693  0000A0                     
   694                           ; 3 bytes @ 0x40
   695  0000A0                     	ds	3
   696  0000A3                     ??_main:
   697                           
   698                           ; 1 bytes @ 0x43
   699  0000A3                     	ds	1
   700                           
   701                           	psect	cstackCOMRAM
   702  000001                     __pcstackCOMRAM:
   703                           	opt callstack 0
   704  000001                     Read1USART@data:
   705                           	opt callstack 0
   706                           
   707                           ; 1 bytes @ 0x0
   708  000001                     	ds	1
   709  000002                     ISR@c2:
   710                           	opt callstack 0
   711                           
   712                           ; 1 bytes @ 0x1
   713  000002                     	ds	1
   714  000003                     ??_isdigit:
   715  000003                     ?___wmul:
   716                           	opt callstack 0
   717  000003                     ?___awmod:
   718                           	opt callstack 0
   719  000003                     ?___lwmod:
   720                           	opt callstack 0
   721  000003                     ?__tdiv_to_l_:
   722                           	opt callstack 0
   723  000003                     ?__div_to_l_:
   724                           	opt callstack 0
   725  000003                     ?___lldiv:
   726                           	opt callstack 0
   727  000003                     ?___flneg:
   728                           	opt callstack 0
   729  000003                     ?___llmod:
   730                           	opt callstack 0
   731  000003                     ?___xxtofl:
   732                           	opt callstack 0
   733  000003                     Write1USART@data:
   734                           	opt callstack 0
   735  000003                     ECANSetOperationMode@mode:
   736                           	opt callstack 0
   737  000003                     alive@j:
   738                           	opt callstack 0
   739  000003                     Open1USART@spbrg:
   740                           	opt callstack 0
   741  000003                     __CANIDToRegs@ptr:
   742                           	opt callstack 0
   743  000003                     __RegsToCANID@ptr:
   744                           	opt callstack 0
   745  000003                     ___wmul@multiplier:
   746                           	opt callstack 0
   747  000003                     ___awmod@dividend:
   748                           	opt callstack 0
   749  000003                     ___lwmod@dividend:
   750                           	opt callstack 0
   751  000003                     ___lldiv@dividend:
   752                           	opt callstack 0
   753  000003                     __div_to_l_@f1:
   754                           	opt callstack 0
   755  000003                     ___fleq@ff1:
   756                           	opt callstack 0
   757  000003                     ___flge@ff1:
   758                           	opt callstack 0
   759  000003                     ___flneg@f1:
   760                           	opt callstack 0
   761  000003                     __tdiv_to_l_@f1:
   762                           	opt callstack 0
   763  000003                     ___llmod@dividend:
   764                           	opt callstack 0
   765  000003                     ___xxtofl@val:
   766                           	opt callstack 0
   767                           
   768                           ; 4 bytes @ 0x2
   769  000003                     	ds	1
   770  000004                     Putchar@send_data:
   771                           	opt callstack 0
   772  000004                     _isdigit$1661:
   773                           	opt callstack 0
   774                           
   775                           ; 1 bytes @ 0x3
   776  000004                     	ds	1
   777  000005                     ??_alive:
   778  000005                     Open1USART@config:
   779                           	opt callstack 0
   780  000005                     isdigit@c:
   781                           	opt callstack 0
   782  000005                     PutString@mess:
   783                           	opt callstack 0
   784  000005                     __RegsToCANID@val:
   785                           	opt callstack 0
   786  000005                     ___wmul@multiplicand:
   787                           	opt callstack 0
   788  000005                     ___awmod@divisor:
   789                           	opt callstack 0
   790  000005                     ___lwmod@divisor:
   791                           	opt callstack 0
   792  000005                     __CANIDToRegs@val:
   793                           	opt callstack 0
   794                           
   795                           ; 4 bytes @ 0x4
   796  000005                     	ds	2
   797  000007                     ??___xxtofl:
   798  000007                     __RegsToCANID@type:
   799                           	opt callstack 0
   800  000007                     ___awmod@counter:
   801                           	opt callstack 0
   802  000007                     ___lwmod@counter:
   803                           	opt callstack 0
   804  000007                     alive@i:
   805                           	opt callstack 0
   806  000007                     ___wmul@product:
   807                           	opt callstack 0
   808  000007                     ___lldiv@divisor:
   809                           	opt callstack 0
   810  000007                     __div_to_l_@f2:
   811                           	opt callstack 0
   812  000007                     ___fleq@ff2:
   813                           	opt callstack 0
   814  000007                     ___flge@ff2:
   815                           	opt callstack 0
   816  000007                     __tdiv_to_l_@f2:
   817                           	opt callstack 0
   818  000007                     ___llmod@divisor:
   819                           	opt callstack 0
   820                           
   821                           ; 4 bytes @ 0x6
   822  000007                     	ds	1
   823  000008                     ??__RegsToCANID:
   824  000008                     ?___lwdiv:
   825                           	opt callstack 0
   826  000008                     ___awmod@sign:
   827                           	opt callstack 0
   828  000008                     ___lwdiv@dividend:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x7
   832  000008                     	ds	1
   833  000009                     ?___awdiv:
   834                           	opt callstack 0
   835  000009                     __CANIDToRegs@type:
   836                           	opt callstack 0
   837  000009                     ___awdiv@dividend:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x8
   841  000009                     	ds	1
   842  00000A                     ??__CANIDToRegs:
   843  00000A                     __RegsToCANID@Value:
   844                           	opt callstack 0
   845  00000A                     ___lwdiv@divisor:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0x9
   849  00000A                     	ds	1
   850  00000B                     ??__tdiv_to_l_:
   851  00000B                     ??___fleq:
   852  00000B                     ??___flge:
   853  00000B                     ___llmod@counter:
   854                           	opt callstack 0
   855  00000B                     ___xxtofl@sign:
   856                           	opt callstack 0
   857  00000B                     ___awdiv@divisor:
   858                           	opt callstack 0
   859  00000B                     ___lldiv@quotient:
   860                           	opt callstack 0
   861  00000B                     __div_to_l_@quot:
   862                           	opt callstack 0
   863                           
   864                           ; 4 bytes @ 0xA
   865  00000B                     	ds	1
   866  00000C                     ___xxtofl@exp:
   867                           	opt callstack 0
   868  00000C                     ECANReceiveMessage@id:
   869                           	opt callstack 0
   870  00000C                     __CANIDToRegs@Value:
   871                           	opt callstack 0
   872  00000C                     ___lwdiv@quotient:
   873                           	opt callstack 0
   874                           
   875                           ; 2 bytes @ 0xB
   876  00000C                     	ds	1
   877  00000D                     ___awdiv@counter:
   878                           	opt callstack 0
   879  00000D                     ___xxtofl@arg:
   880                           	opt callstack 0
   881                           
   882                           ; 4 bytes @ 0xC
   883  00000D                     	ds	1
   884  00000E                     ___awdiv@sign:
   885                           	opt callstack 0
   886  00000E                     ___lwdiv@counter:
   887                           	opt callstack 0
   888  00000E                     ECANReceiveMessage@data:
   889                           	opt callstack 0
   890  00000E                     ECANSendMessage@id:
   891                           	opt callstack 0
   892  00000E                     __tdiv_to_l_@quot:
   893                           	opt callstack 0
   894                           
   895                           ; 4 bytes @ 0xD
   896  00000E                     	ds	1
   897  00000F                     ___lldiv@counter:
   898                           	opt callstack 0
   899  00000F                     __div_to_l_@cntr:
   900                           	opt callstack 0
   901  00000F                     ___awdiv@quotient:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0xE
   905  00000F                     	ds	1
   906  000010                     __div_to_l_@exp1:
   907                           	opt callstack 0
   908  000010                     ECANReceiveMessage@dataLen:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0xF
   912  000010                     	ds	1
   913  000011                     ?___fldiv:
   914                           	opt callstack 0
   915  000011                     ?___flmul:
   916                           	opt callstack 0
   917  000011                     ___fldiv@b:
   918                           	opt callstack 0
   919  000011                     ___flmul@b:
   920                           	opt callstack 0
   921                           
   922                           ; 4 bytes @ 0x10
   923  000011                     	ds	1
   924  000012                     __tdiv_to_l_@cntr:
   925                           	opt callstack 0
   926  000012                     ECANSendMessage@data:
   927                           	opt callstack 0
   928  000012                     ECANReceiveMessage@msgFlags:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x11
   932  000012                     	ds	1
   933  000013                     __tdiv_to_l_@exp1:
   934                           	opt callstack 0
   935                           
   936                           ; 1 bytes @ 0x12
   937  000013                     	ds	1
   938  000014                     ECANSendMessage@dataLen:
   939                           	opt callstack 0
   940  000014                     ECANReceiveMessage@savedPtr:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x13
   944  000014                     	ds	1
   945  000015                     ECANSendMessage@msgFlags:
   946                           	opt callstack 0
   947  000015                     ___fldiv@a:
   948                           	opt callstack 0
   949  000015                     ___flmul@a:
   950                           	opt callstack 0
   951                           
   952                           ; 4 bytes @ 0x14
   953  000015                     	ds	1
   954  000016                     ??_ECANSendMessage:
   955  000016                     ECANReceiveMessage@i:
   956                           	opt callstack 0
   957                           
   958                           ; 1 bytes @ 0x15
   959  000016                     	ds	1
   960  000017                     ECANReceiveMessage@ptr:
   961                           	opt callstack 0
   962  000017                     ECANSendMessage@pb:
   963                           	opt callstack 0
   964                           
   965                           ; 18 bytes @ 0x16
   966  000017                     	ds	2
   967  000019                     ??___fldiv:
   968  000019                     ??___flmul:
   969  000019                     ECANReceiveMessage@temp:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x18
   973  000019                     	ds	4
   974  00001D                     ___flmul@sign:
   975                           	opt callstack 0
   976  00001D                     ___fldiv@rem:
   977                           	opt callstack 0
   978                           
   979                           ; 4 bytes @ 0x1C
   980  00001D                     	ds	1
   981  00001E                     ___flmul@grs:
   982                           	opt callstack 0
   983                           
   984                           ; 4 bytes @ 0x1D
   985  00001E                     	ds	3
   986  000021                     ___fldiv@sign:
   987                           	opt callstack 0
   988                           
   989                           ; 1 bytes @ 0x20
   990  000021                     	ds	1
   991  000022                     ___flmul@aexp:
   992                           	opt callstack 0
   993  000022                     ___fldiv@new_exp:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x21
   997  000022                     	ds	1
   998  000023                     ___flmul@bexp:
   999                           	opt callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x22
  1002  000023                     	ds	1
  1003  000024                     ___fldiv@grs:
  1004                           	opt callstack 0
  1005  000024                     ___flmul@prod:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x23
  1009  000024                     	ds	4
  1010  000028                     ___fldiv@bexp:
  1011                           	opt callstack 0
  1012  000028                     ___flmul@temp:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x27
  1016  000028                     	ds	1
  1017  000029                     ECANSendMessage@j:
  1018                           	opt callstack 0
  1019  000029                     ___fldiv@aexp:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x28
  1023  000029                     	ds	1
  1024  00002A                     ?_fround:
  1025                           	opt callstack 0
  1026  00002A                     ?_scale:
  1027                           	opt callstack 0
  1028  00002A                     ?___fltol:
  1029                           	opt callstack 0
  1030  00002A                     ECANSendMessage@tempPtr:
  1031                           	opt callstack 0
  1032  00002A                     ___fltol@f1:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x29
  1036  00002A                     	ds	2
  1037  00002C                     ECANSendMessage@temp:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x2B
  1041  00002C                     	ds	1
  1042  00002D                     ECANSendMessage@i:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x2C
  1046  00002D                     	ds	1
  1047  00002E                     ??___fltol:
  1048  00002E                     ECANSendMessage@ptr:
  1049                           	opt callstack 0
  1050  00002E                     _fround$1887:
  1051                           	opt callstack 0
  1052  00002E                     _scale$1888:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x2D
  1056  00002E                     	ds	2
  1057  000030                     uds_get_vin@hack:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x2F
  1061  000030                     	ds	2
  1062  000032                     scale@scl:
  1063                           	opt callstack 0
  1064  000032                     ___fltol@sign1:
  1065                           	opt callstack 0
  1066  000032                     _fround$1886:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x31
  1070  000032                     	ds	1
  1071  000033                     ___fltol@exp1:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x32
  1075  000033                     	ds	3
  1076  000036                     fround@prec:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x35
  1080  000036                     	ds	1
  1081  000037                     ?___fladd:
  1082                           	opt callstack 0
  1083  000037                     ___fladd@b:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x36
  1087  000037                     	ds	4
  1088  00003B                     ___fladd@a:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x3A
  1092  00003B                     	ds	4
  1093  00003F                     ??___fladd:
  1094                           
  1095                           ; 1 bytes @ 0x3E
  1096  00003F                     	ds	4
  1097  000043                     ___fladd@signs:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x42
  1101  000043                     	ds	1
  1102  000044                     ___fladd@aexp:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x43
  1106  000044                     	ds	1
  1107  000045                     ___fladd@bexp:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x44
  1111  000045                     	ds	1
  1112  000046                     ___fladd@grs:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x45
  1116  000046                     	ds	1
  1117  000047                     ?___flsub:
  1118                           	opt callstack 0
  1119  000047                     ___flsub@b:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x46
  1123  000047                     	ds	4
  1124  00004B                     ___flsub@a:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x4A
  1128  00004B                     	ds	4
  1129  00004F                     ?_sprintf:
  1130                           	opt callstack 0
  1131  00004F                     sprintf@sp:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x4E
  1135  00004F                     	ds	2
  1136  000051                     sprintf@f:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x50
  1140  000051                     	ds	6
  1141  000057                     ??_sprintf:
  1142                           
  1143                           ; 1 bytes @ 0x56
  1144  000057                     	ds	3
  1145  00005A                     
  1146                           ; 1 bytes @ 0x59
  1147 ;;
  1148 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1149 ;;
  1150 ;; *************** function _main *****************
  1151 ;; Defined at:
  1152 ;;		line 203 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  argc            2   62[BANK0 ] int 
  1155 ;;  argv            3   64[BANK0 ] PTR PTR unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  2   62[BANK0 ] int 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1167 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1170 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;Total ram usage:        6 bytes
  1172 ;; Hardware stack levels required when called:    7
  1173 ;; This function calls:
  1174 ;;		_ECANInitialize
  1175 ;;		_Open1USART
  1176 ;;		_PutString
  1177 ;;		_alive
  1178 ;;		_shell
  1179 ;; This function is called by:
  1180 ;;		Startup code after reset
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text0
  1185  002982                     __ptext0:
  1186                           	opt callstack 0
  1187  002982                     _main:
  1188                           	opt callstack 24
  1189                           
  1190                           ;main.c: 206: alive(2);
  1191                           
  1192                           ;incstack = 0
  1193  002982  0E00               	movlw	0
  1194  002984  6E04               	movwf	alive@j+1,c
  1195  002986  0E02               	movlw	2
  1196  002988  6E03               	movwf	alive@j,c
  1197  00298A  EC94  F014         	call	_alive	;wreg free
  1198                           
  1199                           ;main.c: 207: ECANInitialize();
  1200  00298E  ECBF  F013         	call	_ECANInitialize	;wreg free
  1201                           
  1202                           ;main.c: 210: Open1USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 
      +                          & 0b11111111 , 26);
  1203  002992  0E00               	movlw	0
  1204  002994  6E04               	movwf	Open1USART@spbrg+1,c
  1205  002996  0E1A               	movlw	26
  1206  002998  6E03               	movwf	Open1USART@spbrg,c
  1207  00299A  0E7C               	movlw	124
  1208  00299C  EC3C  F015         	call	_Open1USART
  1209                           
  1210                           ;main.c: 211: alive(2);
  1211  0029A0  0E00               	movlw	0
  1212  0029A2  6E04               	movwf	alive@j+1,c
  1213  0029A4  0E02               	movlw	2
  1214  0029A6  6E03               	movwf	alive@j,c
  1215  0029A8  EC94  F014         	call	_alive	;wreg free
  1216                           
  1217                           ;main.c: 215: GIE=1;
  1218  0029AC  8EF2               	bsf	4082,7,c	;volatile
  1219                           
  1220                           ;main.c: 217: PEIE=1;
  1221  0029AE  8CF2               	bsf	4082,6,c	;volatile
  1222                           
  1223                           ;main.c: 220: PutString("status: ready\n");
  1224  0029B0  0EE4               	movlw	low STR_15
  1225  0029B2  6E05               	movwf	PutString@mess,c
  1226  0029B4  0E7F               	movlw	high STR_15
  1227  0029B6  6E06               	movwf	PutString@mess+1,c
  1228  0029B8  EC13  F015         	call	_PutString	;wreg free
  1229  0029BC                     l4972:
  1230                           
  1231                           ;main.c: 222: _delay((unsigned long)((1)*(16000000/4000.0)));
  1232  0029BC  0E06               	movlw	6
  1233  0029BE  0100               	movlb	0	; () banked
  1234  0029C0  6FA3               	movwf	??_main& (0+255),b
  1235  0029C2  0E30               	movlw	48
  1236  0029C4                     u5667:
  1237  0029C4  2EE8               	decfsz	wreg,f,c
  1238  0029C6  D7FE               	bra	u5667
  1239  0029C8  2FA3               	decfsz	??_main& (0+255),f,b
  1240  0029CA  D7FC               	bra	u5667
  1241  0029CC  F000               	nop	
  1242                           
  1243                           ;main.c: 223: shell();
  1244  0029CE  ECA6  F012         	call	_shell	;wreg free
  1245  0029D2  D7F4               	goto	l4972
  1246  0029D4                     __end_of_main:
  1247                           	opt callstack 0
  1248                           
  1249 ;; *************** function _shell *****************
  1250 ;; Defined at:
  1251 ;;		line 176 in file "main.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1268 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1269 ;;Total ram usage:        1 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    6
  1272 ;; This function calls:
  1273 ;;		_PutString
  1274 ;;		_Putchar
  1275 ;;		_alive
  1276 ;;		_uds_get_soc
  1277 ;;		_uds_get_vin
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text1
  1284  00254C                     __ptext1:
  1285                           	opt callstack 0
  1286  00254C                     _shell:
  1287                           	opt callstack 24
  1288                           
  1289                           ;main.c: 177: if (cmd != 0) {
  1290                           
  1291                           ;incstack = 0
  1292  00254C  505C               	movf	_cmd,w,c
  1293  00254E  B4D8               	btfsc	status,2,c
  1294  002550  D04B               	goto	l4958
  1295                           
  1296                           ;main.c: 178: GIE=0;
  1297  002552  9EF2               	bcf	4082,7,c	;volatile
  1298                           
  1299                           ;main.c: 179: alive(1);
  1300  002554  0E00               	movlw	0
  1301  002556  6E04               	movwf	alive@j+1,c
  1302  002558  0E01               	movlw	1
  1303  00255A  6E03               	movwf	alive@j,c
  1304  00255C  EC94  F014         	call	_alive	;wreg free
  1305                           
  1306                           ;main.c: 180: if (cmd == 's') {
  1307  002560  0E73               	movlw	115
  1308  002562  185C               	xorwf	_cmd,w,c
  1309  002564  A4D8               	btfss	status,2,c
  1310  002566  D003               	goto	l4934
  1311                           
  1312                           ;main.c: 181: uds_get_soc();
  1313  002568  ECEB  F00C         	call	_uds_get_soc	;wreg free
  1314                           
  1315                           ;main.c: 182: } else if (cmd == 'r') {
  1316  00256C  D033               	goto	l4956
  1317  00256E                     l4934:
  1318  00256E  0E72               	movlw	114
  1319  002570  185C               	xorwf	_cmd,w,c
  1320  002572  A4D8               	btfss	status,2,c
  1321  002574  D002               	goto	l4938
  1322  002576  00FF               	reset		;# 
  1323                           
  1324                           ;main.c: 184: } else if (cmd == 'v') {
  1325  002578  D02D               	goto	l4956
  1326  00257A                     l4938:
  1327  00257A  0E76               	movlw	118
  1328  00257C  185C               	xorwf	_cmd,w,c
  1329  00257E  A4D8               	btfss	status,2,c
  1330  002580  D007               	goto	l4942
  1331                           
  1332                           ;main.c: 185: uds_get_vin(0);
  1333  002582  0E00               	movlw	0
  1334  002584  6E31               	movwf	uds_get_vin@hack+1,c
  1335  002586  0E00               	movlw	0
  1336  002588  6E30               	movwf	uds_get_vin@hack,c
  1337  00258A  ECAD  F00B         	call	_uds_get_vin	;wreg free
  1338                           
  1339                           ;main.c: 186: } else if (cmd == '1') {
  1340  00258E  D022               	goto	l4956
  1341  002590                     l4942:
  1342  002590  0E31               	movlw	49
  1343  002592  185C               	xorwf	_cmd,w,c
  1344  002594  A4D8               	btfss	status,2,c
  1345  002596  D007               	goto	l4946
  1346                           
  1347                           ;main.c: 187: uds_get_vin(1);
  1348  002598  0E00               	movlw	0
  1349  00259A  6E31               	movwf	uds_get_vin@hack+1,c
  1350  00259C  0E01               	movlw	1
  1351  00259E  6E30               	movwf	uds_get_vin@hack,c
  1352  0025A0  ECAD  F00B         	call	_uds_get_vin	;wreg free
  1353                           
  1354                           ;main.c: 188: } else if (cmd == '2') {
  1355  0025A4  D017               	goto	l4956
  1356  0025A6                     l4946:
  1357  0025A6  0E32               	movlw	50
  1358  0025A8  185C               	xorwf	_cmd,w,c
  1359  0025AA  A4D8               	btfss	status,2,c
  1360  0025AC  D007               	goto	l4950
  1361                           
  1362                           ;main.c: 189: uds_get_vin(2);
  1363  0025AE  0E00               	movlw	0
  1364  0025B0  6E31               	movwf	uds_get_vin@hack+1,c
  1365  0025B2  0E02               	movlw	2
  1366  0025B4  6E30               	movwf	uds_get_vin@hack,c
  1367  0025B6  ECAD  F00B         	call	_uds_get_vin	;wreg free
  1368                           
  1369                           ;main.c: 190: } else {
  1370  0025BA  D00C               	goto	l4956
  1371  0025BC                     l4950:
  1372                           
  1373                           ;main.c: 191: PutString("error: invalid cmd ");
  1374  0025BC  0E9C               	movlw	low STR_14
  1375  0025BE  6E05               	movwf	PutString@mess,c
  1376  0025C0  0E7F               	movlw	high STR_14
  1377  0025C2  6E06               	movwf	PutString@mess+1,c
  1378  0025C4  EC13  F015         	call	_PutString	;wreg free
  1379                           
  1380                           ;main.c: 192: Putchar(cmd);
  1381  0025C8  505C               	movf	_cmd,w,c
  1382  0025CA  ECFA  F015         	call	_Putchar
  1383                           
  1384                           ;main.c: 193: Putchar('\n');
  1385  0025CE  0E0A               	movlw	10
  1386  0025D0  ECFA  F015         	call	_Putchar
  1387  0025D4                     l4956:
  1388                           
  1389                           ;main.c: 194: };main.c: 195: _delay((unsigned long)((1)*(16000000/4000.0)));
  1390  0025D4  0E06               	movlw	6
  1391  0025D6  0100               	movlb	0	; () banked
  1392  0025D8  6F9D               	movwf	??_shell& (0+255),b
  1393  0025DA  0E30               	movlw	48
  1394  0025DC                     u5677:
  1395  0025DC  2EE8               	decfsz	wreg,f,c
  1396  0025DE  D7FE               	bra	u5677
  1397  0025E0  2F9D               	decfsz	??_shell& (0+255),f,b
  1398  0025E2  D7FC               	bra	u5677
  1399  0025E4  F000               	nop	
  1400  0025E6  00FF               	reset		;# 
  1401  0025E8                     l4958:
  1402                           
  1403                           ;main.c: 197: };main.c: 199: cmd = 0;
  1404  0025E8  0E00               	movlw	0
  1405  0025EA  6E5C               	movwf	_cmd,c
  1406  0025EC  0012               	return		;funcret
  1407  0025EE                     __end_of_shell:
  1408                           	opt callstack 0
  1409                           
  1410 ;; *************** function _uds_get_vin *****************
  1411 ;; Defined at:
  1412 ;;		line 71 in file "main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  hack            2   47[COMRAM] int 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  i               1   55[BANK0 ] unsigned char 
  1417 ;;  t               2   52[BANK0 ] int 
  1418 ;;  i               2   50[BANK0 ] int 
  1419 ;;  buf           128    0        unsigned char [128]
  1420 ;;  msg2           32   16[BANK0 ] unsigned char [32]
  1421 ;;  msg_continue    8    8[BANK0 ] unsigned char [8]
  1422 ;;  msg_start       8    0[BANK0 ] unsigned char [8]
  1423 ;;  id              4   57[BANK0 ] unsigned long 
  1424 ;;  total_size      2   48[BANK0 ] int 
  1425 ;;  flags           1   56[BANK0 ] enum E12300
  1426 ;;  len             1   54[BANK0 ] unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1437 ;;      Locals:         0      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1439 ;;      Totals:         2      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1440 ;;Total ram usage:       63 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    5
  1443 ;; This function calls:
  1444 ;;		_ECANReceiveMessage
  1445 ;;		_ECANSendMessage
  1446 ;;		_PutString
  1447 ;;		_Putchar
  1448 ;;		_alive
  1449 ;; This function is called by:
  1450 ;;		_shell
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text2
  1455  00175A                     __ptext2:
  1456                           	opt callstack 0
  1457  00175A                     _uds_get_vin:
  1458                           	opt callstack 24
  1459                           
  1460                           ;main.c: 72: PutString("status: send can\n");
  1461                           
  1462                           ;incstack = 0
  1463  00175A  0EB0               	movlw	low STR_1
  1464  00175C  6E05               	movwf	PutString@mess,c
  1465  00175E  0E7F               	movlw	high STR_1
  1466  001760  6E06               	movwf	PutString@mess+1,c
  1467  001762  EC13  F015         	call	_PutString	;wreg free
  1468                           
  1469                           ;main.c: 73: BYTE msg_start[] = {0x03, 0x22, 0xF1, 0x90, 0x55, 0x55, 0x55, 0x55};
  1470  001766  EE20  F0D1         	lfsr	2,uds_get_vin@F12346
  1471  00176A  EE10  F060         	lfsr	1,uds_get_vin@msg_start
  1472  00176E  0E07               	movlw	7
  1473  001770                     u5091:
  1474  001770  CFDB FFE3          	movff	plusw2,plusw1
  1475  001774  06E8               	decf	wreg,f,c
  1476  001776  E2FC               	bc	u5091
  1477                           
  1478                           ;main.c: 74: BYTE msg_continue[] = {0x30, 0xff, 0x01, 0x55, 0x55, 0x55, 0x55, 0x55};
  1479  001778  EE20  F0C9         	lfsr	2,uds_get_vin@F12348
  1480  00177C  EE10  F068         	lfsr	1,uds_get_vin@msg_continue
  1481  001780  0E07               	movlw	7
  1482  001782                     u5101:
  1483  001782  CFDB FFE3          	movff	plusw2,plusw1
  1484  001786  06E8               	decf	wreg,f,c
  1485  001788  E2FC               	bc	u5101
  1486                           
  1487                           ;main.c: 75: if (!ECANSendMessage(0x7E0, msg_start, 8, 0)) {
  1488  00178A  0EE0               	movlw	224
  1489  00178C  6E0E               	movwf	ECANSendMessage@id,c
  1490  00178E  0E07               	movlw	7
  1491  001790  6E0F               	movwf	ECANSendMessage@id+1,c
  1492  001792  0E00               	movlw	0
  1493  001794  6E10               	movwf	ECANSendMessage@id+2,c
  1494  001796  0E00               	movlw	0
  1495  001798  6E11               	movwf	ECANSendMessage@id+3,c
  1496  00179A  0E60               	movlw	low uds_get_vin@msg_start
  1497  00179C  6E12               	movwf	ECANSendMessage@data,c
  1498  00179E  0E00               	movlw	high uds_get_vin@msg_start
  1499  0017A0  6E13               	movwf	ECANSendMessage@data+1,c
  1500  0017A2  0E08               	movlw	8
  1501  0017A4  6E14               	movwf	ECANSendMessage@dataLen,c
  1502  0017A6  0E00               	movlw	0
  1503  0017A8  6E15               	movwf	ECANSendMessage@msgFlags,c
  1504  0017AA  EC5E  F010         	call	_ECANSendMessage	;wreg free
  1505  0017AE  0900               	iorlw	0
  1506  0017B0  A4D8               	btfss	status,2,c
  1507  0017B2  D006               	goto	l4642
  1508                           
  1509                           ;main.c: 76: PutString("error: can send failed\n");
  1510  0017B4  0E70               	movlw	low (STR_9+1)
  1511  0017B6  6E05               	movwf	PutString@mess,c
  1512  0017B8  0E7F               	movlw	high (STR_9+1)
  1513  0017BA  6E06               	movwf	PutString@mess+1,c
  1514  0017BC  EC13  F015         	call	_PutString	;wreg free
  1515  0017C0                     l4642:
  1516                           
  1517                           ;main.c: 77: };main.c: 79: unsigned long id = 0;
  1518  0017C0  0E00               	movlw	0
  1519  0017C2  0100               	movlb	0	; () banked
  1520  0017C4  6F99               	movwf	uds_get_vin@id& (0+255),b
  1521  0017C6  0E00               	movlw	0
  1522  0017C8  6F9A               	movwf	(uds_get_vin@id+1)& (0+255),b
  1523  0017CA  0E00               	movlw	0
  1524  0017CC  6F9B               	movwf	(uds_get_vin@id+2)& (0+255),b
  1525  0017CE  0E00               	movlw	0
  1526  0017D0  6F9C               	movwf	(uds_get_vin@id+3)& (0+255),b
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 80: BYTE len = 32;
  1530  0017D2  0E20               	movlw	32
  1531  0017D4  6F96               	movwf	uds_get_vin@len& (0+255),b
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;main.c: 81: ECAN_RX_MSG_FLAGS flags = 0;
  1535  0017D6  0E00               	movlw	0
  1536  0017D8  6F98               	movwf	uds_get_vin@flags& (0+255),b
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;main.c: 90: for(int i = 0; i < 10; i++) {
  1540                           
  1541                           ; BSR set to: 0
  1542  0017DA  0E00               	movlw	0
  1543  0017DC  6F93               	movwf	(uds_get_vin@i+1)& (0+255),b
  1544  0017DE  0E00               	movlw	0
  1545  0017E0  6F92               	movwf	uds_get_vin@i& (0+255),b
  1546  0017E2                     l4656:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;main.c: 91: alive(2);
  1550  0017E2  0E00               	movlw	0
  1551  0017E4  6E04               	movwf	alive@j+1,c
  1552  0017E6  0E02               	movlw	2
  1553  0017E8  6E03               	movwf	alive@j,c
  1554  0017EA  EC94  F014         	call	_alive	;wreg free
  1555                           
  1556                           ;main.c: 92: PutString("status: recv can\n");
  1557  0017EE  0EC2               	movlw	low STR_3
  1558  0017F0  6E05               	movwf	PutString@mess,c
  1559  0017F2  0E7F               	movlw	high STR_3
  1560  0017F4  6E06               	movwf	PutString@mess+1,c
  1561  0017F6  EC13  F015         	call	_PutString	;wreg free
  1562                           
  1563                           ;main.c: 93: if (ECANReceiveMessage(&id, msg2, &len, &flags)) {
  1564  0017FA  0E99               	movlw	low uds_get_vin@id
  1565  0017FC  6E0C               	movwf	ECANReceiveMessage@id,c
  1566  0017FE  0E00               	movlw	high uds_get_vin@id
  1567  001800  6E0D               	movwf	ECANReceiveMessage@id+1,c
  1568  001802  0E70               	movlw	low uds_get_vin@msg2
  1569  001804  6E0E               	movwf	ECANReceiveMessage@data,c
  1570  001806  0E00               	movlw	high uds_get_vin@msg2
  1571  001808  6E0F               	movwf	ECANReceiveMessage@data+1,c
  1572  00180A  0E96               	movlw	low uds_get_vin@len
  1573  00180C  6E10               	movwf	ECANReceiveMessage@dataLen,c
  1574  00180E  0E00               	movlw	high uds_get_vin@len
  1575  001810  6E11               	movwf	ECANReceiveMessage@dataLen+1,c
  1576  001812  0E98               	movlw	low uds_get_vin@flags
  1577  001814  6E12               	movwf	ECANReceiveMessage@msgFlags,c
  1578  001816  0E00               	movlw	high uds_get_vin@flags
  1579  001818  6E13               	movwf	ECANReceiveMessage@msgFlags+1,c
  1580  00181A  EC11  F00F         	call	_ECANReceiveMessage	;wreg free
  1581  00181E  0900               	iorlw	0
  1582  001820  B4D8               	btfsc	status,2,c
  1583  001822  D04E               	goto	l4682
  1584                           
  1585                           ;main.c: 94: if (id == 0x7E8 && msg2[0] == 0x10 && msg2[2] == 0x62 && msg2[3] == 0xF1) {
  1586  001824  0EE8               	movlw	232
  1587  001826  0100               	movlb	0	; () banked
  1588  001828  1999               	xorwf	uds_get_vin@id& (0+255),w,b
  1589  00182A  E14A               	bnz	l4682
  1590  00182C  0E07               	movlw	7
  1591  00182E  199A               	xorwf	(uds_get_vin@id+1)& (0+255),w,b
  1592  001830  119B               	iorwf	(uds_get_vin@id+2)& (0+255),w,b
  1593  001832  119C               	iorwf	(uds_get_vin@id+3)& (0+255),w,b
  1594  001834  A4D8               	btfss	status,2,c
  1595  001836  D044               	goto	l4682
  1596                           
  1597                           ; BSR set to: 0
  1598  001838  0E10               	movlw	16
  1599  00183A  1970               	xorwf	uds_get_vin@msg2& (0+255),w,b
  1600  00183C  A4D8               	btfss	status,2,c
  1601  00183E  D040               	goto	l4682
  1602                           
  1603                           ; BSR set to: 0
  1604  001840  0E62               	movlw	98
  1605  001842  1972               	xorwf	(uds_get_vin@msg2+2)& (0+255),w,b
  1606  001844  A4D8               	btfss	status,2,c
  1607  001846  D03C               	goto	l4682
  1608                           
  1609                           ; BSR set to: 0
  1610  001848  0EF1               	movlw	241
  1611  00184A  1973               	xorwf	(uds_get_vin@msg2+3)& (0+255),w,b
  1612  00184C  A4D8               	btfss	status,2,c
  1613  00184E  D038               	goto	l4682
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;main.c: 95: total_size = msg2[1] - 6;
  1617  001850  0EFA               	movlw	250
  1618  001852  2571               	addwf	(uds_get_vin@msg2+1)& (0+255),w,b
  1619  001854  6F90               	movwf	uds_get_vin@total_size& (0+255),b
  1620  001856  6B91               	clrf	(uds_get_vin@total_size+1)& (0+255),b
  1621  001858  0EFF               	movlw	255
  1622  00185A  2391               	addwfc	(uds_get_vin@total_size+1)& (0+255),f,b
  1623                           
  1624                           ;main.c: 99: if (hack == 0) {
  1625  00185C  5030               	movf	uds_get_vin@hack,w,c
  1626  00185E  1031               	iorwf	uds_get_vin@hack+1,w,c
  1627  001860  A4D8               	btfss	status,2,c
  1628  001862  D01B               	goto	l123
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;main.c: 101: if (!ECANSendMessage(0x7E0, msg_continue, 8, 0)) {
  1632  001864  0EE0               	movlw	224
  1633  001866  6E0E               	movwf	ECANSendMessage@id,c
  1634  001868  0E07               	movlw	7
  1635  00186A  6E0F               	movwf	ECANSendMessage@id+1,c
  1636  00186C  0E00               	movlw	0
  1637  00186E  6E10               	movwf	ECANSendMessage@id+2,c
  1638  001870  0E00               	movlw	0
  1639  001872  6E11               	movwf	ECANSendMessage@id+3,c
  1640  001874  0E68               	movlw	low uds_get_vin@msg_continue
  1641  001876  6E12               	movwf	ECANSendMessage@data,c
  1642  001878  0E00               	movlw	high uds_get_vin@msg_continue
  1643  00187A  6E13               	movwf	ECANSendMessage@data+1,c
  1644  00187C  0E08               	movlw	8
  1645  00187E  6E14               	movwf	ECANSendMessage@dataLen,c
  1646  001880  0E00               	movlw	0
  1647  001882  6E15               	movwf	ECANSendMessage@msgFlags,c
  1648  001884  EC5E  F010         	call	_ECANSendMessage	;wreg free
  1649  001888  0900               	iorlw	0
  1650  00188A  A4D8               	btfss	status,2,c
  1651  00188C  D006               	goto	l123
  1652                           
  1653                           ;main.c: 102: PutString("\nerror: can send failed\n");
  1654  00188E  0E6F               	movlw	low STR_9
  1655  001890  6E05               	movwf	PutString@mess,c
  1656  001892  0E7F               	movlw	high STR_9
  1657  001894  6E06               	movwf	PutString@mess+1,c
  1658  001896  EC13  F015         	call	_PutString	;wreg free
  1659  00189A                     l123:
  1660                           
  1661                           ;main.c: 103: };main.c: 104: };main.c: 106: PutString("value vin: ");
  1662  00189A  0EF3               	movlw	low STR_10
  1663  00189C  6E05               	movwf	PutString@mess,c
  1664  00189E  0E7F               	movlw	high STR_10
  1665  0018A0  6E06               	movwf	PutString@mess+1,c
  1666  0018A2  EC13  F015         	call	_PutString	;wreg free
  1667                           
  1668                           ;main.c: 107: Putchar(msg2[5]);
  1669  0018A6  0100               	movlb	0	; () banked
  1670  0018A8  5175               	movf	(uds_get_vin@msg2+5)& (0+255),w,b
  1671  0018AA  ECFA  F015         	call	_Putchar
  1672                           
  1673                           ;main.c: 108: Putchar(msg2[6]);
  1674  0018AE  0100               	movlb	0	; () banked
  1675  0018B0  5176               	movf	(uds_get_vin@msg2+6)& (0+255),w,b
  1676  0018B2  ECFA  F015         	call	_Putchar
  1677                           
  1678                           ;main.c: 109: Putchar(msg2[7]);
  1679  0018B6  0100               	movlb	0	; () banked
  1680  0018B8  5177               	movf	(uds_get_vin@msg2+7)& (0+255),w,b
  1681  0018BA  ECFA  F015         	call	_Putchar
  1682                           
  1683                           ;main.c: 110: goto ok1;
  1684  0018BE  D012               	goto	l4690
  1685  0018C0                     l4682:
  1686  0018C0  0100               	movlb	0	; () banked
  1687  0018C2  4B92               	infsnz	uds_get_vin@i& (0+255),f,b
  1688  0018C4  2B93               	incf	(uds_get_vin@i+1)& (0+255),f,b
  1689                           
  1690                           ; BSR set to: 0
  1691  0018C6  BF93               	btfsc	(uds_get_vin@i+1)& (0+255),7,b
  1692  0018C8  D78C               	goto	l4656
  1693  0018CA  5193               	movf	(uds_get_vin@i+1)& (0+255),w,b
  1694  0018CC  E104               	bnz	u5190
  1695  0018CE  0E0A               	movlw	10
  1696  0018D0  5D92               	subwf	uds_get_vin@i& (0+255),w,b
  1697  0018D2  A0D8               	btfss	status,0,c
  1698  0018D4  D786               	goto	l4656
  1699  0018D6                     u5190:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;main.c: 111: };main.c: 112: };main.c: 113: };main.c: 115: PutString("error: timeout\n")
      +                          ;
  1703  0018D6  0ED4               	movlw	low STR_5
  1704  0018D8  6E05               	movwf	PutString@mess,c
  1705  0018DA  0E7F               	movlw	high STR_5
  1706  0018DC  6E06               	movwf	PutString@mess+1,c
  1707  0018DE  EC13  F015         	call	_PutString	;wreg free
  1708  0018E2  0012               	return	
  1709  0018E4                     l4690:
  1710                           
  1711                           ;main.c: 120: if (hack == 1) {
  1712  0018E4  0430               	decf	uds_get_vin@hack,w,c
  1713  0018E6  1031               	iorwf	uds_get_vin@hack+1,w,c
  1714  0018E8  A4D8               	btfss	status,2,c
  1715  0018EA  D01B               	goto	l4696
  1716                           
  1717                           ;main.c: 122: if (!ECANSendMessage(0x7E0, msg_continue, 8, 0)) {
  1718  0018EC  0EE0               	movlw	224
  1719  0018EE  6E0E               	movwf	ECANSendMessage@id,c
  1720  0018F0  0E07               	movlw	7
  1721  0018F2  6E0F               	movwf	ECANSendMessage@id+1,c
  1722  0018F4  0E00               	movlw	0
  1723  0018F6  6E10               	movwf	ECANSendMessage@id+2,c
  1724  0018F8  0E00               	movlw	0
  1725  0018FA  6E11               	movwf	ECANSendMessage@id+3,c
  1726  0018FC  0E68               	movlw	low uds_get_vin@msg_continue
  1727  0018FE  6E12               	movwf	ECANSendMessage@data,c
  1728  001900  0E00               	movlw	high uds_get_vin@msg_continue
  1729  001902  6E13               	movwf	ECANSendMessage@data+1,c
  1730  001904  0E08               	movlw	8
  1731  001906  6E14               	movwf	ECANSendMessage@dataLen,c
  1732  001908  0E00               	movlw	0
  1733  00190A  6E15               	movwf	ECANSendMessage@msgFlags,c
  1734  00190C  EC5E  F010         	call	_ECANSendMessage	;wreg free
  1735  001910  0900               	iorlw	0
  1736  001912  A4D8               	btfss	status,2,c
  1737  001914  D006               	goto	l4696
  1738                           
  1739                           ;main.c: 123: PutString("\nerror: can send failed\n");
  1740  001916  0E6F               	movlw	low STR_9
  1741  001918  6E05               	movwf	PutString@mess,c
  1742  00191A  0E7F               	movlw	high STR_9
  1743  00191C  6E06               	movwf	PutString@mess+1,c
  1744  00191E  EC13  F015         	call	_PutString	;wreg free
  1745  001922                     l4696:
  1746                           
  1747                           ;main.c: 124: };main.c: 125: };main.c: 129: for(int t = 0; t < 20; t++) {
  1748  001922  0E00               	movlw	0
  1749  001924  0100               	movlb	0	; () banked
  1750  001926  6F95               	movwf	(uds_get_vin@t+1)& (0+255),b
  1751  001928  0E00               	movlw	0
  1752  00192A  6F94               	movwf	uds_get_vin@t& (0+255),b
  1753  00192C                     l4702:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 130: alive(2);
  1757  00192C  0E00               	movlw	0
  1758  00192E  6E04               	movwf	alive@j+1,c
  1759  001930  0E02               	movlw	2
  1760  001932  6E03               	movwf	alive@j,c
  1761  001934  EC94  F014         	call	_alive	;wreg free
  1762                           
  1763                           ;main.c: 131: if (ECANReceiveMessage(&id, msg2, &len, &flags)) {
  1764  001938  0E99               	movlw	low uds_get_vin@id
  1765  00193A  6E0C               	movwf	ECANReceiveMessage@id,c
  1766  00193C  0E00               	movlw	high uds_get_vin@id
  1767  00193E  6E0D               	movwf	ECANReceiveMessage@id+1,c
  1768  001940  0E70               	movlw	low uds_get_vin@msg2
  1769  001942  6E0E               	movwf	ECANReceiveMessage@data,c
  1770  001944  0E00               	movlw	high uds_get_vin@msg2
  1771  001946  6E0F               	movwf	ECANReceiveMessage@data+1,c
  1772  001948  0E96               	movlw	low uds_get_vin@len
  1773  00194A  6E10               	movwf	ECANReceiveMessage@dataLen,c
  1774  00194C  0E00               	movlw	high uds_get_vin@len
  1775  00194E  6E11               	movwf	ECANReceiveMessage@dataLen+1,c
  1776  001950  0E98               	movlw	low uds_get_vin@flags
  1777  001952  6E12               	movwf	ECANReceiveMessage@msgFlags,c
  1778  001954  0E00               	movlw	high uds_get_vin@flags
  1779  001956  6E13               	movwf	ECANReceiveMessage@msgFlags+1,c
  1780  001958  EC11  F00F         	call	_ECANReceiveMessage	;wreg free
  1781  00195C  0900               	iorlw	0
  1782  00195E  B4D8               	btfsc	status,2,c
  1783  001960  D024               	goto	u5250
  1784                           
  1785                           ;main.c: 132: if (id == 0x7E8 ) {
  1786  001962  0EE8               	movlw	232
  1787  001964  0100               	movlb	0	; () banked
  1788  001966  1999               	xorwf	uds_get_vin@id& (0+255),w,b
  1789  001968  E120               	bnz	l4726
  1790  00196A  0E07               	movlw	7
  1791  00196C  199A               	xorwf	(uds_get_vin@id+1)& (0+255),w,b
  1792  00196E  119B               	iorwf	(uds_get_vin@id+2)& (0+255),w,b
  1793  001970  119C               	iorwf	(uds_get_vin@id+3)& (0+255),w,b
  1794  001972  A4D8               	btfss	status,2,c
  1795  001974  D01A               	goto	u5250
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;main.c: 133: for (unsigned char i = 1; i < 8; i++) {
  1799  001976  0E01               	movlw	1
  1800  001978  6F97               	movwf	uds_get_vin@i_336& (0+255),b
  1801  00197A                     l4714:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;main.c: 134: Putchar(msg2[i]);
  1805  00197A  0E70               	movlw	low uds_get_vin@msg2
  1806  00197C  2597               	addwf	uds_get_vin@i_336& (0+255),w,b
  1807  00197E  6ED9               	movwf	fsr2l,c
  1808  001980  6ADA               	clrf	fsr2h,c
  1809  001982  0E00               	movlw	high uds_get_vin@msg2
  1810  001984  22DA               	addwfc	fsr2h,f,c
  1811  001986  50DF               	movf	indf2,w,c
  1812  001988  ECFA  F015         	call	_Putchar
  1813                           
  1814                           ;main.c: 135: total_size -= 1;
  1815  00198C  0100               	movlb	0	; () banked
  1816  00198E  0790               	decf	uds_get_vin@total_size& (0+255),f,b
  1817  001990  A0D8               	btfss	status,0,c
  1818  001992  0791               	decf	(uds_get_vin@total_size+1)& (0+255),f,b
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;main.c: 136: if (total_size <=0) {
  1822  001994  BF91               	btfsc	(uds_get_vin@total_size+1)& (0+255),7,b
  1823  001996  D01B               	goto	l4734
  1824  001998  5191               	movf	(uds_get_vin@total_size+1)& (0+255),w,b
  1825  00199A  E103               	bnz	l4722
  1826  00199C  0590               	decf	uds_get_vin@total_size& (0+255),w,b
  1827  00199E  A0D8               	btfss	status,0,c
  1828  0019A0  D016               	goto	l4734
  1829  0019A2                     l4722:
  1830                           
  1831                           ; BSR set to: 0
  1832  0019A2  2B97               	incf	uds_get_vin@i_336& (0+255),f,b
  1833                           
  1834                           ; BSR set to: 0
  1835  0019A4  0E07               	movlw	7
  1836  0019A6  6597               	cpfsgt	uds_get_vin@i_336& (0+255),b
  1837  0019A8  D7E8               	goto	l4714
  1838  0019AA                     u5250:
  1839  0019AA                     l4726:
  1840  0019AA  0100               	movlb	0	; () banked
  1841  0019AC  4B94               	infsnz	uds_get_vin@t& (0+255),f,b
  1842  0019AE  2B95               	incf	(uds_get_vin@t+1)& (0+255),f,b
  1843                           
  1844                           ; BSR set to: 0
  1845  0019B0  BF95               	btfsc	(uds_get_vin@t+1)& (0+255),7,b
  1846  0019B2  D7BC               	goto	l4702
  1847  0019B4  5195               	movf	(uds_get_vin@t+1)& (0+255),w,b
  1848  0019B6  E104               	bnz	u5260
  1849  0019B8  0E14               	movlw	20
  1850  0019BA  5D94               	subwf	uds_get_vin@t& (0+255),w,b
  1851  0019BC  A0D8               	btfss	status,0,c
  1852  0019BE  D7B6               	goto	l4702
  1853  0019C0                     u5260:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;main.c: 138: };main.c: 139: };main.c: 140: };main.c: 141: };main.c: 142: };main.c: 144:
      +                           PutString("error: timeout\n");
  1857  0019C0  0ED4               	movlw	low STR_5
  1858  0019C2  6E05               	movwf	PutString@mess,c
  1859  0019C4  0E7F               	movlw	high STR_5
  1860  0019C6  6E06               	movwf	PutString@mess+1,c
  1861  0019C8  EC13  F015         	call	_PutString	;wreg free
  1862  0019CC  0012               	return	
  1863  0019CE                     l4734:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 148: Putchar('\n');
  1867  0019CE  0E0A               	movlw	10
  1868  0019D0  ECFA  F015         	call	_Putchar
  1869  0019D4  0012               	return		;funcret
  1870  0019D6                     __end_of_uds_get_vin:
  1871                           	opt callstack 0
  1872                           
  1873 ;; *************** function _uds_get_soc *****************
  1874 ;; Defined at:
  1875 ;;		line 39 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  i               2  173[BANK1 ] int 
  1880 ;;  buf           128    0[BANK1 ] unsigned char [128]
  1881 ;;  msg2           32  128[BANK1 ] unsigned char [32]
  1882 ;;  msg             8  160[BANK1 ] unsigned char [8]
  1883 ;;  id              4  176[BANK1 ] unsigned long 
  1884 ;;  flags           1  175[BANK1 ] enum E12300
  1885 ;;  len             1  172[BANK1 ] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Locals:         0       0     180       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;      Totals:         0       0     180       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1899 ;;Total ram usage:      180 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    5
  1902 ;; This function calls:
  1903 ;;		_ECANReceiveMessage
  1904 ;;		_ECANSendMessage
  1905 ;;		_PutString
  1906 ;;		___fldiv
  1907 ;;		___xxtofl
  1908 ;;		_alive
  1909 ;;		_sprintf
  1910 ;; This function is called by:
  1911 ;;		_shell
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text3
  1916  0019D6                     __ptext3:
  1917                           	opt callstack 0
  1918  0019D6                     _uds_get_soc:
  1919                           	opt callstack 24
  1920                           
  1921                           ;main.c: 40: PutString("status: send can\n");
  1922                           
  1923                           ;incstack = 0
  1924  0019D6  0EB0               	movlw	low STR_1
  1925  0019D8  6E05               	movwf	PutString@mess,c
  1926  0019DA  0E7F               	movlw	high STR_1
  1927  0019DC  6E06               	movwf	PutString@mess+1,c
  1928  0019DE  EC13  F015         	call	_PutString	;wreg free
  1929                           
  1930                           ;main.c: 41: BYTE msg[] = {0x03, 0x22, 0x1D, 0xD0, 0x55, 0x55, 0x55, 0x55};
  1931  0019E2  EE21  F0B4         	lfsr	2,uds_get_soc@F12336
  1932  0019E6  EE11  F0A0         	lfsr	1,uds_get_soc@msg
  1933  0019EA  0E07               	movlw	7
  1934  0019EC                     u5021:
  1935  0019EC  CFDB FFE3          	movff	plusw2,plusw1
  1936  0019F0  06E8               	decf	wreg,f,c
  1937  0019F2  E2FC               	bc	u5021
  1938                           
  1939                           ;main.c: 42: if (!ECANSendMessage(0x765, msg, 8, 0)) {
  1940  0019F4  0E65               	movlw	101
  1941  0019F6  6E0E               	movwf	ECANSendMessage@id,c
  1942  0019F8  0E07               	movlw	7
  1943  0019FA  6E0F               	movwf	ECANSendMessage@id+1,c
  1944  0019FC  0E00               	movlw	0
  1945  0019FE  6E10               	movwf	ECANSendMessage@id+2,c
  1946  001A00  0E00               	movlw	0
  1947  001A02  6E11               	movwf	ECANSendMessage@id+3,c
  1948  001A04  0EA0               	movlw	low uds_get_soc@msg
  1949  001A06  6E12               	movwf	ECANSendMessage@data,c
  1950  001A08  0E01               	movlw	high uds_get_soc@msg
  1951  001A0A  6E13               	movwf	ECANSendMessage@data+1,c
  1952  001A0C  0E08               	movlw	8
  1953  001A0E  6E14               	movwf	ECANSendMessage@dataLen,c
  1954  001A10  0E00               	movlw	0
  1955  001A12  6E15               	movwf	ECANSendMessage@msgFlags,c
  1956  001A14  EC5E  F010         	call	_ECANSendMessage	;wreg free
  1957  001A18  0900               	iorlw	0
  1958  001A1A  A4D8               	btfss	status,2,c
  1959  001A1C  D006               	goto	l4594
  1960                           
  1961                           ;main.c: 43: PutString("error: can send failed\n");
  1962  001A1E  0E70               	movlw	low (STR_9+1)
  1963  001A20  6E05               	movwf	PutString@mess,c
  1964  001A22  0E7F               	movlw	high (STR_9+1)
  1965  001A24  6E06               	movwf	PutString@mess+1,c
  1966  001A26  EC13  F015         	call	_PutString	;wreg free
  1967  001A2A                     l4594:
  1968                           
  1969                           ;main.c: 44: };main.c: 46: unsigned long id = 0;
  1970  001A2A  0E00               	movlw	0
  1971  001A2C  0101               	movlb	1	; () banked
  1972  001A2E  6FB0               	movwf	uds_get_soc@id& (0+255),b
  1973  001A30  0E00               	movlw	0
  1974  001A32  6FB1               	movwf	(uds_get_soc@id+1)& (0+255),b
  1975  001A34  0E00               	movlw	0
  1976  001A36  6FB2               	movwf	(uds_get_soc@id+2)& (0+255),b
  1977  001A38  0E00               	movlw	0
  1978  001A3A  6FB3               	movwf	(uds_get_soc@id+3)& (0+255),b
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main.c: 47: BYTE len = 32;
  1982  001A3C  0E20               	movlw	32
  1983  001A3E  6FAC               	movwf	uds_get_soc@len& (0+255),b
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;main.c: 48: ECAN_RX_MSG_FLAGS flags = 0;
  1987  001A40  0E00               	movlw	0
  1988  001A42  6FAF               	movwf	uds_get_soc@flags& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main.c: 49: BYTE msg2[32];;main.c: 50: BYTE buf[128];;main.c: 53: for(int i = 0; i < 10
      +                          ; i++) {
  1992  001A44  0E00               	movlw	0
  1993  001A46  6FAE               	movwf	(uds_get_soc@i+1)& (0+255),b
  1994  001A48  0E00               	movlw	0
  1995  001A4A  6FAD               	movwf	uds_get_soc@i& (0+255),b
  1996  001A4C                     l4606:
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main.c: 54: alive(2);
  2000  001A4C  0E00               	movlw	0
  2001  001A4E  6E04               	movwf	alive@j+1,c
  2002  001A50  0E02               	movlw	2
  2003  001A52  6E03               	movwf	alive@j,c
  2004  001A54  EC94  F014         	call	_alive	;wreg free
  2005                           
  2006                           ;main.c: 55: PutString("status: recv can\n");
  2007  001A58  0EC2               	movlw	low STR_3
  2008  001A5A  6E05               	movwf	PutString@mess,c
  2009  001A5C  0E7F               	movlw	high STR_3
  2010  001A5E  6E06               	movwf	PutString@mess+1,c
  2011  001A60  EC13  F015         	call	_PutString	;wreg free
  2012                           
  2013                           ;main.c: 56: if (ECANReceiveMessage(&id, msg2, &len, &flags)) {
  2014  001A64  0EB0               	movlw	low uds_get_soc@id
  2015  001A66  6E0C               	movwf	ECANReceiveMessage@id,c
  2016  001A68  0E01               	movlw	high uds_get_soc@id
  2017  001A6A  6E0D               	movwf	ECANReceiveMessage@id+1,c
  2018  001A6C  0E80               	movlw	low uds_get_soc@msg2
  2019  001A6E  6E0E               	movwf	ECANReceiveMessage@data,c
  2020  001A70  0E01               	movlw	high uds_get_soc@msg2
  2021  001A72  6E0F               	movwf	ECANReceiveMessage@data+1,c
  2022  001A74  0EAC               	movlw	low uds_get_soc@len
  2023  001A76  6E10               	movwf	ECANReceiveMessage@dataLen,c
  2024  001A78  0E01               	movlw	high uds_get_soc@len
  2025  001A7A  6E11               	movwf	ECANReceiveMessage@dataLen+1,c
  2026  001A7C  0EAF               	movlw	low uds_get_soc@flags
  2027  001A7E  6E12               	movwf	ECANReceiveMessage@msgFlags,c
  2028  001A80  0E01               	movlw	high uds_get_soc@flags
  2029  001A82  6E13               	movwf	ECANReceiveMessage@msgFlags+1,c
  2030  001A84  EC11  F00F         	call	_ECANReceiveMessage	;wreg free
  2031  001A88  0900               	iorlw	0
  2032  001A8A  B4D8               	btfsc	status,2,c
  2033  001A8C  D04D               	goto	l4626
  2034                           
  2035                           ;main.c: 57: if (id == 0x7CF && msg2[0] == 0x04 && msg2[1] == 0x62) {
  2036  001A8E  0ECF               	movlw	207
  2037  001A90  0101               	movlb	1	; () banked
  2038  001A92  19B0               	xorwf	uds_get_soc@id& (0+255),w,b
  2039  001A94  E149               	bnz	l4626
  2040  001A96  0E07               	movlw	7
  2041  001A98  19B1               	xorwf	(uds_get_soc@id+1)& (0+255),w,b
  2042  001A9A  11B2               	iorwf	(uds_get_soc@id+2)& (0+255),w,b
  2043  001A9C  11B3               	iorwf	(uds_get_soc@id+3)& (0+255),w,b
  2044  001A9E  A4D8               	btfss	status,2,c
  2045  001AA0  D043               	goto	l4626
  2046                           
  2047                           ; BSR set to: 1
  2048  001AA2  0E04               	movlw	4
  2049  001AA4  1980               	xorwf	uds_get_soc@msg2& (0+255),w,b
  2050  001AA6  A4D8               	btfss	status,2,c
  2051  001AA8  D03F               	goto	l4626
  2052                           
  2053                           ; BSR set to: 1
  2054  001AAA  0E62               	movlw	98
  2055  001AAC  1981               	xorwf	(uds_get_soc@msg2+1)& (0+255),w,b
  2056  001AAE  A4D8               	btfss	status,2,c
  2057  001AB0  D03B               	goto	l4626
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;main.c: 58: sprintf(buf, "value soc: %.1f %%\n", (msg2[4] / 2.0));
  2061  001AB2  5184               	movf	(uds_get_soc@msg2+4)& (0+255),w,b
  2062  001AB4  6E03               	movwf	___xxtofl@val,c
  2063  001AB6  6A04               	clrf	___xxtofl@val+1,c
  2064  001AB8  6A05               	clrf	___xxtofl@val+2,c
  2065  001ABA  6A06               	clrf	___xxtofl@val+3,c
  2066  001ABC  0E00               	movlw	0
  2067  001ABE  ECBE  F00F         	call	___xxtofl
  2068  001AC2  C003  F011         	movff	?___xxtofl,___fldiv@b
  2069  001AC6  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2070  001ACA  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2071  001ACE  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2072  001AD2  0E00               	movlw	0
  2073  001AD4  6E15               	movwf	___fldiv@a,c
  2074  001AD6  0E00               	movlw	0
  2075  001AD8  6E16               	movwf	___fldiv@a+1,c
  2076  001ADA  0E00               	movlw	0
  2077  001ADC  6E17               	movwf	___fldiv@a+2,c
  2078  001ADE  0E40               	movlw	64
  2079  001AE0  6E18               	movwf	___fldiv@a+3,c
  2080  001AE2  EC69  F00A         	call	___fldiv	;wreg free
  2081  001AE6  C011  F1A8         	movff	?___fldiv,_uds_get_soc$1885
  2082  001AEA  C012  F1A9         	movff	?___fldiv+1,_uds_get_soc$1885+1
  2083  001AEE  C013  F1AA         	movff	?___fldiv+2,_uds_get_soc$1885+2
  2084  001AF2  C014  F1AB         	movff	?___fldiv+3,_uds_get_soc$1885+3
  2085                           
  2086                           ;main.c: 58: sprintf(buf, "value soc: %.1f %%\n", (msg2[4] / 2.0));
  2087  001AF6  0E00               	movlw	low uds_get_soc@buf
  2088  001AF8  6E4F               	movwf	sprintf@sp,c
  2089  001AFA  0E01               	movlw	high uds_get_soc@buf
  2090  001AFC  6E50               	movwf	sprintf@sp+1,c
  2091  001AFE  0E88               	movlw	low STR_4
  2092  001B00  6E51               	movwf	sprintf@f,c
  2093  001B02  0E7F               	movlw	high STR_4
  2094  001B04  6E52               	movwf	sprintf@f+1,c
  2095  001B06  C1A8  F053         	movff	_uds_get_soc$1885,?_sprintf+4
  2096  001B0A  C1A9  F054         	movff	_uds_get_soc$1885+1,?_sprintf+5
  2097  001B0E  C1AA  F055         	movff	_uds_get_soc$1885+2,?_sprintf+6
  2098  001B12  C1AB  F056         	movff	_uds_get_soc$1885+3,?_sprintf+7
  2099  001B16  EC1E  F000         	call	_sprintf	;wreg free
  2100                           
  2101                           ;main.c: 59: PutString(buf);
  2102  001B1A  0E00               	movlw	low uds_get_soc@buf
  2103  001B1C  6E05               	movwf	PutString@mess,c
  2104  001B1E  0E01               	movlw	high uds_get_soc@buf
  2105  001B20  6E06               	movwf	PutString@mess+1,c
  2106  001B22  EC13  F015         	call	_PutString	;wreg free
  2107  001B26  0012               	return	
  2108  001B28                     l4626:
  2109  001B28  0101               	movlb	1	; () banked
  2110  001B2A  4BAD               	infsnz	uds_get_soc@i& (0+255),f,b
  2111  001B2C  2BAE               	incf	(uds_get_soc@i+1)& (0+255),f,b
  2112                           
  2113                           ; BSR set to: 1
  2114  001B2E  BFAE               	btfsc	(uds_get_soc@i+1)& (0+255),7,b
  2115  001B30  D78D               	goto	l4606
  2116  001B32  51AE               	movf	(uds_get_soc@i+1)& (0+255),w,b
  2117  001B34  E104               	bnz	u5080
  2118  001B36  0E0A               	movlw	10
  2119  001B38  5DAD               	subwf	uds_get_soc@i& (0+255),w,b
  2120  001B3A  A0D8               	btfss	status,0,c
  2121  001B3C  D787               	goto	l4606
  2122  001B3E                     u5080:
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;main.c: 61: };main.c: 62: };main.c: 63: };main.c: 64: PutString("error: timeout\n");
  2126  001B3E  0ED4               	movlw	low STR_5
  2127  001B40  6E05               	movwf	PutString@mess,c
  2128  001B42  0E7F               	movlw	high STR_5
  2129  001B44  6E06               	movwf	PutString@mess+1,c
  2130  001B46  EC13  F015         	call	_PutString	;wreg free
  2131  001B4A  0012               	return		;funcret
  2132  001B4C                     __end_of_uds_get_soc:
  2133                           	opt callstack 0
  2134                           
  2135 ;; *************** function _sprintf *****************
  2136 ;; Defined at:
  2137 ;;		line 500 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  sp              2   78[COMRAM] PTR unsigned char 
  2140 ;;		 -> uds_get_soc@buf(128), 
  2141 ;;  f               2   80[COMRAM] PTR const unsigned char 
  2142 ;;		 -> STR_4(20), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  fval            4   22[BANK0 ] PTR const unsigned char 
  2145 ;;  tmpval          4   18[BANK0 ] struct .
  2146 ;;  val             4   12[BANK0 ] unsigned long 
  2147 ;;  prec            2   26[BANK0 ] int 
  2148 ;;  eexp            2   16[BANK0 ] int 
  2149 ;;  flag            2   10[BANK0 ] unsigned short 
  2150 ;;  len             2    8[BANK0 ] unsigned int 
  2151 ;;  cp              2    6[BANK0 ] PTR const unsigned char 
  2152 ;;		 -> sprintf@c(1), 
  2153 ;;  ap              2    4[BANK0 ] PTR void [1]
  2154 ;;		 -> ?_sprintf(2), 
  2155 ;;  width           2    0        int 
  2156 ;;  c               1   28[BANK0 ] unsigned char 
  2157 ;;  d               1    0        unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  2   78[COMRAM] int 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2167 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;      Totals:        11      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;Total ram usage:       40 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    4
  2174 ;; This function calls:
  2175 ;;		___awdiv
  2176 ;;		___fladd
  2177 ;;		___fleq
  2178 ;;		___flge
  2179 ;;		___flmul
  2180 ;;		___flneg
  2181 ;;		___flsub
  2182 ;;		___fltol
  2183 ;;		___lldiv
  2184 ;;		___llmod
  2185 ;;		___wmul
  2186 ;;		___xxtofl
  2187 ;;		__div_to_l_
  2188 ;;		__tdiv_to_l_
  2189 ;;		_fround
  2190 ;;		_isdigit
  2191 ;;		_scale
  2192 ;; This function is called by:
  2193 ;;		_uds_get_soc
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text4
  2198  00003C                     __ptext4:
  2199                           	opt callstack 0
  2200  00003C                     _sprintf:
  2201                           	opt callstack 24
  2202                           
  2203                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  2204                           
  2205                           ;incstack = 0
  2206  00003C  0E53               	movlw	low (?_sprintf+4)
  2207  00003E  0100               	movlb	0	; () banked
  2208  000040  6F64               	movwf	sprintf@ap& (0+255),b
  2209  000042  0E00               	movlw	high (?_sprintf+4)
  2210  000044  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  2211                           
  2212                           ;doprnt.c: 548: while((c = *f++)) {
  2213  000046  D3D6               	goto	l4442
  2214  000048                     l4226:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;doprnt.c: 550: if(c != '%')
  2218  000048  0E25               	movlw	37
  2219  00004A  197C               	xorwf	sprintf@c& (0+255),w,b
  2220  00004C  B4D8               	btfsc	status,2,c
  2221  00004E  D009               	goto	l4232
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  2225  000050  C04F  FFD9         	movff	sprintf@sp,fsr2l
  2226  000054  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  2227  000058  C07C  FFDF         	movff	sprintf@c,indf2
  2228  00005C                     l4230:
  2229                           
  2230                           ; BSR set to: 0
  2231  00005C  4A4F               	infsnz	sprintf@sp,f,c
  2232  00005E  2A50               	incf	sprintf@sp+1,f,c
  2233                           
  2234                           ;doprnt.c: 554: continue;
  2235  000060  D3C9               	goto	l4442
  2236  000062                     l4232:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;doprnt.c: 555: };doprnt.c: 560: flag = 0;
  2240  000062  0E00               	movlw	0
  2241  000064  6F6B               	movwf	(sprintf@flag+1)& (0+255),b
  2242  000066  0E00               	movlw	0
  2243  000068  6F6A               	movwf	sprintf@flag& (0+255),b
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;doprnt.c: 623: if(*f == '.') {
  2247  00006A  C051  FFF6         	movff	sprintf@f,tblptrl
  2248  00006E  C052  FFF7         	movff	sprintf@f+1,tblptrh
  2249  000072                     	if	0	;tblptru may be non-zero
  2250  000072                     	endif
  2251  000072                     	if	0	;tblptru may be non-zero
  2252  000072                     	endif
  2253  000072  0008               	tblrd		*
  2254  000074  50F5               	movf	tablat,w,c
  2255  000076  0A2E               	xorlw	46
  2256  000078  A4D8               	btfss	status,2,c
  2257  00007A  D02F               	goto	l4246
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;doprnt.c: 624: flag |= 0x4000;
  2261  00007C  8D6B               	bsf	(sprintf@flag+1)& (0+255),6,b
  2262                           
  2263                           ;doprnt.c: 625: f++;
  2264  00007E  4A51               	infsnz	sprintf@f,f,c
  2265  000080  2A52               	incf	sprintf@f+1,f,c
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  2269  000082  0E00               	movlw	0
  2270  000084  6F7B               	movwf	(sprintf@prec+1)& (0+255),b
  2271  000086  0E00               	movlw	0
  2272  000088  6F7A               	movwf	sprintf@prec& (0+255),b
  2273                           
  2274                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  2275  00008A  D01C               	goto	l4244
  2276  00008C                     l4240:
  2277                           
  2278                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  2279  00008C  C07A  F003         	movff	sprintf@prec,___wmul@multiplier
  2280  000090  C07B  F004         	movff	sprintf@prec+1,___wmul@multiplier+1
  2281  000094  0E00               	movlw	0
  2282  000096  6E06               	movwf	___wmul@multiplicand+1,c
  2283  000098  0E0A               	movlw	10
  2284  00009A  6E05               	movwf	___wmul@multiplicand,c
  2285  00009C  ECBE  F015         	call	___wmul	;wreg free
  2286  0000A0  C051  FFF6         	movff	sprintf@f,tblptrl
  2287  0000A4  C052  FFF7         	movff	sprintf@f+1,tblptrh
  2288  0000A8                     	if	0	;tblptru may be non-zero
  2289  0000A8                     	endif
  2290  0000A8                     	if	0	;tblptru may be non-zero
  2291  0000A8                     	endif
  2292  0000A8  0008               	tblrd		*
  2293  0000AA  50F5               	movf	tablat,w,c
  2294  0000AC  2603               	addwf	?___wmul,f,c
  2295  0000AE  0E00               	movlw	0
  2296  0000B0  2204               	addwfc	?___wmul+1,f,c
  2297  0000B2  0ED0               	movlw	208
  2298  0000B4  2403               	addwf	?___wmul,w,c
  2299  0000B6  0100               	movlb	0	; () banked
  2300  0000B8  6F7A               	movwf	sprintf@prec& (0+255),b
  2301  0000BA  0EFF               	movlw	255
  2302  0000BC  2004               	addwfc	?___wmul+1,w,c
  2303  0000BE  6F7B               	movwf	(sprintf@prec+1)& (0+255),b
  2304                           
  2305                           ; BSR set to: 0
  2306  0000C0  4A51               	infsnz	sprintf@f,f,c
  2307  0000C2  2A52               	incf	sprintf@f+1,f,c
  2308  0000C4                     l4244:
  2309                           
  2310                           ; BSR set to: 0
  2311  0000C4  C051  FFF6         	movff	sprintf@f,tblptrl
  2312  0000C8  C052  FFF7         	movff	sprintf@f+1,tblptrh
  2313  0000CC                     	if	0	;tblptru may be non-zero
  2314  0000CC                     	endif
  2315  0000CC                     	if	0	;tblptru may be non-zero
  2316  0000CC                     	endif
  2317  0000CC  0008               	tblrd		*
  2318  0000CE  50F5               	movf	tablat,w,c
  2319  0000D0  ECD1  F015         	call	_isdigit
  2320  0000D4  A0D8               	btfss	status,0,c
  2321  0000D6  D036               	goto	l4272
  2322  0000D8  D7D9               	goto	l4240
  2323  0000DA                     l4246:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;doprnt.c: 645: prec = 0;
  2327  0000DA  0E00               	movlw	0
  2328  0000DC  6F7B               	movwf	(sprintf@prec+1)& (0+255),b
  2329  0000DE  0E00               	movlw	0
  2330  0000E0  6F7A               	movwf	sprintf@prec& (0+255),b
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;doprnt.c: 647: flag |= 0x1000;
  2334  0000E2  896B               	bsf	(sprintf@flag+1)& (0+255),4,b
  2335  0000E4  D02F               	goto	l4272
  2336  0000E6                     l4250:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;doprnt.c: 682: flag |= 0x400;
  2340  0000E6  856B               	bsf	(sprintf@flag+1)& (0+255),2,b
  2341                           
  2342                           ;doprnt.c: 683: break;
  2343  0000E8  D03F               	goto	l4274
  2344  0000EA                     l4252:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;doprnt.c: 772: if(prec && prec < len)
  2348  0000EA  517A               	movf	sprintf@prec& (0+255),w,b
  2349  0000EC  117B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2350  0000EE  B4D8               	btfsc	status,2,c
  2351  0000F0  D017               	goto	l4264
  2352                           
  2353                           ; BSR set to: 0
  2354  0000F2  517A               	movf	sprintf@prec& (0+255),w,b
  2355  0000F4  117B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2356  0000F6  A4D8               	btfss	status,2,c
  2357  0000F8  D013               	goto	l4264
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;doprnt.c: 773: len = prec;
  2361  0000FA  C07A  F068         	movff	sprintf@prec,sprintf@len
  2362  0000FE  C07B  F069         	movff	sprintf@prec+1,sprintf@len+1
  2363  000102  D00E               	goto	l4264
  2364  000104                     l4258:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;doprnt.c: 787: ((*sp++ = (*cp++)));
  2368  000104  C066  FFD9         	movff	sprintf@cp,fsr2l
  2369  000108  C067  FFDA         	movff	sprintf@cp+1,fsr2h
  2370  00010C  C04F  FFE1         	movff	sprintf@sp,fsr1l
  2371  000110  C050  FFE2         	movff	sprintf@sp+1,fsr1h
  2372  000114  CFDF FFE7          	movff	indf2,indf1
  2373                           
  2374                           ; BSR set to: 0
  2375  000118  4B66               	infsnz	sprintf@cp& (0+255),f,b
  2376  00011A  2B67               	incf	(sprintf@cp+1)& (0+255),f,b
  2377                           
  2378                           ; BSR set to: 0
  2379  00011C  4A4F               	infsnz	sprintf@sp,f,c
  2380  00011E  2A50               	incf	sprintf@sp+1,f,c
  2381  000120                     l4264:
  2382                           
  2383                           ; BSR set to: 0
  2384  000120  0768               	decf	sprintf@len& (0+255),f,b
  2385  000122  A0D8               	btfss	status,0,c
  2386  000124  0769               	decf	(sprintf@len+1)& (0+255),f,b
  2387  000126  2968               	incf	sprintf@len& (0+255),w,b
  2388  000128  E1ED               	bnz	l4258
  2389  00012A  2969               	incf	(sprintf@len+1)& (0+255),w,b
  2390  00012C  B4D8               	btfsc	status,2,c
  2391  00012E  D362               	goto	l4442
  2392  000130  D7E9               	goto	l4258
  2393  000132                     l4266:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;doprnt.c: 824: cp = (char *)&c;
  2397  000132  0E7C               	movlw	low sprintf@c
  2398  000134  6F66               	movwf	sprintf@cp& (0+255),b
  2399  000136  0E00               	movlw	high sprintf@c
  2400  000138  6F67               	movwf	(sprintf@cp+1)& (0+255),b
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;doprnt.c: 825: len = 1;
  2404  00013A  0E00               	movlw	0
  2405  00013C  6F69               	movwf	(sprintf@len+1)& (0+255),b
  2406  00013E  0E01               	movlw	1
  2407  000140  6F68               	movwf	sprintf@len& (0+255),b
  2408                           
  2409                           ;doprnt.c: 826: goto dostring;
  2410  000142  D7D3               	goto	l4252
  2411  000144                     l4272:
  2412  000144  C051  FFF6         	movff	sprintf@f,tblptrl
  2413  000148  C052  FFF7         	movff	sprintf@f+1,tblptrh
  2414  00014C  4A51               	infsnz	sprintf@f,f,c
  2415  00014E  2A52               	incf	sprintf@f+1,f,c
  2416  000150                     	if	0	;tblptru may be non-zero
  2417  000150                     	endif
  2418  000150                     	if	0	;tblptru may be non-zero
  2419  000150                     	endif
  2420  000150  0008               	tblrd		*
  2421  000152  CFF5 F07C          	movff	tablat,sprintf@c
  2422  000156  0100               	movlb	0	; () banked
  2423  000158  517C               	movf	sprintf@c& (0+255),w,b
  2424                           
  2425                           ; Switch size 1, requested type "simple"
  2426                           ; Number of cases is 2, Range of values is 0 to 102
  2427                           ; switch strategies available:
  2428                           ; Name         Instructions Cycles
  2429                           ; simple_byte            7     4 (average)
  2430                           ;	Chosen strategy is simple_byte
  2431  00015A  0A00               	xorlw	0	; case 0
  2432  00015C  B4D8               	btfsc	status,2,c
  2433  00015E  D356               	goto	u4780
  2434  000160  0A66               	xorlw	102	; case 102
  2435  000162  B4D8               	btfsc	status,2,c
  2436  000164  D7C0               	goto	l4250
  2437  000166  D7E5               	goto	l4266
  2438  000168                     l4274:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;doprnt.c: 844: if(flag & (0x700)) {
  2442  000168  0E07               	movlw	7
  2443  00016A  156B               	andwf	(sprintf@flag+1)& (0+255),w,b
  2444  00016C  B4D8               	btfsc	status,2,c
  2445  00016E  D30D               	goto	l4422
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;doprnt.c: 846: if(flag & 0x1000)
  2449  000170  A96B               	btfss	(sprintf@flag+1)& (0+255),4,b
  2450  000172  D004               	goto	l4280
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;doprnt.c: 848: prec = 6;
  2454  000174  0E00               	movlw	0
  2455  000176  6F7B               	movwf	(sprintf@prec+1)& (0+255),b
  2456  000178  0E06               	movlw	6
  2457  00017A  6F7A               	movwf	sprintf@prec& (0+255),b
  2458  00017C                     l4280:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2462  00017C  C064  FFD9         	movff	sprintf@ap,fsr2l
  2463  000180  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  2464  000184  CFDE F076          	movff	postinc2,sprintf@fval
  2465  000188  CFDE F077          	movff	postinc2,sprintf@fval+1
  2466  00018C  CFDE F078          	movff	postinc2,sprintf@fval+2
  2467  000190  CFDE F079          	movff	postinc2,sprintf@fval+3
  2468                           
  2469                           ; BSR set to: 0
  2470  000194  0E04               	movlw	4
  2471  000196  2764               	addwf	sprintf@ap& (0+255),f,b
  2472  000198  0E00               	movlw	0
  2473  00019A  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;doprnt.c: 850: if(fval < 0.0) {
  2477  00019C  AF79               	btfss	(sprintf@fval+3)& (0+255),7,b
  2478  00019E  D015               	goto	l4290
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;doprnt.c: 851: fval = -fval;
  2482  0001A0  C076  F003         	movff	sprintf@fval,___flneg@f1
  2483  0001A4  C077  F004         	movff	sprintf@fval+1,___flneg@f1+1
  2484  0001A8  C078  F005         	movff	sprintf@fval+2,___flneg@f1+2
  2485  0001AC  C079  F006         	movff	sprintf@fval+3,___flneg@f1+3
  2486  0001B0  ECA7  F015         	call	___flneg	;wreg free
  2487  0001B4  C003  F076         	movff	?___flneg,sprintf@fval
  2488  0001B8  C004  F077         	movff	?___flneg+1,sprintf@fval+1
  2489  0001BC  C005  F078         	movff	?___flneg+2,sprintf@fval+2
  2490  0001C0  C006  F079         	movff	?___flneg+3,sprintf@fval+3
  2491                           
  2492                           ;doprnt.c: 852: flag |= 0x03;
  2493  0001C4  0E03               	movlw	3
  2494  0001C6  0100               	movlb	0	; () banked
  2495  0001C8  136A               	iorwf	sprintf@flag& (0+255),f,b
  2496  0001CA                     l4290:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  2500  0001CA  0E00               	movlw	0
  2501  0001CC  6F71               	movwf	(sprintf@eexp+1)& (0+255),b
  2502  0001CE  0E00               	movlw	0
  2503  0001D0  6F70               	movwf	sprintf@eexp& (0+255),b
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;doprnt.c: 855: if( fval!=0) {
  2507  0001D2  C076  F003         	movff	sprintf@fval,___fleq@ff1
  2508  0001D6  C077  F004         	movff	sprintf@fval+1,___fleq@ff1+1
  2509  0001DA  C078  F005         	movff	sprintf@fval+2,___fleq@ff1+2
  2510  0001DE  C079  F006         	movff	sprintf@fval+3,___fleq@ff1+3
  2511  0001E2  0E00               	movlw	0
  2512  0001E4  6E07               	movwf	___fleq@ff2,c
  2513  0001E6  0E00               	movlw	0
  2514  0001E8  6E08               	movwf	___fleq@ff2+1,c
  2515  0001EA  0E00               	movlw	0
  2516  0001EC  6E09               	movwf	___fleq@ff2+2,c
  2517  0001EE  0E00               	movlw	0
  2518  0001F0  6E0A               	movwf	___fleq@ff2+3,c
  2519  0001F2  ECF7  F012         	call	___fleq	;wreg free
  2520  0001F6  B0D8               	btfsc	status,0,c
  2521  0001F8  D083               	goto	l4318
  2522                           
  2523                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  2524  0001FA  0100               	movlb	0	; () banked
  2525  0001FC  3578               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2526  0001FE  3579               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2527  000200  0F82               	addlw	130
  2528  000202  6F70               	movwf	sprintf@eexp& (0+255),b
  2529  000204  6B71               	clrf	(sprintf@eexp+1)& (0+255),b
  2530  000206  0EFF               	movlw	255
  2531  000208  2371               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;doprnt.c: 857: eexp--;
  2535  00020A  0770               	decf	sprintf@eexp& (0+255),f,b
  2536  00020C  A0D8               	btfss	status,0,c
  2537  00020E  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;doprnt.c: 858: eexp *= 3;
  2541  000210  C070  F003         	movff	sprintf@eexp,___wmul@multiplier
  2542  000214  C071  F004         	movff	sprintf@eexp+1,___wmul@multiplier+1
  2543  000218  0E00               	movlw	0
  2544  00021A  6E06               	movwf	___wmul@multiplicand+1,c
  2545  00021C  0E03               	movlw	3
  2546  00021E  6E05               	movwf	___wmul@multiplicand,c
  2547  000220  ECBE  F015         	call	___wmul	;wreg free
  2548  000224  C003  F070         	movff	?___wmul,sprintf@eexp
  2549  000228  C004  F071         	movff	?___wmul+1,sprintf@eexp+1
  2550                           
  2551                           ;doprnt.c: 859: eexp /= 10;
  2552  00022C  C070  F009         	movff	sprintf@eexp,___awdiv@dividend
  2553  000230  C071  F00A         	movff	sprintf@eexp+1,___awdiv@dividend+1
  2554  000234  0E00               	movlw	0
  2555  000236  6E0C               	movwf	___awdiv@divisor+1,c
  2556  000238  0E0A               	movlw	10
  2557  00023A  6E0B               	movwf	___awdiv@divisor,c
  2558  00023C  EC3C  F013         	call	___awdiv	;wreg free
  2559  000240  C009  F070         	movff	?___awdiv,sprintf@eexp
  2560  000244  C00A  F071         	movff	?___awdiv+1,sprintf@eexp+1
  2561                           
  2562                           ;doprnt.c: 860: if(eexp < 0)
  2563  000248  0100               	movlb	0	; () banked
  2564  00024A  AF71               	btfss	(sprintf@eexp+1)& (0+255),7,b
  2565  00024C  D003               	goto	l4306
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;doprnt.c: 861: eexp--;
  2569  00024E  0770               	decf	sprintf@eexp& (0+255),f,b
  2570  000250  A0D8               	btfss	status,0,c
  2571  000252  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2572  000254                     l4306:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  2576  000254  5170               	movf	sprintf@eexp& (0+255),w,b
  2577  000256  0800               	sublw	0
  2578  000258  EC0D  F004         	call	_scale
  2579  00025C  C02A  F072         	movff	?_scale,sprintf@tmpval
  2580  000260  C02B  F073         	movff	?_scale+1,sprintf@tmpval+1
  2581  000264  C02C  F074         	movff	?_scale+2,sprintf@tmpval+2
  2582  000268  C02D  F075         	movff	?_scale+3,sprintf@tmpval+3
  2583                           
  2584                           ;doprnt.c: 866: tmpval.integ *= fval;
  2585  00026C  C072  F011         	movff	sprintf@tmpval,___flmul@b
  2586  000270  C073  F012         	movff	sprintf@tmpval+1,___flmul@b+1
  2587  000274  C074  F013         	movff	sprintf@tmpval+2,___flmul@b+2
  2588  000278  C075  F014         	movff	sprintf@tmpval+3,___flmul@b+3
  2589  00027C  C076  F015         	movff	sprintf@fval,___flmul@a
  2590  000280  C077  F016         	movff	sprintf@fval+1,___flmul@a+1
  2591  000284  C078  F017         	movff	sprintf@fval+2,___flmul@a+2
  2592  000288  C079  F018         	movff	sprintf@fval+3,___flmul@a+3
  2593  00028C  ECF5  F005         	call	___flmul	;wreg free
  2594  000290  C011  F072         	movff	?___flmul,sprintf@tmpval
  2595  000294  C012  F073         	movff	?___flmul+1,sprintf@tmpval+1
  2596  000298  C013  F074         	movff	?___flmul+2,sprintf@tmpval+2
  2597  00029C  C014  F075         	movff	?___flmul+3,sprintf@tmpval+3
  2598                           
  2599                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  2600  0002A0  C072  F003         	movff	sprintf@tmpval,___flge@ff1
  2601  0002A4  C073  F004         	movff	sprintf@tmpval+1,___flge@ff1+1
  2602  0002A8  C074  F005         	movff	sprintf@tmpval+2,___flge@ff1+2
  2603  0002AC  C075  F006         	movff	sprintf@tmpval+3,___flge@ff1+3
  2604  0002B0  0E00               	movlw	0
  2605  0002B2  6E07               	movwf	___flge@ff2,c
  2606  0002B4  0E00               	movlw	0
  2607  0002B6  6E08               	movwf	___flge@ff2+1,c
  2608  0002B8  0E80               	movlw	128
  2609  0002BA  6E09               	movwf	___flge@ff2+2,c
  2610  0002BC  0E3F               	movlw	63
  2611  0002BE  6E0A               	movwf	___flge@ff2+3,c
  2612  0002C0  ECE1  F011         	call	___flge	;wreg free
  2613  0002C4  B0D8               	btfsc	status,0,c
  2614  0002C6  D005               	goto	l4314
  2615                           
  2616                           ;doprnt.c: 868: eexp--;
  2617  0002C8  0100               	movlb	0	; () banked
  2618  0002CA  0770               	decf	sprintf@eexp& (0+255),f,b
  2619  0002CC  A0D8               	btfss	status,0,c
  2620  0002CE  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2621  0002D0  D017               	goto	l4318
  2622  0002D2                     l4314:
  2623                           
  2624                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  2625  0002D2  C072  F003         	movff	sprintf@tmpval,___flge@ff1
  2626  0002D6  C073  F004         	movff	sprintf@tmpval+1,___flge@ff1+1
  2627  0002DA  C074  F005         	movff	sprintf@tmpval+2,___flge@ff1+2
  2628  0002DE  C075  F006         	movff	sprintf@tmpval+3,___flge@ff1+3
  2629  0002E2  0E00               	movlw	0
  2630  0002E4  6E07               	movwf	___flge@ff2,c
  2631  0002E6  0E00               	movlw	0
  2632  0002E8  6E08               	movwf	___flge@ff2+1,c
  2633  0002EA  0E20               	movlw	32
  2634  0002EC  6E09               	movwf	___flge@ff2+2,c
  2635  0002EE  0E41               	movlw	65
  2636  0002F0  6E0A               	movwf	___flge@ff2+3,c
  2637  0002F2  ECE1  F011         	call	___flge	;wreg free
  2638  0002F6  A0D8               	btfss	status,0,c
  2639  0002F8  D003               	goto	l4318
  2640                           
  2641                           ;doprnt.c: 870: eexp++;
  2642  0002FA  0100               	movlb	0	; () banked
  2643  0002FC  4B70               	infsnz	sprintf@eexp& (0+255),f,b
  2644  0002FE  2B71               	incf	(sprintf@eexp+1)& (0+255),f,b
  2645  000300                     l4318:
  2646                           
  2647                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  2648  000300  0100               	movlb	0	; () banked
  2649  000302  BF7B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2650  000304  D006               	goto	u4580
  2651  000306  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  2652  000308  E121               	bnz	l4322
  2653  00030A  0E0D               	movlw	13
  2654  00030C  5D7A               	subwf	sprintf@prec& (0+255),w,b
  2655  00030E  B0D8               	btfsc	status,0,c
  2656  000310  D01D               	goto	l4322
  2657  000312                     u4580:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  2661  000312  C076  F037         	movff	sprintf@fval,___fladd@b
  2662  000316  C077  F038         	movff	sprintf@fval+1,___fladd@b+1
  2663  00031A  C078  F039         	movff	sprintf@fval+2,___fladd@b+2
  2664  00031E  C079  F03A         	movff	sprintf@fval+3,___fladd@b+3
  2665  000322  517A               	movf	sprintf@prec& (0+255),w,b
  2666  000324  EC24  F009         	call	_fround
  2667  000328  C02A  F03B         	movff	?_fround,___fladd@a
  2668  00032C  C02B  F03C         	movff	?_fround+1,___fladd@a+1
  2669  000330  C02C  F03D         	movff	?_fround+2,___fladd@a+2
  2670  000334  C02D  F03E         	movff	?_fround+3,___fladd@a+3
  2671  000338  EC9E  F007         	call	___fladd	;wreg free
  2672  00033C  C037  F076         	movff	?___fladd,sprintf@fval
  2673  000340  C038  F077         	movff	?___fladd+1,sprintf@fval+1
  2674  000344  C039  F078         	movff	?___fladd+2,sprintf@fval+2
  2675  000348  C03A  F079         	movff	?___fladd+3,sprintf@fval+3
  2676  00034C                     l4322:
  2677                           
  2678                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2679  00034C  0100               	movlb	0	; () banked
  2680  00034E  BF71               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2681  000350  D006               	goto	u4590
  2682  000352  5171               	movf	(sprintf@eexp+1)& (0+255),w,b
  2683  000354  E131               	bnz	l4330
  2684  000356  0E0A               	movlw	10
  2685  000358  5D70               	subwf	sprintf@eexp& (0+255),w,b
  2686  00035A  B0D8               	btfsc	status,0,c
  2687  00035C  D02D               	goto	u4620
  2688  00035E                     u4590:
  2689                           
  2690                           ; BSR set to: 0
  2691  00035E  C076  F003         	movff	sprintf@fval,___fleq@ff1
  2692  000362  C077  F004         	movff	sprintf@fval+1,___fleq@ff1+1
  2693  000366  C078  F005         	movff	sprintf@fval+2,___fleq@ff1+2
  2694  00036A  C079  F006         	movff	sprintf@fval+3,___fleq@ff1+3
  2695  00036E  0E00               	movlw	0
  2696  000370  6E07               	movwf	___fleq@ff2,c
  2697  000372  0E00               	movlw	0
  2698  000374  6E08               	movwf	___fleq@ff2+1,c
  2699  000376  0E00               	movlw	0
  2700  000378  6E09               	movwf	___fleq@ff2+2,c
  2701  00037A  0E00               	movlw	0
  2702  00037C  6E0A               	movwf	___fleq@ff2+3,c
  2703  00037E  ECF7  F012         	call	___fleq	;wreg free
  2704  000382  B0D8               	btfsc	status,0,c
  2705  000384  D064               	goto	l4344
  2706  000386  C076  F02A         	movff	sprintf@fval,___fltol@f1
  2707  00038A  C077  F02B         	movff	sprintf@fval+1,___fltol@f1+1
  2708  00038E  C078  F02C         	movff	sprintf@fval+2,___fltol@f1+2
  2709  000392  C079  F02D         	movff	sprintf@fval+3,___fltol@f1+3
  2710  000396  EC49  F012         	call	___fltol	;wreg free
  2711  00039A  502A               	movf	?___fltol,w,c
  2712  00039C  102B               	iorwf	?___fltol+1,w,c
  2713  00039E  102C               	iorwf	?___fltol+2,w,c
  2714  0003A0  102D               	iorwf	?___fltol+3,w,c
  2715  0003A2  A4D8               	btfss	status,2,c
  2716  0003A4  D054               	goto	l4344
  2717  0003A6  0100               	movlb	0	; () banked
  2718  0003A8  BF71               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2719  0003AA  D051               	goto	l4344
  2720  0003AC  5171               	movf	(sprintf@eexp+1)& (0+255),w,b
  2721  0003AE  E104               	bnz	u4620
  2722  0003B0  0E02               	movlw	2
  2723  0003B2  5D70               	subwf	sprintf@eexp& (0+255),w,b
  2724  0003B4  A0D8               	btfss	status,0,c
  2725  0003B6  D04B               	goto	l4344
  2726  0003B8                     u4620:
  2727  0003B8                     l4330:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  2731  0003B8  C072  F003         	movff	sprintf@tmpval,___flge@ff1
  2732  0003BC  C073  F004         	movff	sprintf@tmpval+1,___flge@ff1+1
  2733  0003C0  C074  F005         	movff	sprintf@tmpval+2,___flge@ff1+2
  2734  0003C4  C075  F006         	movff	sprintf@tmpval+3,___flge@ff1+3
  2735  0003C8  0E5F               	movlw	95
  2736  0003CA  6E07               	movwf	___flge@ff2,c
  2737  0003CC  0E70               	movlw	112
  2738  0003CE  6E08               	movwf	___flge@ff2+1,c
  2739  0003D0  0E89               	movlw	137
  2740  0003D2  6E09               	movwf	___flge@ff2+2,c
  2741  0003D4  0E40               	movlw	64
  2742  0003D6  6E0A               	movwf	___flge@ff2+3,c
  2743  0003D8  ECE1  F011         	call	___flge	;wreg free
  2744  0003DC  B0D8               	btfsc	status,0,c
  2745  0003DE  D003               	goto	l4334
  2746                           
  2747                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2748  0003E0  0100               	movlb	0	; () banked
  2749  0003E2  0EF7               	movlw	247
  2750  0003E4  D002               	goto	L1
  2751  0003E6                     l4334:
  2752                           
  2753                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2754  0003E6  0100               	movlb	0	; () banked
  2755  0003E8  0EF8               	movlw	248
  2756  0003EA                     L1:
  2757  0003EA  2770               	addwf	sprintf@eexp& (0+255),f,b
  2758  0003EC  0EFF               	movlw	255
  2759  0003EE  2371               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2763  0003F0  5170               	movf	sprintf@eexp& (0+255),w,b
  2764  0003F2  EC0D  F004         	call	_scale
  2765  0003F6  C02A  F072         	movff	?_scale,sprintf@tmpval
  2766  0003FA  C02B  F073         	movff	?_scale+1,sprintf@tmpval+1
  2767  0003FE  C02C  F074         	movff	?_scale+2,sprintf@tmpval+2
  2768  000402  C02D  F075         	movff	?_scale+3,sprintf@tmpval+3
  2769  000406  C076  F003         	movff	sprintf@fval,__div_to_l_@f1
  2770  00040A  C077  F004         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2771  00040E  C078  F005         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2772  000412  C079  F006         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2773  000416  C072  F007         	movff	sprintf@tmpval,__div_to_l_@f2
  2774  00041A  C073  F008         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2775  00041E  C074  F009         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2776  000422  C075  F00A         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2777  000426  EC67  F011         	call	__div_to_l_	;wreg free
  2778  00042A  C003  F06C         	movff	?__div_to_l_,sprintf@val
  2779  00042E  C004  F06D         	movff	?__div_to_l_+1,sprintf@val+1
  2780  000432  C005  F06E         	movff	?__div_to_l_+2,sprintf@val+2
  2781  000436  C006  F06F         	movff	?__div_to_l_+3,sprintf@val+3
  2782                           
  2783                           ;doprnt.c: 1148: fval = 0.0;
  2784  00043A  0E00               	movlw	0
  2785  00043C  0100               	movlb	0	; () banked
  2786  00043E  6F76               	movwf	sprintf@fval& (0+255),b
  2787  000440  0E00               	movlw	0
  2788  000442  6F77               	movwf	(sprintf@fval+1)& (0+255),b
  2789  000444  0E00               	movlw	0
  2790  000446  6F78               	movwf	(sprintf@fval+2)& (0+255),b
  2791  000448  0E00               	movlw	0
  2792  00044A  6F79               	movwf	(sprintf@fval+3)& (0+255),b
  2793                           
  2794                           ;doprnt.c: 1149: } else {
  2795  00044C  D03C               	goto	l4348
  2796  00044E                     l4344:
  2797                           
  2798                           ;doprnt.c: 1150: val = (unsigned long)fval;
  2799  00044E  C076  F02A         	movff	sprintf@fval,___fltol@f1
  2800  000452  C077  F02B         	movff	sprintf@fval+1,___fltol@f1+1
  2801  000456  C078  F02C         	movff	sprintf@fval+2,___fltol@f1+2
  2802  00045A  C079  F02D         	movff	sprintf@fval+3,___fltol@f1+3
  2803  00045E  EC49  F012         	call	___fltol	;wreg free
  2804  000462  C02A  F06C         	movff	?___fltol,sprintf@val
  2805  000466  C02B  F06D         	movff	?___fltol+1,sprintf@val+1
  2806  00046A  C02C  F06E         	movff	?___fltol+2,sprintf@val+2
  2807  00046E  C02D  F06F         	movff	?___fltol+3,sprintf@val+3
  2808                           
  2809                           ;doprnt.c: 1151: fval -= (double)val;
  2810  000472  C076  F047         	movff	sprintf@fval,___flsub@b
  2811  000476  C077  F048         	movff	sprintf@fval+1,___flsub@b+1
  2812  00047A  C078  F049         	movff	sprintf@fval+2,___flsub@b+2
  2813  00047E  C079  F04A         	movff	sprintf@fval+3,___flsub@b+3
  2814  000482  C06C  F003         	movff	sprintf@val,___xxtofl@val
  2815  000486  C06D  F004         	movff	sprintf@val+1,___xxtofl@val+1
  2816  00048A  C06E  F005         	movff	sprintf@val+2,___xxtofl@val+2
  2817  00048E  C06F  F006         	movff	sprintf@val+3,___xxtofl@val+3
  2818  000492  0E00               	movlw	0
  2819  000494  ECBE  F00F         	call	___xxtofl
  2820  000498  C003  F04B         	movff	?___xxtofl,___flsub@a
  2821  00049C  C004  F04C         	movff	?___xxtofl+1,___flsub@a+1
  2822  0004A0  C005  F04D         	movff	?___xxtofl+2,___flsub@a+2
  2823  0004A4  C006  F04E         	movff	?___xxtofl+3,___flsub@a+3
  2824  0004A8  EC63  F015         	call	___flsub	;wreg free
  2825  0004AC  C047  F076         	movff	?___flsub,sprintf@fval
  2826  0004B0  C048  F077         	movff	?___flsub+1,sprintf@fval+1
  2827  0004B4  C049  F078         	movff	?___flsub+2,sprintf@fval+2
  2828  0004B8  C04A  F079         	movff	?___flsub+3,sprintf@fval+3
  2829                           
  2830                           ;doprnt.c: 1152: eexp = 0;
  2831  0004BC  0E00               	movlw	0
  2832  0004BE  0100               	movlb	0	; () banked
  2833  0004C0  6F71               	movwf	(sprintf@eexp+1)& (0+255),b
  2834  0004C2  0E00               	movlw	0
  2835  0004C4  6F70               	movwf	sprintf@eexp& (0+255),b
  2836  0004C6                     l4348:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2840  0004C6  0E01               	movlw	1
  2841  0004C8  6F7C               	movwf	sprintf@c& (0+255),b
  2842  0004CA                     l4350:
  2843                           
  2844                           ; BSR set to: 0
  2845  0004CA  0E0A               	movlw	10
  2846  0004CC  197C               	xorwf	sprintf@c& (0+255),w,b
  2847  0004CE  B4D8               	btfsc	status,2,c
  2848  0004D0  D018               	goto	l4362
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;doprnt.c: 1156: if(val < dpowers[c])
  2852  0004D2  517C               	movf	sprintf@c& (0+255),w,b
  2853  0004D4  0D04               	mullw	4
  2854  0004D6  0E47               	movlw	low _dpowers
  2855  0004D8  24F3               	addwf	prodl,w,c
  2856  0004DA  6EF6               	movwf	tblptrl,c
  2857  0004DC  0E7F               	movlw	high _dpowers
  2858  0004DE  20F4               	addwfc	prodh,w,c
  2859  0004E0  6EF7               	movwf	tblptrh,c
  2860  0004E2                     	if	0	;There are less than 3 active tblptr bytes
  2861  0004E2                     	endif
  2862  0004E2  0009               	tblrd		*+
  2863  0004E4  50F5               	movf	tablat,w,c
  2864  0004E6  5D6C               	subwf	sprintf@val& (0+255),w,b
  2865  0004E8  0009               	tblrd		*+
  2866  0004EA  50F5               	movf	tablat,w,c
  2867  0004EC  596D               	subwfb	(sprintf@val+1)& (0+255),w,b
  2868  0004EE  0009               	tblrd		*+
  2869  0004F0  50F5               	movf	tablat,w,c
  2870  0004F2  596E               	subwfb	(sprintf@val+2)& (0+255),w,b
  2871  0004F4  0009               	tblrd		*+
  2872  0004F6  50F5               	movf	tablat,w,c
  2873  0004F8  596F               	subwfb	(sprintf@val+3)& (0+255),w,b
  2874  0004FA  A0D8               	btfss	status,0,c
  2875  0004FC  D002               	goto	l4362
  2876                           
  2877                           ; BSR set to: 0
  2878  0004FE  2B7C               	incf	sprintf@c& (0+255),f,b
  2879  000500  D7E4               	goto	l4350
  2880  000502                     l4362:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;doprnt.c: 1194: {;doprnt.c: 1207: if(flag & 0x03)
  2884  000502  0E03               	movlw	3
  2885  000504  156A               	andwf	sprintf@flag& (0+255),w,b
  2886  000506  6E57               	movwf	??_sprintf& (0+255),c
  2887  000508  0E00               	movlw	0
  2888  00050A  156B               	andwf	(sprintf@flag+1)& (0+255),w,b
  2889  00050C  6E58               	movwf	(??_sprintf+1)& (0+255),c
  2890  00050E  5057               	movf	??_sprintf,w,c
  2891  000510  1058               	iorwf	??_sprintf+1,w,c
  2892  000512  B4D8               	btfsc	status,2,c
  2893  000514  D051               	goto	l4376
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  2897  000516  C04F  FFD9         	movff	sprintf@sp,fsr2l
  2898  00051A  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  2899  00051E  0E2D               	movlw	45
  2900  000520  6EDF               	movwf	indf2,c
  2901                           
  2902                           ; BSR set to: 0
  2903  000522  4A4F               	infsnz	sprintf@sp,f,c
  2904  000524  2A50               	incf	sprintf@sp+1,f,c
  2905  000526  D048               	goto	l4376
  2906  000528                     l4368:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  2910  000528  C06C  F003         	movff	sprintf@val,___lldiv@dividend
  2911  00052C  C06D  F004         	movff	sprintf@val+1,___lldiv@dividend+1
  2912  000530  C06E  F005         	movff	sprintf@val+2,___lldiv@dividend+2
  2913  000534  C06F  F006         	movff	sprintf@val+3,___lldiv@dividend+3
  2914  000538  517C               	movf	sprintf@c& (0+255),w,b
  2915  00053A  0D04               	mullw	4
  2916  00053C  0E47               	movlw	low _dpowers
  2917  00053E  24F3               	addwf	prodl,w,c
  2918  000540  6EF6               	movwf	tblptrl,c
  2919  000542  0E7F               	movlw	high _dpowers
  2920  000544  20F4               	addwfc	prodh,w,c
  2921  000546  6EF7               	movwf	tblptrh,c
  2922  000548                     	if	0	;There are less than 3 active tblptr bytes
  2923  000548                     	endif
  2924  000548  0009               	tblrd		*+
  2925  00054A  CFF5 F007          	movff	tablat,___lldiv@divisor
  2926  00054E  0009               	tblrd		*+
  2927  000550  CFF5 F008          	movff	tablat,___lldiv@divisor+1
  2928  000554  0009               	tblrd		*+
  2929  000556  CFF5 F009          	movff	tablat,___lldiv@divisor+2
  2930  00055A  000A               	tblrd		*-
  2931  00055C  CFF5 F00A          	movff	tablat,___lldiv@divisor+3
  2932  000560  EC7E  F013         	call	___lldiv	;wreg free
  2933  000564  C003  F072         	movff	?___lldiv,sprintf@tmpval
  2934  000568  C004  F073         	movff	?___lldiv+1,sprintf@tmpval+1
  2935  00056C  C005  F074         	movff	?___lldiv+2,sprintf@tmpval+2
  2936  000570  C006  F075         	movff	?___lldiv+3,sprintf@tmpval+3
  2937                           
  2938                           ;doprnt.c: 1221: tmpval.vd %= 10;
  2939  000574  C072  F003         	movff	sprintf@tmpval,___llmod@dividend
  2940  000578  C073  F004         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2941  00057C  C074  F005         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2942  000580  C075  F006         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2943  000584  0E0A               	movlw	10
  2944  000586  6E07               	movwf	___llmod@divisor,c
  2945  000588  0E00               	movlw	0
  2946  00058A  6E08               	movwf	___llmod@divisor+1,c
  2947  00058C  0E00               	movlw	0
  2948  00058E  6E09               	movwf	___llmod@divisor+2,c
  2949  000590  0E00               	movlw	0
  2950  000592  6E0A               	movwf	___llmod@divisor+3,c
  2951  000594  EC31  F014         	call	___llmod	;wreg free
  2952  000598  C003  F072         	movff	?___llmod,sprintf@tmpval
  2953  00059C  C004  F073         	movff	?___llmod+1,sprintf@tmpval+1
  2954  0005A0  C005  F074         	movff	?___llmod+2,sprintf@tmpval+2
  2955  0005A4  C006  F075         	movff	?___llmod+3,sprintf@tmpval+3
  2956                           
  2957                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  2958  0005A8  0100               	movlb	0	; () banked
  2959  0005AA  5172               	movf	sprintf@tmpval& (0+255),w,b
  2960  0005AC  0F30               	addlw	48
  2961  0005AE  C04F  FFD9         	movff	sprintf@sp,fsr2l
  2962  0005B2  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  2963  0005B6  D7B4               	goto	L2
  2964  0005B8                     l4376:
  2965                           
  2966                           ; BSR set to: 0
  2967  0005B8  077C               	decf	sprintf@c& (0+255),f,b
  2968  0005BA  297C               	incf	sprintf@c& (0+255),w,b
  2969  0005BC  B4D8               	btfsc	status,2,c
  2970  0005BE  D00C               	goto	l4384
  2971  0005C0  D7B3               	goto	l4368
  2972  0005C2                     l4378:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  2976  0005C2  C04F  FFD9         	movff	sprintf@sp,fsr2l
  2977  0005C6  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  2978  0005CA  0E30               	movlw	48
  2979  0005CC  6EDF               	movwf	indf2,c
  2980                           
  2981                           ; BSR set to: 0
  2982  0005CE  4A4F               	infsnz	sprintf@sp,f,c
  2983  0005D0  2A50               	incf	sprintf@sp+1,f,c
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;doprnt.c: 1228: eexp--;
  2987  0005D2  0770               	decf	sprintf@eexp& (0+255),f,b
  2988  0005D4  A0D8               	btfss	status,0,c
  2989  0005D6  0771               	decf	(sprintf@eexp+1)& (0+255),f,b
  2990  0005D8                     l4384:
  2991                           
  2992                           ; BSR set to: 0
  2993  0005D8  BF71               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2994  0005DA  D005               	goto	u4680
  2995  0005DC  5171               	movf	(sprintf@eexp+1)& (0+255),w,b
  2996  0005DE  E1F1               	bnz	l4378
  2997  0005E0  0570               	decf	sprintf@eexp& (0+255),w,b
  2998  0005E2  B0D8               	btfsc	status,0,c
  2999  0005E4  D7EE               	goto	l4378
  3000  0005E6                     u4680:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3004  0005E6  BF7B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3005  0005E8  D009               	goto	l512
  3006  0005EA  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  3007  0005EC  E104               	bnz	u4690
  3008  0005EE  0E09               	movlw	9
  3009  0005F0  5D7A               	subwf	sprintf@prec& (0+255),w,b
  3010  0005F2  A0D8               	btfss	status,0,c
  3011  0005F4  D003               	goto	l512
  3012  0005F6                     u4690:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3016  0005F6  0E08               	movlw	8
  3017  0005F8  6F7C               	movwf	sprintf@c& (0+255),b
  3018  0005FA  D002               	goto	l4390
  3019  0005FC                     l512:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  3023  0005FC  C07A  F07C         	movff	sprintf@prec,sprintf@c
  3024  000600                     l4390:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;doprnt.c: 1234: prec -= (int)c;
  3028  000600  517C               	movf	sprintf@c& (0+255),w,b
  3029  000602  5F7A               	subwf	sprintf@prec& (0+255),f,b
  3030  000604  0E00               	movlw	0
  3031  000606  5B7B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;doprnt.c: 1238: if(c)
  3035  000608  517C               	movf	sprintf@c& (0+255),w,b
  3036  00060A  B4D8               	btfsc	status,2,c
  3037  00060C  D008               	goto	l4398
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  3041  00060E  C04F  FFD9         	movff	sprintf@sp,fsr2l
  3042  000612  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  3043  000616  0E2E               	movlw	46
  3044  000618  6EDF               	movwf	indf2,c
  3045                           
  3046                           ; BSR set to: 0
  3047  00061A  4A4F               	infsnz	sprintf@sp,f,c
  3048  00061C  2A50               	incf	sprintf@sp+1,f,c
  3049  00061E                     l4398:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  3053  00061E  517C               	movf	sprintf@c& (0+255),w,b
  3054  000620  EC0D  F004         	call	_scale
  3055  000624  C02A  F060         	movff	?_scale,_sprintf$1889
  3056  000628  C02B  F061         	movff	?_scale+1,_sprintf$1889+1
  3057  00062C  C02C  F062         	movff	?_scale+2,_sprintf$1889+2
  3058  000630  C02D  F063         	movff	?_scale+3,_sprintf$1889+3
  3059                           
  3060                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  3061  000634  C076  F015         	movff	sprintf@fval,___flmul@a
  3062  000638  C077  F016         	movff	sprintf@fval+1,___flmul@a+1
  3063  00063C  C078  F017         	movff	sprintf@fval+2,___flmul@a+2
  3064  000640  C079  F018         	movff	sprintf@fval+3,___flmul@a+3
  3065  000644  C060  F011         	movff	_sprintf$1889,___flmul@b
  3066  000648  C061  F012         	movff	_sprintf$1889+1,___flmul@b+1
  3067  00064C  C062  F013         	movff	_sprintf$1889+2,___flmul@b+2
  3068  000650  C063  F014         	movff	_sprintf$1889+3,___flmul@b+3
  3069  000654  ECF5  F005         	call	___flmul	;wreg free
  3070  000658  C011  F02A         	movff	?___flmul,___fltol@f1
  3071  00065C  C012  F02B         	movff	?___flmul+1,___fltol@f1+1
  3072  000660  C013  F02C         	movff	?___flmul+2,___fltol@f1+2
  3073  000664  C014  F02D         	movff	?___flmul+3,___fltol@f1+3
  3074  000668  EC49  F012         	call	___fltol	;wreg free
  3075  00066C  C02A  F06C         	movff	?___fltol,sprintf@val
  3076  000670  C02B  F06D         	movff	?___fltol+1,sprintf@val+1
  3077  000674  C02C  F06E         	movff	?___fltol+2,sprintf@val+2
  3078  000678  C02D  F06F         	movff	?___fltol+3,sprintf@val+3
  3079                           
  3080                           ;doprnt.c: 1247: while(c--) {
  3081  00067C  D070               	goto	l4412
  3082  00067E                     l4402:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  3086  00067E  C06C  F003         	movff	sprintf@val,___lldiv@dividend
  3087  000682  C06D  F004         	movff	sprintf@val+1,___lldiv@dividend+1
  3088  000686  C06E  F005         	movff	sprintf@val+2,___lldiv@dividend+2
  3089  00068A  C06F  F006         	movff	sprintf@val+3,___lldiv@dividend+3
  3090  00068E  517C               	movf	sprintf@c& (0+255),w,b
  3091  000690  0D04               	mullw	4
  3092  000692  0E47               	movlw	low _dpowers
  3093  000694  24F3               	addwf	prodl,w,c
  3094  000696  6EF6               	movwf	tblptrl,c
  3095  000698  0E7F               	movlw	high _dpowers
  3096  00069A  20F4               	addwfc	prodh,w,c
  3097  00069C  6EF7               	movwf	tblptrh,c
  3098  00069E                     	if	0	;There are less than 3 active tblptr bytes
  3099  00069E                     	endif
  3100  00069E  0009               	tblrd		*+
  3101  0006A0  CFF5 F007          	movff	tablat,___lldiv@divisor
  3102  0006A4  0009               	tblrd		*+
  3103  0006A6  CFF5 F008          	movff	tablat,___lldiv@divisor+1
  3104  0006AA  0009               	tblrd		*+
  3105  0006AC  CFF5 F009          	movff	tablat,___lldiv@divisor+2
  3106  0006B0  000A               	tblrd		*-
  3107  0006B2  CFF5 F00A          	movff	tablat,___lldiv@divisor+3
  3108  0006B6  EC7E  F013         	call	___lldiv	;wreg free
  3109  0006BA  C003  F072         	movff	?___lldiv,sprintf@tmpval
  3110  0006BE  C004  F073         	movff	?___lldiv+1,sprintf@tmpval+1
  3111  0006C2  C005  F074         	movff	?___lldiv+2,sprintf@tmpval+2
  3112  0006C6  C006  F075         	movff	?___lldiv+3,sprintf@tmpval+3
  3113                           
  3114                           ;doprnt.c: 1249: tmpval.vd %= 10;
  3115  0006CA  C072  F003         	movff	sprintf@tmpval,___llmod@dividend
  3116  0006CE  C073  F004         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3117  0006D2  C074  F005         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3118  0006D6  C075  F006         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3119  0006DA  0E0A               	movlw	10
  3120  0006DC  6E07               	movwf	___llmod@divisor,c
  3121  0006DE  0E00               	movlw	0
  3122  0006E0  6E08               	movwf	___llmod@divisor+1,c
  3123  0006E2  0E00               	movlw	0
  3124  0006E4  6E09               	movwf	___llmod@divisor+2,c
  3125  0006E6  0E00               	movlw	0
  3126  0006E8  6E0A               	movwf	___llmod@divisor+3,c
  3127  0006EA  EC31  F014         	call	___llmod	;wreg free
  3128  0006EE  C003  F072         	movff	?___llmod,sprintf@tmpval
  3129  0006F2  C004  F073         	movff	?___llmod+1,sprintf@tmpval+1
  3130  0006F6  C005  F074         	movff	?___llmod+2,sprintf@tmpval+2
  3131  0006FA  C006  F075         	movff	?___llmod+3,sprintf@tmpval+3
  3132                           
  3133                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  3134  0006FE  0100               	movlb	0	; () banked
  3135  000700  5172               	movf	sprintf@tmpval& (0+255),w,b
  3136  000702  0F30               	addlw	48
  3137  000704  C04F  FFD9         	movff	sprintf@sp,fsr2l
  3138  000708  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  3139  00070C  6EDF               	movwf	indf2,c
  3140                           
  3141                           ; BSR set to: 0
  3142  00070E  4A4F               	infsnz	sprintf@sp,f,c
  3143  000710  2A50               	incf	sprintf@sp+1,f,c
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;doprnt.c: 1251: val %= dpowers[c];
  3147  000712  C06C  F003         	movff	sprintf@val,___llmod@dividend
  3148  000716  C06D  F004         	movff	sprintf@val+1,___llmod@dividend+1
  3149  00071A  C06E  F005         	movff	sprintf@val+2,___llmod@dividend+2
  3150  00071E  C06F  F006         	movff	sprintf@val+3,___llmod@dividend+3
  3151  000722  517C               	movf	sprintf@c& (0+255),w,b
  3152  000724  0D04               	mullw	4
  3153  000726  0E47               	movlw	low _dpowers
  3154  000728  24F3               	addwf	prodl,w,c
  3155  00072A  6EF6               	movwf	tblptrl,c
  3156  00072C  0E7F               	movlw	high _dpowers
  3157  00072E  20F4               	addwfc	prodh,w,c
  3158  000730  6EF7               	movwf	tblptrh,c
  3159  000732                     	if	0	;There are less than 3 active tblptr bytes
  3160  000732                     	endif
  3161  000732  0009               	tblrd		*+
  3162  000734  CFF5 F007          	movff	tablat,___llmod@divisor
  3163  000738  0009               	tblrd		*+
  3164  00073A  CFF5 F008          	movff	tablat,___llmod@divisor+1
  3165  00073E  0009               	tblrd		*+
  3166  000740  CFF5 F009          	movff	tablat,___llmod@divisor+2
  3167  000744  000A               	tblrd		*-
  3168  000746  CFF5 F00A          	movff	tablat,___llmod@divisor+3
  3169  00074A  EC31  F014         	call	___llmod	;wreg free
  3170  00074E  C003  F06C         	movff	?___llmod,sprintf@val
  3171  000752  C004  F06D         	movff	?___llmod+1,sprintf@val+1
  3172  000756  C005  F06E         	movff	?___llmod+2,sprintf@val+2
  3173  00075A  C006  F06F         	movff	?___llmod+3,sprintf@val+3
  3174  00075E                     l4412:
  3175  00075E  0100               	movlb	0	; () banked
  3176  000760  077C               	decf	sprintf@c& (0+255),f,b
  3177  000762  297C               	incf	sprintf@c& (0+255),w,b
  3178  000764  B4D8               	btfsc	status,2,c
  3179  000766  D00C               	goto	l4420
  3180  000768  D78A               	goto	l4402
  3181  00076A                     l4414:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  3185  00076A  C04F  FFD9         	movff	sprintf@sp,fsr2l
  3186  00076E  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  3187  000772  0E30               	movlw	48
  3188  000774  6EDF               	movwf	indf2,c
  3189                           
  3190                           ; BSR set to: 0
  3191  000776  4A4F               	infsnz	sprintf@sp,f,c
  3192  000778  2A50               	incf	sprintf@sp+1,f,c
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;doprnt.c: 1256: prec--;
  3196  00077A  077A               	decf	sprintf@prec& (0+255),f,b
  3197  00077C  A0D8               	btfss	status,0,c
  3198  00077E  077B               	decf	(sprintf@prec+1)& (0+255),f,b
  3199  000780                     l4420:
  3200                           
  3201                           ; BSR set to: 0
  3202  000780  517A               	movf	sprintf@prec& (0+255),w,b
  3203  000782  117B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3204  000784  B4D8               	btfsc	status,2,c
  3205  000786  D036               	goto	l4442
  3206  000788  D7F0               	goto	l4414
  3207  00078A                     l4422:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;doprnt.c: 1265: };doprnt.c: 1309: if(prec == 0 && val == 0)
  3211  00078A  517A               	movf	sprintf@prec& (0+255),w,b
  3212  00078C  117B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3213  00078E  A4D8               	btfss	status,2,c
  3214  000790  D008               	goto	l4428
  3215                           
  3216                           ; BSR set to: 0
  3217  000792  516C               	movf	sprintf@val& (0+255),w,b
  3218  000794  116D               	iorwf	(sprintf@val+1)& (0+255),w,b
  3219  000796  116E               	iorwf	(sprintf@val+2)& (0+255),w,b
  3220  000798  116F               	iorwf	(sprintf@val+3)& (0+255),w,b
  3221  00079A  A4D8               	btfss	status,2,c
  3222  00079C  D002               	goto	l4428
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;doprnt.c: 1310: prec++;
  3226  00079E  4B7A               	infsnz	sprintf@prec& (0+255),f,b
  3227  0007A0  2B7B               	incf	(sprintf@prec+1)& (0+255),f,b
  3228  0007A2                     l4428:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;doprnt.c: 1358: if(c < prec)
  3232  0007A2  517C               	movf	sprintf@c& (0+255),w,b
  3233  0007A4  6E57               	movwf	??_sprintf& (0+255),c
  3234  0007A6  6A58               	clrf	(??_sprintf+1)& (0+255),c
  3235  0007A8  517A               	movf	sprintf@prec& (0+255),w,b
  3236  0007AA  5C57               	subwf	??_sprintf,w,c
  3237  0007AC  5058               	movf	??_sprintf+1,w,c
  3238  0007AE  0A80               	xorlw	128
  3239  0007B0  6E59               	movwf	(??_sprintf+2)& (0+255),c
  3240  0007B2  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  3241  0007B4  0A80               	xorlw	128
  3242  0007B6  5859               	subwfb	(??_sprintf+2)& (0+255),w,c
  3243  0007B8  A0D8               	btfss	status,0,c
  3244  0007BA  D00B               	goto	u4761
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;doprnt.c: 1360: else if(prec < c)
  3248                           
  3249                           ; BSR set to: 0
  3250  0007BC  517C               	movf	sprintf@c& (0+255),w,b
  3251  0007BE  6E57               	movwf	??_sprintf& (0+255),c
  3252  0007C0  6A58               	clrf	(??_sprintf+1)& (0+255),c
  3253  0007C2  5057               	movf	??_sprintf,w,c
  3254  0007C4  5D7A               	subwf	sprintf@prec& (0+255),w,b
  3255  0007C6  517B               	movf	(sprintf@prec+1)& (0+255),w,b
  3256  0007C8  0A80               	xorlw	128
  3257  0007CA  6E59               	movwf	(??_sprintf+2)& (0+255),c
  3258  0007CC  5058               	movf	??_sprintf+1,w,c
  3259  0007CE  0A80               	xorlw	128
  3260  0007D0  5859               	subwfb	(??_sprintf+2)& (0+255),w,c
  3261  0007D2                     u4761:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;doprnt.c: 1441: {;doprnt.c: 1457: if(flag & 0x03)
  3265                           
  3266                           ; BSR set to: 0
  3267  0007D2  0E03               	movlw	3
  3268  0007D4  156A               	andwf	sprintf@flag& (0+255),w,b
  3269  0007D6  6E57               	movwf	??_sprintf& (0+255),c
  3270  0007D8  0E00               	movlw	0
  3271  0007DA  156B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3272  0007DC  6E58               	movwf	(??_sprintf+1)& (0+255),c
  3273  0007DE  5057               	movf	??_sprintf,w,c
  3274  0007E0  1058               	iorwf	??_sprintf+1,w,c
  3275  0007E2  B4D8               	btfsc	status,2,c
  3276  0007E4  D007               	goto	l4442
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  3280  0007E6  C04F  FFD9         	movff	sprintf@sp,fsr2l
  3281  0007EA  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  3282  0007EE  0E2D               	movlw	45
  3283  0007F0  6EDF               	movwf	indf2,c
  3284  0007F2  D434               	goto	l4230
  3285  0007F4                     l4442:
  3286                           
  3287                           ; BSR set to: 0
  3288  0007F4  C051  FFF6         	movff	sprintf@f,tblptrl
  3289  0007F8  C052  FFF7         	movff	sprintf@f+1,tblptrh
  3290  0007FC  4A51               	infsnz	sprintf@f,f,c
  3291  0007FE  2A52               	incf	sprintf@f+1,f,c
  3292  000800                     	if	0	;tblptru may be non-zero
  3293  000800                     	endif
  3294  000800                     	if	0	;tblptru may be non-zero
  3295  000800                     	endif
  3296  000800  0008               	tblrd		*
  3297  000802  CFF5 F07C          	movff	tablat,sprintf@c
  3298  000806  517C               	movf	sprintf@c& (0+255),w,b
  3299  000808  A4D8               	btfss	status,2,c
  3300  00080A  D41E               	goto	l4226
  3301  00080C                     u4780:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;doprnt.c: 1557: *sp = 0;
  3305  00080C  C04F  FFD9         	movff	sprintf@sp,fsr2l
  3306  000810  C050  FFDA         	movff	sprintf@sp+1,fsr2h
  3307  000814  0E00               	movlw	0
  3308  000816  6EDF               	movwf	indf2,c
  3309                           
  3310                           ; BSR set to: 0
  3311  000818  0012               	return		;funcret
  3312  00081A                     __end_of_sprintf:
  3313                           	opt callstack 0
  3314                           
  3315 ;; *************** function _scale *****************
  3316 ;; Defined at:
  3317 ;;		line 433 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  scl             1    wreg     char 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  scl             1   49[COMRAM] char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  4   41[COMRAM] char 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3334 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3335 ;;Total ram usage:        9 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    3
  3338 ;; This function calls:
  3339 ;;		___awdiv
  3340 ;;		___awmod
  3341 ;;		___flmul
  3342 ;; This function is called by:
  3343 ;;		_sprintf
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text5
  3348  00081A                     __ptext5:
  3349                           	opt callstack 0
  3350  00081A                     _scale:
  3351                           	opt callstack 24
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;incstack = 0
  3355                           ;scale@scl stored from wreg
  3356  00081A  6E32               	movwf	scale@scl,c
  3357                           
  3358                           ;doprnt.c: 436: if(scl < 0) {
  3359  00081C  AE32               	btfss	scale@scl,7,c
  3360  00081E  D0F3               	goto	l3732
  3361                           
  3362                           ;doprnt.c: 437: scl = -scl;
  3363  000820  6C32               	negf	scale@scl,c
  3364                           
  3365                           ;doprnt.c: 438: if(scl>=110)
  3366  000822  5032               	movf	scale@scl,w,c
  3367  000824  0A80               	xorlw	128
  3368  000826  0F12               	addlw	-238
  3369  000828  A0D8               	btfss	status,0,c
  3370  00082A  D088               	goto	l3722
  3371                           
  3372                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3373  00082C  0E00               	movlw	0
  3374  00082E  6E0C               	movwf	___awdiv@divisor+1,c
  3375  000830  0E0A               	movlw	10
  3376  000832  6E0B               	movwf	___awdiv@divisor,c
  3377  000834  0E00               	movlw	0
  3378  000836  6E06               	movwf	___awmod@divisor+1,c
  3379  000838  0E64               	movlw	100
  3380  00083A  6E05               	movwf	___awmod@divisor,c
  3381  00083C  5032               	movf	scale@scl,w,c
  3382  00083E  6E03               	movwf	___awmod@dividend,c
  3383  000840  6A04               	clrf	___awmod@dividend+1,c
  3384  000842  BE03               	btfsc	___awmod@dividend,7,c
  3385  000844  0604               	decf	___awmod@dividend+1,f,c
  3386  000846  ECF9  F013         	call	___awmod	;wreg free
  3387  00084A  C003  F009         	movff	?___awmod,___awdiv@dividend
  3388  00084E  C004  F00A         	movff	?___awmod+1,___awdiv@dividend+1
  3389  000852  EC3C  F013         	call	___awdiv	;wreg free
  3390  000856  0E09               	movlw	9
  3391  000858  2609               	addwf	?___awdiv,f,c
  3392  00085A  5009               	movf	?___awdiv,w,c
  3393  00085C  0D04               	mullw	4
  3394  00085E  0E13               	movlw	low __npowers_
  3395  000860  24F3               	addwf	prodl,w,c
  3396  000862  6EF6               	movwf	tblptrl,c
  3397  000864  0E7F               	movlw	high __npowers_
  3398  000866  20F4               	addwfc	prodh,w,c
  3399  000868  6EF7               	movwf	tblptrh,c
  3400  00086A                     	if	0	;There are less than 3 active tblptr bytes
  3401  00086A                     	endif
  3402  00086A  0009               	tblrd		*+
  3403  00086C  CFF5 F015          	movff	tablat,___flmul@a
  3404  000870  0009               	tblrd		*+
  3405  000872  CFF5 F016          	movff	tablat,___flmul@a+1
  3406  000876  0009               	tblrd		*+
  3407  000878  CFF5 F017          	movff	tablat,___flmul@a+2
  3408  00087C  000A               	tblrd		*-
  3409  00087E  CFF5 F018          	movff	tablat,___flmul@a+3
  3410  000882  0E00               	movlw	0
  3411  000884  6E0C               	movwf	___awdiv@divisor+1,c
  3412  000886  0E64               	movlw	100
  3413  000888  6E0B               	movwf	___awdiv@divisor,c
  3414  00088A  5032               	movf	scale@scl,w,c
  3415  00088C  6E09               	movwf	___awdiv@dividend,c
  3416  00088E  6A0A               	clrf	___awdiv@dividend+1,c
  3417  000890  BE09               	btfsc	___awdiv@dividend,7,c
  3418  000892  060A               	decf	___awdiv@dividend+1,f,c
  3419  000894  EC3C  F013         	call	___awdiv	;wreg free
  3420  000898  0E12               	movlw	18
  3421  00089A  2609               	addwf	?___awdiv,f,c
  3422  00089C  5009               	movf	?___awdiv,w,c
  3423  00089E  0D04               	mullw	4
  3424  0008A0  0E13               	movlw	low __npowers_
  3425  0008A2  24F3               	addwf	prodl,w,c
  3426  0008A4  6EF6               	movwf	tblptrl,c
  3427  0008A6  0E7F               	movlw	high __npowers_
  3428  0008A8  20F4               	addwfc	prodh,w,c
  3429  0008AA  6EF7               	movwf	tblptrh,c
  3430  0008AC                     	if	0	;There are less than 3 active tblptr bytes
  3431  0008AC                     	endif
  3432  0008AC  0009               	tblrd		*+
  3433  0008AE  CFF5 F011          	movff	tablat,___flmul@b
  3434  0008B2  0009               	tblrd		*+
  3435  0008B4  CFF5 F012          	movff	tablat,___flmul@b+1
  3436  0008B8  0009               	tblrd		*+
  3437  0008BA  CFF5 F013          	movff	tablat,___flmul@b+2
  3438  0008BE  000A               	tblrd		*-
  3439  0008C0  CFF5 F014          	movff	tablat,___flmul@b+3
  3440  0008C4  ECF5  F005         	call	___flmul	;wreg free
  3441  0008C8  C011  F02E         	movff	?___flmul,_scale$1888
  3442  0008CC  C012  F02F         	movff	?___flmul+1,_scale$1888+1
  3443  0008D0  C013  F030         	movff	?___flmul+2,_scale$1888+2
  3444  0008D4  C014  F031         	movff	?___flmul+3,_scale$1888+3
  3445                           
  3446                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3447  0008D8  C02E  F011         	movff	_scale$1888,___flmul@b
  3448  0008DC  C02F  F012         	movff	_scale$1888+1,___flmul@b+1
  3449  0008E0  C030  F013         	movff	_scale$1888+2,___flmul@b+2
  3450  0008E4  C031  F014         	movff	_scale$1888+3,___flmul@b+3
  3451  0008E8  0E00               	movlw	0
  3452  0008EA  6E06               	movwf	___awmod@divisor+1,c
  3453  0008EC  0E0A               	movlw	10
  3454  0008EE  6E05               	movwf	___awmod@divisor,c
  3455  0008F0  5032               	movf	scale@scl,w,c
  3456  0008F2  6E03               	movwf	___awmod@dividend,c
  3457  0008F4  6A04               	clrf	___awmod@dividend+1,c
  3458  0008F6  BE03               	btfsc	___awmod@dividend,7,c
  3459  0008F8  0604               	decf	___awmod@dividend+1,f,c
  3460  0008FA  ECF9  F013         	call	___awmod	;wreg free
  3461  0008FE  5003               	movf	?___awmod,w,c
  3462  000900  0D04               	mullw	4
  3463  000902  0E13               	movlw	low __npowers_
  3464  000904  24F3               	addwf	prodl,w,c
  3465  000906  6EF6               	movwf	tblptrl,c
  3466  000908  0E7F               	movlw	high __npowers_
  3467  00090A  20F4               	addwfc	prodh,w,c
  3468  00090C  6EF7               	movwf	tblptrh,c
  3469  00090E                     	if	0	;There are less than 3 active tblptr bytes
  3470  00090E                     	endif
  3471  00090E  0009               	tblrd		*+
  3472  000910  CFF5 F015          	movff	tablat,___flmul@a
  3473  000914  0009               	tblrd		*+
  3474  000916  CFF5 F016          	movff	tablat,___flmul@a+1
  3475  00091A  0009               	tblrd		*+
  3476  00091C  CFF5 F017          	movff	tablat,___flmul@a+2
  3477  000920  000A               	tblrd		*-
  3478  000922  CFF5 F018          	movff	tablat,___flmul@a+3
  3479  000926  ECF5  F005         	call	___flmul	;wreg free
  3480  00092A  C011  F02A         	movff	?___flmul,?_scale
  3481  00092E  C012  F02B         	movff	?___flmul+1,?_scale+1
  3482  000932  C013  F02C         	movff	?___flmul+2,?_scale+2
  3483  000936  C014  F02D         	movff	?___flmul+3,?_scale+3
  3484  00093A  0012               	return	
  3485  00093C                     l3722:
  3486                           
  3487                           ;doprnt.c: 440: else if(scl > 10)
  3488  00093C  5032               	movf	scale@scl,w,c
  3489  00093E  0A80               	xorlw	128
  3490  000940  0F75               	addlw	-139
  3491  000942  A0D8               	btfss	status,0,c
  3492  000944  D04B               	goto	l3728
  3493                           
  3494                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3495  000946  0E00               	movlw	0
  3496  000948  6E0C               	movwf	___awdiv@divisor+1,c
  3497  00094A  0E0A               	movlw	10
  3498  00094C  6E0B               	movwf	___awdiv@divisor,c
  3499  00094E  5032               	movf	scale@scl,w,c
  3500  000950  6E09               	movwf	___awdiv@dividend,c
  3501  000952  6A0A               	clrf	___awdiv@dividend+1,c
  3502  000954  BE09               	btfsc	___awdiv@dividend,7,c
  3503  000956  060A               	decf	___awdiv@dividend+1,f,c
  3504  000958  EC3C  F013         	call	___awdiv	;wreg free
  3505  00095C  0E09               	movlw	9
  3506  00095E  2609               	addwf	?___awdiv,f,c
  3507  000960  5009               	movf	?___awdiv,w,c
  3508  000962  0D04               	mullw	4
  3509  000964  0E13               	movlw	low __npowers_
  3510  000966  24F3               	addwf	prodl,w,c
  3511  000968  6EF6               	movwf	tblptrl,c
  3512  00096A  0E7F               	movlw	high __npowers_
  3513  00096C  20F4               	addwfc	prodh,w,c
  3514  00096E  6EF7               	movwf	tblptrh,c
  3515  000970                     	if	0	;There are less than 3 active tblptr bytes
  3516  000970                     	endif
  3517  000970  0009               	tblrd		*+
  3518  000972  CFF5 F011          	movff	tablat,___flmul@b
  3519  000976  0009               	tblrd		*+
  3520  000978  CFF5 F012          	movff	tablat,___flmul@b+1
  3521  00097C  0009               	tblrd		*+
  3522  00097E  CFF5 F013          	movff	tablat,___flmul@b+2
  3523  000982  000A               	tblrd		*-
  3524  000984  CFF5 F014          	movff	tablat,___flmul@b+3
  3525  000988  0E00               	movlw	0
  3526  00098A  6E06               	movwf	___awmod@divisor+1,c
  3527  00098C  0E0A               	movlw	10
  3528  00098E  6E05               	movwf	___awmod@divisor,c
  3529  000990  5032               	movf	scale@scl,w,c
  3530  000992  6E03               	movwf	___awmod@dividend,c
  3531  000994  6A04               	clrf	___awmod@dividend+1,c
  3532  000996  BE03               	btfsc	___awmod@dividend,7,c
  3533  000998  0604               	decf	___awmod@dividend+1,f,c
  3534  00099A  ECF9  F013         	call	___awmod	;wreg free
  3535  00099E  5003               	movf	?___awmod,w,c
  3536  0009A0  0D04               	mullw	4
  3537  0009A2  0E13               	movlw	low __npowers_
  3538  0009A4  24F3               	addwf	prodl,w,c
  3539  0009A6  6EF6               	movwf	tblptrl,c
  3540  0009A8  0E7F               	movlw	high __npowers_
  3541  0009AA  20F4               	addwfc	prodh,w,c
  3542  0009AC  6EF7               	movwf	tblptrh,c
  3543  0009AE                     	if	0	;There are less than 3 active tblptr bytes
  3544  0009AE                     	endif
  3545  0009AE  0009               	tblrd		*+
  3546  0009B0  CFF5 F015          	movff	tablat,___flmul@a
  3547  0009B4  0009               	tblrd		*+
  3548  0009B6  CFF5 F016          	movff	tablat,___flmul@a+1
  3549  0009BA  0009               	tblrd		*+
  3550  0009BC  CFF5 F017          	movff	tablat,___flmul@a+2
  3551  0009C0  000A               	tblrd		*-
  3552  0009C2  CFF5 F018          	movff	tablat,___flmul@a+3
  3553  0009C6  ECF5  F005         	call	___flmul	;wreg free
  3554  0009CA  C011  F02A         	movff	?___flmul,?_scale
  3555  0009CE  C012  F02B         	movff	?___flmul+1,?_scale+1
  3556  0009D2  C013  F02C         	movff	?___flmul+2,?_scale+2
  3557  0009D6  C014  F02D         	movff	?___flmul+3,?_scale+3
  3558  0009DA  0012               	return	
  3559  0009DC                     l3728:
  3560                           
  3561                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3562  0009DC  5032               	movf	scale@scl,w,c
  3563  0009DE  0D04               	mullw	4
  3564  0009E0  0E13               	movlw	low __npowers_
  3565  0009E2  24F3               	addwf	prodl,w,c
  3566  0009E4  6EF6               	movwf	tblptrl,c
  3567  0009E6  0E7F               	movlw	high __npowers_
  3568  0009E8  20F4               	addwfc	prodh,w,c
  3569  0009EA  6EF7               	movwf	tblptrh,c
  3570  0009EC                     	if	0	;There are less than 3 active tblptr bytes
  3571  0009EC                     	endif
  3572  0009EC  0009               	tblrd		*+
  3573  0009EE  CFF5 F02A          	movff	tablat,?_scale
  3574  0009F2  0009               	tblrd		*+
  3575  0009F4  CFF5 F02B          	movff	tablat,?_scale+1
  3576  0009F8  0009               	tblrd		*+
  3577  0009FA  CFF5 F02C          	movff	tablat,?_scale+2
  3578  0009FE  000A               	tblrd		*-
  3579  000A00  CFF5 F02D          	movff	tablat,?_scale+3
  3580  000A04  0012               	return	
  3581  000A06                     l3732:
  3582                           
  3583                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3584  000A06  5032               	movf	scale@scl,w,c
  3585  000A08  0A80               	xorlw	128
  3586  000A0A  0F12               	addlw	-238
  3587  000A0C  A0D8               	btfss	status,0,c
  3588  000A0E  D088               	goto	l3740
  3589                           
  3590                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3591  000A10  0E00               	movlw	0
  3592  000A12  6E0C               	movwf	___awdiv@divisor+1,c
  3593  000A14  0E0A               	movlw	10
  3594  000A16  6E0B               	movwf	___awdiv@divisor,c
  3595  000A18  0E00               	movlw	0
  3596  000A1A  6E06               	movwf	___awmod@divisor+1,c
  3597  000A1C  0E64               	movlw	100
  3598  000A1E  6E05               	movwf	___awmod@divisor,c
  3599  000A20  5032               	movf	scale@scl,w,c
  3600  000A22  6E03               	movwf	___awmod@dividend,c
  3601  000A24  6A04               	clrf	___awmod@dividend+1,c
  3602  000A26  BE03               	btfsc	___awmod@dividend,7,c
  3603  000A28  0604               	decf	___awmod@dividend+1,f,c
  3604  000A2A  ECF9  F013         	call	___awmod	;wreg free
  3605  000A2E  C003  F009         	movff	?___awmod,___awdiv@dividend
  3606  000A32  C004  F00A         	movff	?___awmod+1,___awdiv@dividend+1
  3607  000A36  EC3C  F013         	call	___awdiv	;wreg free
  3608  000A3A  0E09               	movlw	9
  3609  000A3C  2609               	addwf	?___awdiv,f,c
  3610  000A3E  5009               	movf	?___awdiv,w,c
  3611  000A40  0D04               	mullw	4
  3612  000A42  0EDF               	movlw	low __powers_
  3613  000A44  24F3               	addwf	prodl,w,c
  3614  000A46  6EF6               	movwf	tblptrl,c
  3615  000A48  0E7E               	movlw	high __powers_
  3616  000A4A  20F4               	addwfc	prodh,w,c
  3617  000A4C  6EF7               	movwf	tblptrh,c
  3618  000A4E                     	if	0	;There are less than 3 active tblptr bytes
  3619  000A4E                     	endif
  3620  000A4E  0009               	tblrd		*+
  3621  000A50  CFF5 F015          	movff	tablat,___flmul@a
  3622  000A54  0009               	tblrd		*+
  3623  000A56  CFF5 F016          	movff	tablat,___flmul@a+1
  3624  000A5A  0009               	tblrd		*+
  3625  000A5C  CFF5 F017          	movff	tablat,___flmul@a+2
  3626  000A60  000A               	tblrd		*-
  3627  000A62  CFF5 F018          	movff	tablat,___flmul@a+3
  3628  000A66  0E00               	movlw	0
  3629  000A68  6E0C               	movwf	___awdiv@divisor+1,c
  3630  000A6A  0E64               	movlw	100
  3631  000A6C  6E0B               	movwf	___awdiv@divisor,c
  3632  000A6E  5032               	movf	scale@scl,w,c
  3633  000A70  6E09               	movwf	___awdiv@dividend,c
  3634  000A72  6A0A               	clrf	___awdiv@dividend+1,c
  3635  000A74  BE09               	btfsc	___awdiv@dividend,7,c
  3636  000A76  060A               	decf	___awdiv@dividend+1,f,c
  3637  000A78  EC3C  F013         	call	___awdiv	;wreg free
  3638  000A7C  0E12               	movlw	18
  3639  000A7E  2609               	addwf	?___awdiv,f,c
  3640  000A80  5009               	movf	?___awdiv,w,c
  3641  000A82  0D04               	mullw	4
  3642  000A84  0EDF               	movlw	low __powers_
  3643  000A86  24F3               	addwf	prodl,w,c
  3644  000A88  6EF6               	movwf	tblptrl,c
  3645  000A8A  0E7E               	movlw	high __powers_
  3646  000A8C  20F4               	addwfc	prodh,w,c
  3647  000A8E  6EF7               	movwf	tblptrh,c
  3648  000A90                     	if	0	;There are less than 3 active tblptr bytes
  3649  000A90                     	endif
  3650  000A90  0009               	tblrd		*+
  3651  000A92  CFF5 F011          	movff	tablat,___flmul@b
  3652  000A96  0009               	tblrd		*+
  3653  000A98  CFF5 F012          	movff	tablat,___flmul@b+1
  3654  000A9C  0009               	tblrd		*+
  3655  000A9E  CFF5 F013          	movff	tablat,___flmul@b+2
  3656  000AA2  000A               	tblrd		*-
  3657  000AA4  CFF5 F014          	movff	tablat,___flmul@b+3
  3658  000AA8  ECF5  F005         	call	___flmul	;wreg free
  3659  000AAC  C011  F02E         	movff	?___flmul,_scale$1888
  3660  000AB0  C012  F02F         	movff	?___flmul+1,_scale$1888+1
  3661  000AB4  C013  F030         	movff	?___flmul+2,_scale$1888+2
  3662  000AB8  C014  F031         	movff	?___flmul+3,_scale$1888+3
  3663                           
  3664                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3665  000ABC  C02E  F011         	movff	_scale$1888,___flmul@b
  3666  000AC0  C02F  F012         	movff	_scale$1888+1,___flmul@b+1
  3667  000AC4  C030  F013         	movff	_scale$1888+2,___flmul@b+2
  3668  000AC8  C031  F014         	movff	_scale$1888+3,___flmul@b+3
  3669  000ACC  0E00               	movlw	0
  3670  000ACE  6E06               	movwf	___awmod@divisor+1,c
  3671  000AD0  0E0A               	movlw	10
  3672  000AD2  6E05               	movwf	___awmod@divisor,c
  3673  000AD4  5032               	movf	scale@scl,w,c
  3674  000AD6  6E03               	movwf	___awmod@dividend,c
  3675  000AD8  6A04               	clrf	___awmod@dividend+1,c
  3676  000ADA  BE03               	btfsc	___awmod@dividend,7,c
  3677  000ADC  0604               	decf	___awmod@dividend+1,f,c
  3678  000ADE  ECF9  F013         	call	___awmod	;wreg free
  3679  000AE2  5003               	movf	?___awmod,w,c
  3680  000AE4  0D04               	mullw	4
  3681  000AE6  0EDF               	movlw	low __powers_
  3682  000AE8  24F3               	addwf	prodl,w,c
  3683  000AEA  6EF6               	movwf	tblptrl,c
  3684  000AEC  0E7E               	movlw	high __powers_
  3685  000AEE  20F4               	addwfc	prodh,w,c
  3686  000AF0  6EF7               	movwf	tblptrh,c
  3687  000AF2                     	if	0	;There are less than 3 active tblptr bytes
  3688  000AF2                     	endif
  3689  000AF2  0009               	tblrd		*+
  3690  000AF4  CFF5 F015          	movff	tablat,___flmul@a
  3691  000AF8  0009               	tblrd		*+
  3692  000AFA  CFF5 F016          	movff	tablat,___flmul@a+1
  3693  000AFE  0009               	tblrd		*+
  3694  000B00  CFF5 F017          	movff	tablat,___flmul@a+2
  3695  000B04  000A               	tblrd		*-
  3696  000B06  CFF5 F018          	movff	tablat,___flmul@a+3
  3697  000B0A  ECF5  F005         	call	___flmul	;wreg free
  3698  000B0E  C011  F02A         	movff	?___flmul,?_scale
  3699  000B12  C012  F02B         	movff	?___flmul+1,?_scale+1
  3700  000B16  C013  F02C         	movff	?___flmul+2,?_scale+2
  3701  000B1A  C014  F02D         	movff	?___flmul+3,?_scale+3
  3702  000B1E  0012               	return	
  3703  000B20                     l3740:
  3704                           
  3705                           ;doprnt.c: 446: else if(scl > 10)
  3706  000B20  5032               	movf	scale@scl,w,c
  3707  000B22  0A80               	xorlw	128
  3708  000B24  0F75               	addlw	-139
  3709  000B26  A0D8               	btfss	status,0,c
  3710  000B28  D04B               	goto	l3746
  3711                           
  3712                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3713  000B2A  0E00               	movlw	0
  3714  000B2C  6E0C               	movwf	___awdiv@divisor+1,c
  3715  000B2E  0E0A               	movlw	10
  3716  000B30  6E0B               	movwf	___awdiv@divisor,c
  3717  000B32  5032               	movf	scale@scl,w,c
  3718  000B34  6E09               	movwf	___awdiv@dividend,c
  3719  000B36  6A0A               	clrf	___awdiv@dividend+1,c
  3720  000B38  BE09               	btfsc	___awdiv@dividend,7,c
  3721  000B3A  060A               	decf	___awdiv@dividend+1,f,c
  3722  000B3C  EC3C  F013         	call	___awdiv	;wreg free
  3723  000B40  0E09               	movlw	9
  3724  000B42  2609               	addwf	?___awdiv,f,c
  3725  000B44  5009               	movf	?___awdiv,w,c
  3726  000B46  0D04               	mullw	4
  3727  000B48  0EDF               	movlw	low __powers_
  3728  000B4A  24F3               	addwf	prodl,w,c
  3729  000B4C  6EF6               	movwf	tblptrl,c
  3730  000B4E  0E7E               	movlw	high __powers_
  3731  000B50  20F4               	addwfc	prodh,w,c
  3732  000B52  6EF7               	movwf	tblptrh,c
  3733  000B54                     	if	0	;There are less than 3 active tblptr bytes
  3734  000B54                     	endif
  3735  000B54  0009               	tblrd		*+
  3736  000B56  CFF5 F011          	movff	tablat,___flmul@b
  3737  000B5A  0009               	tblrd		*+
  3738  000B5C  CFF5 F012          	movff	tablat,___flmul@b+1
  3739  000B60  0009               	tblrd		*+
  3740  000B62  CFF5 F013          	movff	tablat,___flmul@b+2
  3741  000B66  000A               	tblrd		*-
  3742  000B68  CFF5 F014          	movff	tablat,___flmul@b+3
  3743  000B6C  0E00               	movlw	0
  3744  000B6E  6E06               	movwf	___awmod@divisor+1,c
  3745  000B70  0E0A               	movlw	10
  3746  000B72  6E05               	movwf	___awmod@divisor,c
  3747  000B74  5032               	movf	scale@scl,w,c
  3748  000B76  6E03               	movwf	___awmod@dividend,c
  3749  000B78  6A04               	clrf	___awmod@dividend+1,c
  3750  000B7A  BE03               	btfsc	___awmod@dividend,7,c
  3751  000B7C  0604               	decf	___awmod@dividend+1,f,c
  3752  000B7E  ECF9  F013         	call	___awmod	;wreg free
  3753  000B82  5003               	movf	?___awmod,w,c
  3754  000B84  0D04               	mullw	4
  3755  000B86  0EDF               	movlw	low __powers_
  3756  000B88  24F3               	addwf	prodl,w,c
  3757  000B8A  6EF6               	movwf	tblptrl,c
  3758  000B8C  0E7E               	movlw	high __powers_
  3759  000B8E  20F4               	addwfc	prodh,w,c
  3760  000B90  6EF7               	movwf	tblptrh,c
  3761  000B92                     	if	0	;There are less than 3 active tblptr bytes
  3762  000B92                     	endif
  3763  000B92  0009               	tblrd		*+
  3764  000B94  CFF5 F015          	movff	tablat,___flmul@a
  3765  000B98  0009               	tblrd		*+
  3766  000B9A  CFF5 F016          	movff	tablat,___flmul@a+1
  3767  000B9E  0009               	tblrd		*+
  3768  000BA0  CFF5 F017          	movff	tablat,___flmul@a+2
  3769  000BA4  000A               	tblrd		*-
  3770  000BA6  CFF5 F018          	movff	tablat,___flmul@a+3
  3771  000BAA  ECF5  F005         	call	___flmul	;wreg free
  3772  000BAE  C011  F02A         	movff	?___flmul,?_scale
  3773  000BB2  C012  F02B         	movff	?___flmul+1,?_scale+1
  3774  000BB6  C013  F02C         	movff	?___flmul+2,?_scale+2
  3775  000BBA  C014  F02D         	movff	?___flmul+3,?_scale+3
  3776  000BBE  0012               	return	
  3777  000BC0                     l3746:
  3778                           
  3779                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3780  000BC0  5032               	movf	scale@scl,w,c
  3781  000BC2  0D04               	mullw	4
  3782  000BC4  0EDF               	movlw	low __powers_
  3783  000BC6  24F3               	addwf	prodl,w,c
  3784  000BC8  6EF6               	movwf	tblptrl,c
  3785  000BCA  0E7E               	movlw	high __powers_
  3786  000BCC  20F4               	addwfc	prodh,w,c
  3787  000BCE  6EF7               	movwf	tblptrh,c
  3788  000BD0                     	if	0	;There are less than 3 active tblptr bytes
  3789  000BD0                     	endif
  3790  000BD0  0009               	tblrd		*+
  3791  000BD2  CFF5 F02A          	movff	tablat,?_scale
  3792  000BD6  0009               	tblrd		*+
  3793  000BD8  CFF5 F02B          	movff	tablat,?_scale+1
  3794  000BDC  0009               	tblrd		*+
  3795  000BDE  CFF5 F02C          	movff	tablat,?_scale+2
  3796  000BE2  000A               	tblrd		*-
  3797  000BE4  CFF5 F02D          	movff	tablat,?_scale+3
  3798  000BE8  0012               	return		;funcret
  3799  000BEA                     __end_of_scale:
  3800                           	opt callstack 0
  3801                           
  3802 ;; *************** function ___awmod *****************
  3803 ;; Defined at:
  3804 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awmod.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  dividend        2    2[COMRAM] int 
  3807 ;;  divisor         2    4[COMRAM] int 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  sign            1    7[COMRAM] unsigned char 
  3810 ;;  counter         1    6[COMRAM] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  2    2[COMRAM] int 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3824 ;;Total ram usage:        6 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    2
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_scale
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text6
  3835  0027F2                     __ptext6:
  3836                           	opt callstack 0
  3837  0027F2                     ___awmod:
  3838                           	opt callstack 24
  3839                           
  3840                           ;incstack = 0
  3841  0027F2  0E00               	movlw	0
  3842  0027F4  6E08               	movwf	___awmod@sign,c
  3843  0027F6  AE04               	btfss	___awmod@dividend+1,7,c
  3844  0027F8  D006               	goto	l3568
  3845  0027FA  6C03               	negf	___awmod@dividend,c
  3846  0027FC  1E04               	comf	___awmod@dividend+1,f,c
  3847  0027FE  B0D8               	btfsc	status,0,c
  3848  002800  2A04               	incf	___awmod@dividend+1,f,c
  3849  002802  0E01               	movlw	1
  3850  002804  6E08               	movwf	___awmod@sign,c
  3851  002806                     l3568:
  3852  002806  AE06               	btfss	___awmod@divisor+1,7,c
  3853  002808  D004               	goto	l3572
  3854  00280A  6C05               	negf	___awmod@divisor,c
  3855  00280C  1E06               	comf	___awmod@divisor+1,f,c
  3856  00280E  B0D8               	btfsc	status,0,c
  3857  002810  2A06               	incf	___awmod@divisor+1,f,c
  3858  002812                     l3572:
  3859  002812  5005               	movf	___awmod@divisor,w,c
  3860  002814  1006               	iorwf	___awmod@divisor+1,w,c
  3861  002816  B4D8               	btfsc	status,2,c
  3862  002818  D018               	goto	l3588
  3863  00281A  0E01               	movlw	1
  3864  00281C  6E07               	movwf	___awmod@counter,c
  3865  00281E  D004               	goto	l3578
  3866  002820                     l3576:
  3867  002820  90D8               	bcf	status,0,c
  3868  002822  3605               	rlcf	___awmod@divisor,f,c
  3869  002824  3606               	rlcf	___awmod@divisor+1,f,c
  3870  002826  2A07               	incf	___awmod@counter,f,c
  3871  002828                     l3578:
  3872  002828  AE06               	btfss	___awmod@divisor+1,7,c
  3873  00282A  D7FA               	goto	l3576
  3874  00282C                     u3500:
  3875  00282C  5005               	movf	___awmod@divisor,w,c
  3876  00282E  5C03               	subwf	___awmod@dividend,w,c
  3877  002830  5006               	movf	___awmod@divisor+1,w,c
  3878  002832  5804               	subwfb	___awmod@dividend+1,w,c
  3879  002834  A0D8               	btfss	status,0,c
  3880  002836  D004               	goto	l3584
  3881  002838  5005               	movf	___awmod@divisor,w,c
  3882  00283A  5E03               	subwf	___awmod@dividend,f,c
  3883  00283C  5006               	movf	___awmod@divisor+1,w,c
  3884  00283E  5A04               	subwfb	___awmod@dividend+1,f,c
  3885  002840                     l3584:
  3886  002840  90D8               	bcf	status,0,c
  3887  002842  3206               	rrcf	___awmod@divisor+1,f,c
  3888  002844  3205               	rrcf	___awmod@divisor,f,c
  3889  002846  2E07               	decfsz	___awmod@counter,f,c
  3890  002848  D7F1               	goto	u3500
  3891  00284A                     l3588:
  3892  00284A  5008               	movf	___awmod@sign,w,c
  3893  00284C  B4D8               	btfsc	status,2,c
  3894  00284E  D004               	goto	l3592
  3895  002850  6C03               	negf	___awmod@dividend,c
  3896  002852  1E04               	comf	___awmod@dividend+1,f,c
  3897  002854  B0D8               	btfsc	status,0,c
  3898  002856  2A04               	incf	___awmod@dividend+1,f,c
  3899  002858                     l3592:
  3900  002858  C003  F003         	movff	___awmod@dividend,?___awmod
  3901  00285C  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  3902  002860  0012               	return		;funcret
  3903  002862                     __end_of___awmod:
  3904                           	opt callstack 0
  3905                           
  3906 ;; *************** function ___awdiv *****************
  3907 ;; Defined at:
  3908 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awdiv.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  dividend        2    8[COMRAM] int 
  3911 ;;  divisor         2   10[COMRAM] int 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  quotient        2   14[COMRAM] int 
  3914 ;;  sign            1   13[COMRAM] unsigned char 
  3915 ;;  counter         1   12[COMRAM] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  2    8[COMRAM] int 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;Total ram usage:        8 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    2
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_scale
  3936 ;;		_sprintf
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text7
  3941  002678                     __ptext7:
  3942                           	opt callstack 0
  3943  002678                     ___awdiv:
  3944                           	opt callstack 24
  3945                           
  3946                           ;incstack = 0
  3947  002678  0E00               	movlw	0
  3948  00267A  6E0E               	movwf	___awdiv@sign,c
  3949  00267C  AE0C               	btfss	___awdiv@divisor+1,7,c
  3950  00267E  D006               	goto	l3524
  3951  002680  6C0B               	negf	___awdiv@divisor,c
  3952  002682  1E0C               	comf	___awdiv@divisor+1,f,c
  3953  002684  B0D8               	btfsc	status,0,c
  3954  002686  2A0C               	incf	___awdiv@divisor+1,f,c
  3955  002688  0E01               	movlw	1
  3956  00268A  6E0E               	movwf	___awdiv@sign,c
  3957  00268C                     l3524:
  3958  00268C  AE0A               	btfss	___awdiv@dividend+1,7,c
  3959  00268E  D006               	goto	l3530
  3960  002690  6C09               	negf	___awdiv@dividend,c
  3961  002692  1E0A               	comf	___awdiv@dividend+1,f,c
  3962  002694  B0D8               	btfsc	status,0,c
  3963  002696  2A0A               	incf	___awdiv@dividend+1,f,c
  3964  002698  0E01               	movlw	1
  3965  00269A  1A0E               	xorwf	___awdiv@sign,f,c
  3966  00269C                     l3530:
  3967  00269C  0E00               	movlw	0
  3968  00269E  6E10               	movwf	___awdiv@quotient+1,c
  3969  0026A0  0E00               	movlw	0
  3970  0026A2  6E0F               	movwf	___awdiv@quotient,c
  3971  0026A4  500B               	movf	___awdiv@divisor,w,c
  3972  0026A6  100C               	iorwf	___awdiv@divisor+1,w,c
  3973  0026A8  B4D8               	btfsc	status,2,c
  3974  0026AA  D01C               	goto	l3552
  3975  0026AC  0E01               	movlw	1
  3976  0026AE  6E0D               	movwf	___awdiv@counter,c
  3977  0026B0  D004               	goto	l3538
  3978  0026B2                     l3536:
  3979  0026B2  90D8               	bcf	status,0,c
  3980  0026B4  360B               	rlcf	___awdiv@divisor,f,c
  3981  0026B6  360C               	rlcf	___awdiv@divisor+1,f,c
  3982  0026B8  2A0D               	incf	___awdiv@counter,f,c
  3983  0026BA                     l3538:
  3984  0026BA  AE0C               	btfss	___awdiv@divisor+1,7,c
  3985  0026BC  D7FA               	goto	l3536
  3986  0026BE                     u3440:
  3987  0026BE  90D8               	bcf	status,0,c
  3988  0026C0  360F               	rlcf	___awdiv@quotient,f,c
  3989  0026C2  3610               	rlcf	___awdiv@quotient+1,f,c
  3990  0026C4  500B               	movf	___awdiv@divisor,w,c
  3991  0026C6  5C09               	subwf	___awdiv@dividend,w,c
  3992  0026C8  500C               	movf	___awdiv@divisor+1,w,c
  3993  0026CA  580A               	subwfb	___awdiv@dividend+1,w,c
  3994  0026CC  A0D8               	btfss	status,0,c
  3995  0026CE  D005               	goto	l3548
  3996  0026D0  500B               	movf	___awdiv@divisor,w,c
  3997  0026D2  5E09               	subwf	___awdiv@dividend,f,c
  3998  0026D4  500C               	movf	___awdiv@divisor+1,w,c
  3999  0026D6  5A0A               	subwfb	___awdiv@dividend+1,f,c
  4000  0026D8  800F               	bsf	___awdiv@quotient,0,c
  4001  0026DA                     l3548:
  4002  0026DA  90D8               	bcf	status,0,c
  4003  0026DC  320C               	rrcf	___awdiv@divisor+1,f,c
  4004  0026DE  320B               	rrcf	___awdiv@divisor,f,c
  4005  0026E0  2E0D               	decfsz	___awdiv@counter,f,c
  4006  0026E2  D7ED               	goto	u3440
  4007  0026E4                     l3552:
  4008  0026E4  500E               	movf	___awdiv@sign,w,c
  4009  0026E6  B4D8               	btfsc	status,2,c
  4010  0026E8  D004               	goto	l3556
  4011  0026EA  6C0F               	negf	___awdiv@quotient,c
  4012  0026EC  1E10               	comf	___awdiv@quotient+1,f,c
  4013  0026EE  B0D8               	btfsc	status,0,c
  4014  0026F0  2A10               	incf	___awdiv@quotient+1,f,c
  4015  0026F2                     l3556:
  4016  0026F2  C00F  F009         	movff	___awdiv@quotient,?___awdiv
  4017  0026F6  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
  4018  0026FA  0012               	return		;funcret
  4019  0026FC                     __end_of___awdiv:
  4020                           	opt callstack 0
  4021                           
  4022 ;; *************** function _isdigit *****************
  4023 ;; Defined at:
  4024 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/isdigit.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  c               1    wreg     unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  c               1    4[COMRAM] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;Total ram usage:        3 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    2
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_sprintf
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text8
  4053  002BA2                     __ptext8:
  4054                           	opt callstack 0
  4055  002BA2                     _isdigit:
  4056                           	opt callstack 25
  4057                           
  4058                           ;incstack = 0
  4059                           ;isdigit@c stored from wreg
  4060  002BA2  6E05               	movwf	isdigit@c,c
  4061  002BA4  0E00               	movlw	0
  4062  002BA6  6E04               	movwf	_isdigit$1661,c
  4063  002BA8  0E3A               	movlw	58
  4064  002BAA  6005               	cpfslt	isdigit@c,c
  4065  002BAC  D005               	goto	l3758
  4066  002BAE  0E2F               	movlw	47
  4067  002BB0  6405               	cpfsgt	isdigit@c,c
  4068  002BB2  D002               	goto	l3758
  4069  002BB4  0E01               	movlw	1
  4070  002BB6  6E04               	movwf	_isdigit$1661,c
  4071  002BB8                     l3758:
  4072  002BB8  C004  F003         	movff	_isdigit$1661,??_isdigit
  4073  002BBC  3003               	rrcf	??_isdigit,w,c
  4074  002BBE  0012               	return		;funcret
  4075  002BC0                     __end_of_isdigit:
  4076                           	opt callstack 0
  4077                           
  4078 ;; *************** function _fround *****************
  4079 ;; Defined at:
  4080 ;;		line 417 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/doprnt.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  prec            1    wreg     unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  prec            1   53[COMRAM] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  4   41[COMRAM] unsigned char 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;Total ram usage:       13 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    3
  4101 ;; This function calls:
  4102 ;;		___flmul
  4103 ;;		___lwdiv
  4104 ;;		___lwmod
  4105 ;; This function is called by:
  4106 ;;		_sprintf
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text9
  4111  001248                     __ptext9:
  4112                           	opt callstack 0
  4113  001248                     _fround:
  4114                           	opt callstack 24
  4115                           
  4116                           ;incstack = 0
  4117                           ;fround@prec stored from wreg
  4118  001248  6E36               	movwf	fround@prec,c
  4119                           
  4120                           ;doprnt.c: 421: if(prec>=110)
  4121  00124A  0E6D               	movlw	109
  4122  00124C  6436               	cpfsgt	fround@prec,c
  4123  00124E  D0AC               	goto	l3702
  4124                           
  4125                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4126  001250  0E00               	movlw	0
  4127  001252  6E15               	movwf	___flmul@a,c
  4128  001254  0E00               	movlw	0
  4129  001256  6E16               	movwf	___flmul@a+1,c
  4130  001258  0E00               	movlw	0
  4131  00125A  6E17               	movwf	___flmul@a+2,c
  4132  00125C  0E3F               	movlw	63
  4133  00125E  6E18               	movwf	___flmul@a+3,c
  4134  001260  0E00               	movlw	0
  4135  001262  6E0B               	movwf	___lwdiv@divisor+1,c
  4136  001264  0E64               	movlw	100
  4137  001266  6E0A               	movwf	___lwdiv@divisor,c
  4138  001268  C036  F008         	movff	fround@prec,___lwdiv@dividend
  4139  00126C  6A09               	clrf	___lwdiv@dividend+1,c
  4140  00126E  ECEA  F014         	call	___lwdiv	;wreg free
  4141  001272  90D8               	bcf	status,0,c
  4142  001274  3608               	rlcf	?___lwdiv,f,c
  4143  001276  3609               	rlcf	?___lwdiv+1,f,c
  4144  001278  90D8               	bcf	status,0,c
  4145  00127A  3608               	rlcf	?___lwdiv,f,c
  4146  00127C  3609               	rlcf	?___lwdiv+1,f,c
  4147  00127E  0E48               	movlw	72
  4148  001280  2608               	addwf	?___lwdiv,f,c
  4149  001282  0E00               	movlw	0
  4150  001284  2209               	addwfc	?___lwdiv+1,f,c
  4151  001286  0E13               	movlw	low __npowers_
  4152  001288  2408               	addwf	?___lwdiv,w,c
  4153  00128A  6EF6               	movwf	tblptrl,c
  4154  00128C  0E7F               	movlw	high __npowers_
  4155  00128E  2009               	addwfc	?___lwdiv+1,w,c
  4156  001290  6EF7               	movwf	tblptrh,c
  4157  001292                     	if	0	;There are less than 3 active tblptr bytes
  4158  001292                     	endif
  4159  001292  0009               	tblrd		*+
  4160  001294  CFF5 F011          	movff	tablat,___flmul@b
  4161  001298  0009               	tblrd		*+
  4162  00129A  CFF5 F012          	movff	tablat,___flmul@b+1
  4163  00129E  0009               	tblrd		*+
  4164  0012A0  CFF5 F013          	movff	tablat,___flmul@b+2
  4165  0012A4  000A               	tblrd		*-
  4166  0012A6  CFF5 F014          	movff	tablat,___flmul@b+3
  4167  0012AA  ECF5  F005         	call	___flmul	;wreg free
  4168  0012AE  C011  F032         	movff	?___flmul,_fround$1886
  4169  0012B2  C012  F033         	movff	?___flmul+1,_fround$1886+1
  4170  0012B6  C013  F034         	movff	?___flmul+2,_fround$1886+2
  4171  0012BA  C014  F035         	movff	?___flmul+3,_fround$1886+3
  4172                           
  4173                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4174  0012BE  0E00               	movlw	0
  4175  0012C0  6E0B               	movwf	___lwdiv@divisor+1,c
  4176  0012C2  0E0A               	movlw	10
  4177  0012C4  6E0A               	movwf	___lwdiv@divisor,c
  4178  0012C6  0E00               	movlw	0
  4179  0012C8  6E06               	movwf	___lwmod@divisor+1,c
  4180  0012CA  0E64               	movlw	100
  4181  0012CC  6E05               	movwf	___lwmod@divisor,c
  4182  0012CE  C036  F003         	movff	fround@prec,___lwmod@dividend
  4183  0012D2  6A04               	clrf	___lwmod@dividend+1,c
  4184  0012D4  EC86  F015         	call	___lwmod	;wreg free
  4185  0012D8  C003  F008         	movff	?___lwmod,___lwdiv@dividend
  4186  0012DC  C004  F009         	movff	?___lwmod+1,___lwdiv@dividend+1
  4187  0012E0  ECEA  F014         	call	___lwdiv	;wreg free
  4188  0012E4  90D8               	bcf	status,0,c
  4189  0012E6  3608               	rlcf	?___lwdiv,f,c
  4190  0012E8  3609               	rlcf	?___lwdiv+1,f,c
  4191  0012EA  90D8               	bcf	status,0,c
  4192  0012EC  3608               	rlcf	?___lwdiv,f,c
  4193  0012EE  3609               	rlcf	?___lwdiv+1,f,c
  4194  0012F0  0E24               	movlw	36
  4195  0012F2  2608               	addwf	?___lwdiv,f,c
  4196  0012F4  0E00               	movlw	0
  4197  0012F6  2209               	addwfc	?___lwdiv+1,f,c
  4198  0012F8  0E13               	movlw	low __npowers_
  4199  0012FA  2408               	addwf	?___lwdiv,w,c
  4200  0012FC  6EF6               	movwf	tblptrl,c
  4201  0012FE  0E7F               	movlw	high __npowers_
  4202  001300  2009               	addwfc	?___lwdiv+1,w,c
  4203  001302  6EF7               	movwf	tblptrh,c
  4204  001304                     	if	0	;There are less than 3 active tblptr bytes
  4205  001304                     	endif
  4206  001304  0009               	tblrd		*+
  4207  001306  CFF5 F015          	movff	tablat,___flmul@a
  4208  00130A  0009               	tblrd		*+
  4209  00130C  CFF5 F016          	movff	tablat,___flmul@a+1
  4210  001310  0009               	tblrd		*+
  4211  001312  CFF5 F017          	movff	tablat,___flmul@a+2
  4212  001316  000A               	tblrd		*-
  4213  001318  CFF5 F018          	movff	tablat,___flmul@a+3
  4214  00131C  C032  F011         	movff	_fround$1886,___flmul@b
  4215  001320  C033  F012         	movff	_fround$1886+1,___flmul@b+1
  4216  001324  C034  F013         	movff	_fround$1886+2,___flmul@b+2
  4217  001328  C035  F014         	movff	_fround$1886+3,___flmul@b+3
  4218  00132C  ECF5  F005         	call	___flmul	;wreg free
  4219  001330  C011  F02E         	movff	?___flmul,_fround$1887
  4220  001334  C012  F02F         	movff	?___flmul+1,_fround$1887+1
  4221  001338  C013  F030         	movff	?___flmul+2,_fround$1887+2
  4222  00133C  C014  F031         	movff	?___flmul+3,_fround$1887+3
  4223                           
  4224                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4225  001340  C02E  F011         	movff	_fround$1887,___flmul@b
  4226  001344  C02F  F012         	movff	_fround$1887+1,___flmul@b+1
  4227  001348  C030  F013         	movff	_fround$1887+2,___flmul@b+2
  4228  00134C  C031  F014         	movff	_fround$1887+3,___flmul@b+3
  4229  001350  0E00               	movlw	0
  4230  001352  6E06               	movwf	___lwmod@divisor+1,c
  4231  001354  0E0A               	movlw	10
  4232  001356  6E05               	movwf	___lwmod@divisor,c
  4233  001358  C036  F003         	movff	fround@prec,___lwmod@dividend
  4234  00135C  6A04               	clrf	___lwmod@dividend+1,c
  4235  00135E  EC86  F015         	call	___lwmod	;wreg free
  4236  001362  90D8               	bcf	status,0,c
  4237  001364  3603               	rlcf	?___lwmod,f,c
  4238  001366  3604               	rlcf	?___lwmod+1,f,c
  4239  001368  90D8               	bcf	status,0,c
  4240  00136A  3603               	rlcf	?___lwmod,f,c
  4241  00136C  3604               	rlcf	?___lwmod+1,f,c
  4242  00136E  0E13               	movlw	low __npowers_
  4243  001370  2403               	addwf	?___lwmod,w,c
  4244  001372  6EF6               	movwf	tblptrl,c
  4245  001374  0E7F               	movlw	high __npowers_
  4246  001376  2004               	addwfc	?___lwmod+1,w,c
  4247  001378  6EF7               	movwf	tblptrh,c
  4248  00137A                     	if	0	;There are less than 3 active tblptr bytes
  4249  00137A                     	endif
  4250  00137A  0009               	tblrd		*+
  4251  00137C  CFF5 F015          	movff	tablat,___flmul@a
  4252  001380  0009               	tblrd		*+
  4253  001382  CFF5 F016          	movff	tablat,___flmul@a+1
  4254  001386  0009               	tblrd		*+
  4255  001388  CFF5 F017          	movff	tablat,___flmul@a+2
  4256  00138C  000A               	tblrd		*-
  4257  00138E  CFF5 F018          	movff	tablat,___flmul@a+3
  4258  001392  ECF5  F005         	call	___flmul	;wreg free
  4259  001396  C011  F02A         	movff	?___flmul,?_fround
  4260  00139A  C012  F02B         	movff	?___flmul+1,?_fround+1
  4261  00139E  C013  F02C         	movff	?___flmul+2,?_fround+2
  4262  0013A2  C014  F02D         	movff	?___flmul+3,?_fround+3
  4263  0013A6  0012               	return	
  4264  0013A8                     l3702:
  4265                           
  4266                           ;doprnt.c: 423: else if(prec > 10)
  4267  0013A8  0E0A               	movlw	10
  4268  0013AA  6436               	cpfsgt	fround@prec,c
  4269  0013AC  D06B               	goto	l3708
  4270                           
  4271                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4272  0013AE  0E00               	movlw	0
  4273  0013B0  6E15               	movwf	___flmul@a,c
  4274  0013B2  0E00               	movlw	0
  4275  0013B4  6E16               	movwf	___flmul@a+1,c
  4276  0013B6  0E00               	movlw	0
  4277  0013B8  6E17               	movwf	___flmul@a+2,c
  4278  0013BA  0E3F               	movlw	63
  4279  0013BC  6E18               	movwf	___flmul@a+3,c
  4280  0013BE  0E00               	movlw	0
  4281  0013C0  6E0B               	movwf	___lwdiv@divisor+1,c
  4282  0013C2  0E0A               	movlw	10
  4283  0013C4  6E0A               	movwf	___lwdiv@divisor,c
  4284  0013C6  C036  F008         	movff	fround@prec,___lwdiv@dividend
  4285  0013CA  6A09               	clrf	___lwdiv@dividend+1,c
  4286  0013CC  ECEA  F014         	call	___lwdiv	;wreg free
  4287  0013D0  90D8               	bcf	status,0,c
  4288  0013D2  3608               	rlcf	?___lwdiv,f,c
  4289  0013D4  3609               	rlcf	?___lwdiv+1,f,c
  4290  0013D6  90D8               	bcf	status,0,c
  4291  0013D8  3608               	rlcf	?___lwdiv,f,c
  4292  0013DA  3609               	rlcf	?___lwdiv+1,f,c
  4293  0013DC  0E24               	movlw	36
  4294  0013DE  2608               	addwf	?___lwdiv,f,c
  4295  0013E0  0E00               	movlw	0
  4296  0013E2  2209               	addwfc	?___lwdiv+1,f,c
  4297  0013E4  0E13               	movlw	low __npowers_
  4298  0013E6  2408               	addwf	?___lwdiv,w,c
  4299  0013E8  6EF6               	movwf	tblptrl,c
  4300  0013EA  0E7F               	movlw	high __npowers_
  4301  0013EC  2009               	addwfc	?___lwdiv+1,w,c
  4302  0013EE  6EF7               	movwf	tblptrh,c
  4303  0013F0                     	if	0	;There are less than 3 active tblptr bytes
  4304  0013F0                     	endif
  4305  0013F0  0009               	tblrd		*+
  4306  0013F2  CFF5 F011          	movff	tablat,___flmul@b
  4307  0013F6  0009               	tblrd		*+
  4308  0013F8  CFF5 F012          	movff	tablat,___flmul@b+1
  4309  0013FC  0009               	tblrd		*+
  4310  0013FE  CFF5 F013          	movff	tablat,___flmul@b+2
  4311  001402  000A               	tblrd		*-
  4312  001404  CFF5 F014          	movff	tablat,___flmul@b+3
  4313  001408  ECF5  F005         	call	___flmul	;wreg free
  4314  00140C  C011  F032         	movff	?___flmul,_fround$1886
  4315  001410  C012  F033         	movff	?___flmul+1,_fround$1886+1
  4316  001414  C013  F034         	movff	?___flmul+2,_fround$1886+2
  4317  001418  C014  F035         	movff	?___flmul+3,_fround$1886+3
  4318                           
  4319                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4320  00141C  C032  F011         	movff	_fround$1886,___flmul@b
  4321  001420  C033  F012         	movff	_fround$1886+1,___flmul@b+1
  4322  001424  C034  F013         	movff	_fround$1886+2,___flmul@b+2
  4323  001428  C035  F014         	movff	_fround$1886+3,___flmul@b+3
  4324  00142C  0E00               	movlw	0
  4325  00142E  6E06               	movwf	___lwmod@divisor+1,c
  4326  001430  0E0A               	movlw	10
  4327  001432  6E05               	movwf	___lwmod@divisor,c
  4328  001434  C036  F003         	movff	fround@prec,___lwmod@dividend
  4329  001438  6A04               	clrf	___lwmod@dividend+1,c
  4330  00143A  EC86  F015         	call	___lwmod	;wreg free
  4331  00143E  90D8               	bcf	status,0,c
  4332  001440  3603               	rlcf	?___lwmod,f,c
  4333  001442  3604               	rlcf	?___lwmod+1,f,c
  4334  001444  90D8               	bcf	status,0,c
  4335  001446  3603               	rlcf	?___lwmod,f,c
  4336  001448  3604               	rlcf	?___lwmod+1,f,c
  4337  00144A  0E13               	movlw	low __npowers_
  4338  00144C  2403               	addwf	?___lwmod,w,c
  4339  00144E  6EF6               	movwf	tblptrl,c
  4340  001450  0E7F               	movlw	high __npowers_
  4341  001452  2004               	addwfc	?___lwmod+1,w,c
  4342  001454  6EF7               	movwf	tblptrh,c
  4343  001456                     	if	0	;There are less than 3 active tblptr bytes
  4344  001456                     	endif
  4345  001456  0009               	tblrd		*+
  4346  001458  CFF5 F015          	movff	tablat,___flmul@a
  4347  00145C  0009               	tblrd		*+
  4348  00145E  CFF5 F016          	movff	tablat,___flmul@a+1
  4349  001462  0009               	tblrd		*+
  4350  001464  CFF5 F017          	movff	tablat,___flmul@a+2
  4351  001468  000A               	tblrd		*-
  4352  00146A  CFF5 F018          	movff	tablat,___flmul@a+3
  4353  00146E  ECF5  F005         	call	___flmul	;wreg free
  4354  001472  C011  F02A         	movff	?___flmul,?_fround
  4355  001476  C012  F02B         	movff	?___flmul+1,?_fround+1
  4356  00147A  C013  F02C         	movff	?___flmul+2,?_fround+2
  4357  00147E  C014  F02D         	movff	?___flmul+3,?_fround+3
  4358  001482  0012               	return	
  4359  001484                     l3708:
  4360                           
  4361                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4362  001484  5036               	movf	fround@prec,w,c
  4363  001486  0D04               	mullw	4
  4364  001488  0E13               	movlw	low __npowers_
  4365  00148A  24F3               	addwf	prodl,w,c
  4366  00148C  6EF6               	movwf	tblptrl,c
  4367  00148E  0E7F               	movlw	high __npowers_
  4368  001490  20F4               	addwfc	prodh,w,c
  4369  001492  6EF7               	movwf	tblptrh,c
  4370  001494                     	if	0	;There are less than 3 active tblptr bytes
  4371  001494                     	endif
  4372  001494  0009               	tblrd		*+
  4373  001496  CFF5 F011          	movff	tablat,___flmul@b
  4374  00149A  0009               	tblrd		*+
  4375  00149C  CFF5 F012          	movff	tablat,___flmul@b+1
  4376  0014A0  0009               	tblrd		*+
  4377  0014A2  CFF5 F013          	movff	tablat,___flmul@b+2
  4378  0014A6  000A               	tblrd		*-
  4379  0014A8  CFF5 F014          	movff	tablat,___flmul@b+3
  4380  0014AC  0E00               	movlw	0
  4381  0014AE  6E15               	movwf	___flmul@a,c
  4382  0014B0  0E00               	movlw	0
  4383  0014B2  6E16               	movwf	___flmul@a+1,c
  4384  0014B4  0E00               	movlw	0
  4385  0014B6  6E17               	movwf	___flmul@a+2,c
  4386  0014B8  0E3F               	movlw	63
  4387  0014BA  6E18               	movwf	___flmul@a+3,c
  4388  0014BC  ECF5  F005         	call	___flmul	;wreg free
  4389  0014C0  C011  F02A         	movff	?___flmul,?_fround
  4390  0014C4  C012  F02B         	movff	?___flmul+1,?_fround+1
  4391  0014C8  C013  F02C         	movff	?___flmul+2,?_fround+2
  4392  0014CC  C014  F02D         	movff	?___flmul+3,?_fround+3
  4393  0014D0  0012               	return		;funcret
  4394  0014D2                     __end_of_fround:
  4395                           	opt callstack 0
  4396                           
  4397 ;; *************** function ___lwmod *****************
  4398 ;; Defined at:
  4399 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  dividend        2    2[COMRAM] unsigned int 
  4402 ;;  divisor         2    4[COMRAM] unsigned int 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  counter         1    6[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    2[COMRAM] unsigned int 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4417 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4418 ;;Total ram usage:        5 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    2
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_fround
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text10
  4429  002B0C                     __ptext10:
  4430                           	opt callstack 0
  4431  002B0C                     ___lwmod:
  4432                           	opt callstack 24
  4433                           
  4434                           ;incstack = 0
  4435  002B0C  5005               	movf	___lwmod@divisor,w,c
  4436  002B0E  1006               	iorwf	___lwmod@divisor+1,w,c
  4437  002B10  B4D8               	btfsc	status,2,c
  4438  002B12  D018               	goto	l1053
  4439  002B14  0E01               	movlw	1
  4440  002B16  6E07               	movwf	___lwmod@counter,c
  4441  002B18  D004               	goto	l3624
  4442  002B1A                     l3622:
  4443  002B1A  90D8               	bcf	status,0,c
  4444  002B1C  3605               	rlcf	___lwmod@divisor,f,c
  4445  002B1E  3606               	rlcf	___lwmod@divisor+1,f,c
  4446  002B20  2A07               	incf	___lwmod@counter,f,c
  4447  002B22                     l3624:
  4448  002B22  AE06               	btfss	___lwmod@divisor+1,7,c
  4449  002B24  D7FA               	goto	l3622
  4450  002B26                     u3570:
  4451  002B26  5005               	movf	___lwmod@divisor,w,c
  4452  002B28  5C03               	subwf	___lwmod@dividend,w,c
  4453  002B2A  5006               	movf	___lwmod@divisor+1,w,c
  4454  002B2C  5804               	subwfb	___lwmod@dividend+1,w,c
  4455  002B2E  A0D8               	btfss	status,0,c
  4456  002B30  D004               	goto	l3630
  4457  002B32  5005               	movf	___lwmod@divisor,w,c
  4458  002B34  5E03               	subwf	___lwmod@dividend,f,c
  4459  002B36  5006               	movf	___lwmod@divisor+1,w,c
  4460  002B38  5A04               	subwfb	___lwmod@dividend+1,f,c
  4461  002B3A                     l3630:
  4462  002B3A  90D8               	bcf	status,0,c
  4463  002B3C  3206               	rrcf	___lwmod@divisor+1,f,c
  4464  002B3E  3205               	rrcf	___lwmod@divisor,f,c
  4465  002B40  2E07               	decfsz	___lwmod@counter,f,c
  4466  002B42  D7F1               	goto	u3570
  4467  002B44                     l1053:
  4468  002B44  C003  F003         	movff	___lwmod@dividend,?___lwmod
  4469  002B48  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  4470  002B4C  0012               	return		;funcret
  4471  002B4E                     __end_of___lwmod:
  4472                           	opt callstack 0
  4473                           
  4474 ;; *************** function ___lwdiv *****************
  4475 ;; Defined at:
  4476 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  dividend        2    7[COMRAM] unsigned int 
  4479 ;;  divisor         2    9[COMRAM] unsigned int 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  quotient        2   11[COMRAM] unsigned int 
  4482 ;;  counter         1   13[COMRAM] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  2    7[COMRAM] unsigned int 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4492 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4495 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4496 ;;Total ram usage:        7 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    2
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_fround
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text11
  4507  0029D4                     __ptext11:
  4508                           	opt callstack 0
  4509  0029D4                     ___lwdiv:
  4510                           	opt callstack 24
  4511                           
  4512                           ;incstack = 0
  4513  0029D4  0E00               	movlw	0
  4514  0029D6  6E0D               	movwf	___lwdiv@quotient+1,c
  4515  0029D8  0E00               	movlw	0
  4516  0029DA  6E0C               	movwf	___lwdiv@quotient,c
  4517  0029DC  500A               	movf	___lwdiv@divisor,w,c
  4518  0029DE  100B               	iorwf	___lwdiv@divisor+1,w,c
  4519  0029E0  B4D8               	btfsc	status,2,c
  4520  0029E2  D01C               	goto	l1043
  4521  0029E4  0E01               	movlw	1
  4522  0029E6  6E0E               	movwf	___lwdiv@counter,c
  4523  0029E8  D004               	goto	l3604
  4524  0029EA                     l3602:
  4525  0029EA  90D8               	bcf	status,0,c
  4526  0029EC  360A               	rlcf	___lwdiv@divisor,f,c
  4527  0029EE  360B               	rlcf	___lwdiv@divisor+1,f,c
  4528  0029F0  2A0E               	incf	___lwdiv@counter,f,c
  4529  0029F2                     l3604:
  4530  0029F2  AE0B               	btfss	___lwdiv@divisor+1,7,c
  4531  0029F4  D7FA               	goto	l3602
  4532  0029F6                     u3540:
  4533  0029F6  90D8               	bcf	status,0,c
  4534  0029F8  360C               	rlcf	___lwdiv@quotient,f,c
  4535  0029FA  360D               	rlcf	___lwdiv@quotient+1,f,c
  4536  0029FC  500A               	movf	___lwdiv@divisor,w,c
  4537  0029FE  5C08               	subwf	___lwdiv@dividend,w,c
  4538  002A00  500B               	movf	___lwdiv@divisor+1,w,c
  4539  002A02  5809               	subwfb	___lwdiv@dividend+1,w,c
  4540  002A04  A0D8               	btfss	status,0,c
  4541  002A06  D005               	goto	l3614
  4542  002A08  500A               	movf	___lwdiv@divisor,w,c
  4543  002A0A  5E08               	subwf	___lwdiv@dividend,f,c
  4544  002A0C  500B               	movf	___lwdiv@divisor+1,w,c
  4545  002A0E  5A09               	subwfb	___lwdiv@dividend+1,f,c
  4546  002A10  800C               	bsf	___lwdiv@quotient,0,c
  4547  002A12                     l3614:
  4548  002A12  90D8               	bcf	status,0,c
  4549  002A14  320B               	rrcf	___lwdiv@divisor+1,f,c
  4550  002A16  320A               	rrcf	___lwdiv@divisor,f,c
  4551  002A18  2E0E               	decfsz	___lwdiv@counter,f,c
  4552  002A1A  D7ED               	goto	u3540
  4553  002A1C                     l1043:
  4554  002A1C  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  4555  002A20  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4556  002A24  0012               	return		;funcret
  4557  002A26                     __end_of___lwdiv:
  4558                           	opt callstack 0
  4559                           
  4560 ;; *************** function ___flmul *****************
  4561 ;; Defined at:
  4562 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcmul.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  b               4   16[COMRAM] unsigned int 
  4565 ;;  a               4   20[COMRAM] unsigned int 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  prod            4   35[COMRAM] struct .
  4568 ;;  grs             4   29[COMRAM] unsigned long 
  4569 ;;  temp            2   39[COMRAM] struct .
  4570 ;;  bexp            1   34[COMRAM] unsigned char 
  4571 ;;  aexp            1   33[COMRAM] unsigned char 
  4572 ;;  sign            1   28[COMRAM] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  4   16[COMRAM] unsigned char 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, prodl, prodh
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4582 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4583 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;Total ram usage:       25 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    2
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_fround
  4593 ;;		_scale
  4594 ;;		_sprintf
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text12
  4599  000BEA                     __ptext12:
  4600                           	opt callstack 0
  4601  000BEA                     ___flmul:
  4602                           	opt callstack 24
  4603                           
  4604                           ;incstack = 0
  4605  000BEA  5014               	movf	___flmul@b+3,w,c
  4606  000BEC  0B80               	andlw	128
  4607  000BEE  6E1D               	movwf	___flmul@sign,c
  4608  000BF0  5014               	movf	___flmul@b+3,w,c
  4609  000BF2  2414               	addwf	___flmul@b+3,w,c
  4610  000BF4  6E23               	movwf	___flmul@bexp,c
  4611  000BF6  BE13               	btfsc	___flmul@b+2,7,c
  4612  000BF8  8023               	bsf	___flmul@bexp,0,c
  4613  000BFA  5023               	movf	___flmul@bexp,w,c
  4614  000BFC  B4D8               	btfsc	status,2,c
  4615  000BFE  D00D               	goto	l3400
  4616  000C00  2823               	incf	___flmul@bexp,w,c
  4617  000C02  A4D8               	btfss	status,2,c
  4618  000C04  D008               	goto	l3398
  4619  000C06  0E00               	movlw	0
  4620  000C08  6E11               	movwf	___flmul@b,c
  4621  000C0A  0E00               	movlw	0
  4622  000C0C  6E12               	movwf	___flmul@b+1,c
  4623  000C0E  0E00               	movlw	0
  4624  000C10  6E13               	movwf	___flmul@b+2,c
  4625  000C12  0E00               	movlw	0
  4626  000C14  6E14               	movwf	___flmul@b+3,c
  4627  000C16                     l3398:
  4628  000C16  8E13               	bsf	___flmul@b+2,7,c
  4629  000C18  D008               	goto	l3402
  4630  000C1A                     l3400:
  4631  000C1A  0E00               	movlw	0
  4632  000C1C  6E11               	movwf	___flmul@b,c
  4633  000C1E  0E00               	movlw	0
  4634  000C20  6E12               	movwf	___flmul@b+1,c
  4635  000C22  0E00               	movlw	0
  4636  000C24  6E13               	movwf	___flmul@b+2,c
  4637  000C26  0E00               	movlw	0
  4638  000C28  6E14               	movwf	___flmul@b+3,c
  4639  000C2A                     l3402:
  4640  000C2A  5018               	movf	___flmul@a+3,w,c
  4641  000C2C  0B80               	andlw	128
  4642  000C2E  1A1D               	xorwf	___flmul@sign,f,c
  4643  000C30  5018               	movf	___flmul@a+3,w,c
  4644  000C32  2418               	addwf	___flmul@a+3,w,c
  4645  000C34  6E22               	movwf	___flmul@aexp,c
  4646  000C36  BE17               	btfsc	___flmul@a+2,7,c
  4647  000C38  8022               	bsf	___flmul@aexp,0,c
  4648  000C3A  5022               	movf	___flmul@aexp,w,c
  4649  000C3C  B4D8               	btfsc	status,2,c
  4650  000C3E  D00D               	goto	l3418
  4651  000C40  2822               	incf	___flmul@aexp,w,c
  4652  000C42  A4D8               	btfss	status,2,c
  4653  000C44  D008               	goto	l3416
  4654  000C46  0E00               	movlw	0
  4655  000C48  6E15               	movwf	___flmul@a,c
  4656  000C4A  0E00               	movlw	0
  4657  000C4C  6E16               	movwf	___flmul@a+1,c
  4658  000C4E  0E00               	movlw	0
  4659  000C50  6E17               	movwf	___flmul@a+2,c
  4660  000C52  0E00               	movlw	0
  4661  000C54  6E18               	movwf	___flmul@a+3,c
  4662  000C56                     l3416:
  4663  000C56  8E17               	bsf	___flmul@a+2,7,c
  4664  000C58  D008               	goto	l1166
  4665  000C5A                     l3418:
  4666  000C5A  0E00               	movlw	0
  4667  000C5C  6E15               	movwf	___flmul@a,c
  4668  000C5E  0E00               	movlw	0
  4669  000C60  6E16               	movwf	___flmul@a+1,c
  4670  000C62  0E00               	movlw	0
  4671  000C64  6E17               	movwf	___flmul@a+2,c
  4672  000C66  0E00               	movlw	0
  4673  000C68  6E18               	movwf	___flmul@a+3,c
  4674  000C6A                     l1166:
  4675  000C6A  5022               	movf	___flmul@aexp,w,c
  4676  000C6C  B4D8               	btfsc	status,2,c
  4677  000C6E  D003               	goto	u3290
  4678  000C70  5023               	movf	___flmul@bexp,w,c
  4679  000C72  A4D8               	btfss	status,2,c
  4680  000C74  D009               	goto	l3426
  4681  000C76                     u3290:
  4682  000C76  0E00               	movlw	0
  4683  000C78  6E11               	movwf	?___flmul,c
  4684  000C7A  0E00               	movlw	0
  4685  000C7C  6E12               	movwf	?___flmul+1,c
  4686  000C7E  0E00               	movlw	0
  4687  000C80  6E13               	movwf	?___flmul+2,c
  4688  000C82  0E00               	movlw	0
  4689  000C84  6E14               	movwf	?___flmul+3,c
  4690  000C86  0012               	return	
  4691  000C88                     l3426:
  4692  000C88  5017               	movf	___flmul@a+2,w,c
  4693  000C8A  0211               	mulwf	___flmul@b,c
  4694  000C8C  CFF3 F028          	movff	prodl,___flmul@temp
  4695  000C90  CFF4 F029          	movff	prodh,___flmul@temp+1
  4696  000C94  5028               	movf	___flmul@temp,w,c
  4697  000C96  6E1E               	movwf	___flmul@grs,c
  4698  000C98  6A1F               	clrf	___flmul@grs+1,c
  4699  000C9A  6A20               	clrf	___flmul@grs+2,c
  4700  000C9C  6A21               	clrf	___flmul@grs+3,c
  4701  000C9E  5029               	movf	___flmul@temp+1,w,c
  4702  000CA0  6E24               	movwf	___flmul@prod,c
  4703  000CA2  6A25               	clrf	___flmul@prod+1,c
  4704  000CA4  6A26               	clrf	___flmul@prod+2,c
  4705  000CA6  6A27               	clrf	___flmul@prod+3,c
  4706  000CA8  5016               	movf	___flmul@a+1,w,c
  4707  000CAA  0212               	mulwf	___flmul@b+1,c
  4708  000CAC  CFF3 F028          	movff	prodl,___flmul@temp
  4709  000CB0  CFF4 F029          	movff	prodh,___flmul@temp+1
  4710  000CB4  5028               	movf	___flmul@temp,w,c
  4711  000CB6  261E               	addwf	___flmul@grs,f,c
  4712  000CB8  0E00               	movlw	0
  4713  000CBA  221F               	addwfc	___flmul@grs+1,f,c
  4714  000CBC  2220               	addwfc	___flmul@grs+2,f,c
  4715  000CBE  2221               	addwfc	___flmul@grs+3,f,c
  4716  000CC0  5029               	movf	___flmul@temp+1,w,c
  4717  000CC2  2624               	addwf	___flmul@prod,f,c
  4718  000CC4  0E00               	movlw	0
  4719  000CC6  2225               	addwfc	___flmul@prod+1,f,c
  4720  000CC8  2226               	addwfc	___flmul@prod+2,f,c
  4721  000CCA  2227               	addwfc	___flmul@prod+3,f,c
  4722  000CCC  5015               	movf	___flmul@a,w,c
  4723  000CCE  0213               	mulwf	___flmul@b+2,c
  4724  000CD0  CFF3 F028          	movff	prodl,___flmul@temp
  4725  000CD4  CFF4 F029          	movff	prodh,___flmul@temp+1
  4726  000CD8  5028               	movf	___flmul@temp,w,c
  4727  000CDA  261E               	addwf	___flmul@grs,f,c
  4728  000CDC  0E00               	movlw	0
  4729  000CDE  221F               	addwfc	___flmul@grs+1,f,c
  4730  000CE0  2220               	addwfc	___flmul@grs+2,f,c
  4731  000CE2  2221               	addwfc	___flmul@grs+3,f,c
  4732  000CE4  5029               	movf	___flmul@temp+1,w,c
  4733  000CE6  2624               	addwf	___flmul@prod,f,c
  4734  000CE8  0E00               	movlw	0
  4735  000CEA  2225               	addwfc	___flmul@prod+1,f,c
  4736  000CEC  2226               	addwfc	___flmul@prod+2,f,c
  4737  000CEE  2227               	addwfc	___flmul@prod+3,f,c
  4738  000CF0  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  4739  000CF4  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  4740  000CF8  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  4741  000CFC  6A1E               	clrf	___flmul@grs,c
  4742  000CFE  5015               	movf	___flmul@a,w,c
  4743  000D00  0212               	mulwf	___flmul@b+1,c
  4744  000D02  CFF3 F028          	movff	prodl,___flmul@temp
  4745  000D06  CFF4 F029          	movff	prodh,___flmul@temp+1
  4746  000D0A  5028               	movf	___flmul@temp,w,c
  4747  000D0C  261E               	addwf	___flmul@grs,f,c
  4748  000D0E  5029               	movf	___flmul@temp+1,w,c
  4749  000D10  221F               	addwfc	___flmul@grs+1,f,c
  4750  000D12  0E00               	movlw	0
  4751  000D14  2220               	addwfc	___flmul@grs+2,f,c
  4752  000D16  0E00               	movlw	0
  4753  000D18  2221               	addwfc	___flmul@grs+3,f,c
  4754  000D1A  5016               	movf	___flmul@a+1,w,c
  4755  000D1C  0211               	mulwf	___flmul@b,c
  4756  000D1E  CFF3 F028          	movff	prodl,___flmul@temp
  4757  000D22  CFF4 F029          	movff	prodh,___flmul@temp+1
  4758  000D26  5028               	movf	___flmul@temp,w,c
  4759  000D28  261E               	addwf	___flmul@grs,f,c
  4760  000D2A  5029               	movf	___flmul@temp+1,w,c
  4761  000D2C  221F               	addwfc	___flmul@grs+1,f,c
  4762  000D2E  0E00               	movlw	0
  4763  000D30  2220               	addwfc	___flmul@grs+2,f,c
  4764  000D32  0E00               	movlw	0
  4765  000D34  2221               	addwfc	___flmul@grs+3,f,c
  4766  000D36  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  4767  000D3A  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  4768  000D3E  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  4769  000D42  6A1E               	clrf	___flmul@grs,c
  4770  000D44  5015               	movf	___flmul@a,w,c
  4771  000D46  0211               	mulwf	___flmul@b,c
  4772  000D48  CFF3 F028          	movff	prodl,___flmul@temp
  4773  000D4C  CFF4 F029          	movff	prodh,___flmul@temp+1
  4774  000D50  5028               	movf	___flmul@temp,w,c
  4775  000D52  261E               	addwf	___flmul@grs,f,c
  4776  000D54  5029               	movf	___flmul@temp+1,w,c
  4777  000D56  221F               	addwfc	___flmul@grs+1,f,c
  4778  000D58  0E00               	movlw	0
  4779  000D5A  2220               	addwfc	___flmul@grs+2,f,c
  4780  000D5C  0E00               	movlw	0
  4781  000D5E  2221               	addwfc	___flmul@grs+3,f,c
  4782  000D60  5017               	movf	___flmul@a+2,w,c
  4783  000D62  0212               	mulwf	___flmul@b+1,c
  4784  000D64  CFF3 F028          	movff	prodl,___flmul@temp
  4785  000D68  CFF4 F029          	movff	prodh,___flmul@temp+1
  4786  000D6C  5028               	movf	___flmul@temp,w,c
  4787  000D6E  2624               	addwf	___flmul@prod,f,c
  4788  000D70  5029               	movf	___flmul@temp+1,w,c
  4789  000D72  2225               	addwfc	___flmul@prod+1,f,c
  4790  000D74  0E00               	movlw	0
  4791  000D76  2226               	addwfc	___flmul@prod+2,f,c
  4792  000D78  0E00               	movlw	0
  4793  000D7A  2227               	addwfc	___flmul@prod+3,f,c
  4794  000D7C  5016               	movf	___flmul@a+1,w,c
  4795  000D7E  0213               	mulwf	___flmul@b+2,c
  4796  000D80  CFF3 F028          	movff	prodl,___flmul@temp
  4797  000D84  CFF4 F029          	movff	prodh,___flmul@temp+1
  4798  000D88  5028               	movf	___flmul@temp,w,c
  4799  000D8A  2624               	addwf	___flmul@prod,f,c
  4800  000D8C  5029               	movf	___flmul@temp+1,w,c
  4801  000D8E  2225               	addwfc	___flmul@prod+1,f,c
  4802  000D90  0E00               	movlw	0
  4803  000D92  2226               	addwfc	___flmul@prod+2,f,c
  4804  000D94  0E00               	movlw	0
  4805  000D96  2227               	addwfc	___flmul@prod+3,f,c
  4806  000D98  5017               	movf	___flmul@a+2,w,c
  4807  000D9A  0213               	mulwf	___flmul@b+2,c
  4808  000D9C  CFF3 F028          	movff	prodl,___flmul@temp
  4809  000DA0  CFF4 F029          	movff	prodh,___flmul@temp+1
  4810  000DA4  5028               	movf	___flmul@temp,w,c
  4811  000DA6  6E19               	movwf	??___flmul& (0+255),c
  4812  000DA8  5029               	movf	___flmul@temp+1,w,c
  4813  000DAA  6E1A               	movwf	(??___flmul+1)& (0+255),c
  4814  000DAC  6A1B               	clrf	(??___flmul+2)& (0+255),c
  4815  000DAE  6A1C               	clrf	(??___flmul+3)& (0+255),c
  4816  000DB0  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  4817  000DB4  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  4818  000DB8  C019  F01A         	movff	??___flmul,??___flmul+1
  4819  000DBC  6A19               	clrf	??___flmul,c
  4820  000DBE  5019               	movf	??___flmul,w,c
  4821  000DC0  2624               	addwf	___flmul@prod,f,c
  4822  000DC2  501A               	movf	??___flmul+1,w,c
  4823  000DC4  2225               	addwfc	___flmul@prod+1,f,c
  4824  000DC6  501B               	movf	??___flmul+2,w,c
  4825  000DC8  2226               	addwfc	___flmul@prod+2,f,c
  4826  000DCA  501C               	movf	??___flmul+3,w,c
  4827  000DCC  2227               	addwfc	___flmul@prod+3,f,c
  4828  000DCE  C01E  F019         	movff	___flmul@grs,??___flmul
  4829  000DD2  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
  4830  000DD6  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
  4831  000DDA  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
  4832  000DDE  0E19               	movlw	25
  4833  000DE0  D005               	goto	u3300
  4834  000DE2                     u3305:
  4835  000DE2  90D8               	bcf	status,0,c
  4836  000DE4  321C               	rrcf	??___flmul+3,f,c
  4837  000DE6  321B               	rrcf	??___flmul+2,f,c
  4838  000DE8  321A               	rrcf	??___flmul+1,f,c
  4839  000DEA  3219               	rrcf	??___flmul,f,c
  4840  000DEC                     u3300:
  4841  000DEC  2EE8               	decfsz	wreg,f,c
  4842  000DEE  D7F9               	goto	u3305
  4843  000DF0  5019               	movf	??___flmul,w,c
  4844  000DF2  2624               	addwf	___flmul@prod,f,c
  4845  000DF4  501A               	movf	??___flmul+1,w,c
  4846  000DF6  2225               	addwfc	___flmul@prod+1,f,c
  4847  000DF8  501B               	movf	??___flmul+2,w,c
  4848  000DFA  2226               	addwfc	___flmul@prod+2,f,c
  4849  000DFC  501C               	movf	??___flmul+3,w,c
  4850  000DFE  2227               	addwfc	___flmul@prod+3,f,c
  4851  000E00  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  4852  000E04  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  4853  000E08  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  4854  000E0C  6A1E               	clrf	___flmul@grs,c
  4855  000E0E  5022               	movf	___flmul@aexp,w,c
  4856  000E10  C023  F019         	movff	___flmul@bexp,??___flmul
  4857  000E14  6A1A               	clrf	(??___flmul+1)& (0+255),c
  4858  000E16  2619               	addwf	??___flmul,f,c
  4859  000E18  0E00               	movlw	0
  4860  000E1A  221A               	addwfc	??___flmul+1,f,c
  4861  000E1C  0E82               	movlw	130
  4862  000E1E  2419               	addwf	??___flmul,w,c
  4863  000E20  6E28               	movwf	___flmul@temp,c
  4864  000E22  0EFF               	movlw	255
  4865  000E24  201A               	addwfc	??___flmul+1,w,c
  4866  000E26  6E29               	movwf	___flmul@temp+1,c
  4867  000E28  D00F               	goto	l3474
  4868  000E2A                     l3468:
  4869  000E2A  90D8               	bcf	status,0,c
  4870  000E2C  3624               	rlcf	___flmul@prod,f,c
  4871  000E2E  3625               	rlcf	___flmul@prod+1,f,c
  4872  000E30  3626               	rlcf	___flmul@prod+2,f,c
  4873  000E32  3627               	rlcf	___flmul@prod+3,f,c
  4874  000E34  BE21               	btfsc	___flmul@grs+3,7,c
  4875  000E36  8024               	bsf	___flmul@prod,0,c
  4876  000E38  90D8               	bcf	status,0,c
  4877  000E3A  361E               	rlcf	___flmul@grs,f,c
  4878  000E3C  361F               	rlcf	___flmul@grs+1,f,c
  4879  000E3E  3620               	rlcf	___flmul@grs+2,f,c
  4880  000E40  3621               	rlcf	___flmul@grs+3,f,c
  4881  000E42  0628               	decf	___flmul@temp,f,c
  4882  000E44  A0D8               	btfss	status,0,c
  4883  000E46  0629               	decf	___flmul@temp+1,f,c
  4884  000E48                     l3474:
  4885  000E48  AE26               	btfss	___flmul@prod+2,7,c
  4886  000E4A  D7EF               	goto	l3468
  4887  000E4C  0E00               	movlw	0
  4888  000E4E  6E22               	movwf	___flmul@aexp,c
  4889  000E50  AE21               	btfss	___flmul@grs+3,7,c
  4890  000E52  D017               	goto	l1175
  4891  000E54  0EFF               	movlw	255
  4892  000E56  141E               	andwf	___flmul@grs,w,c
  4893  000E58  6E19               	movwf	??___flmul& (0+255),c
  4894  000E5A  0EFF               	movlw	255
  4895  000E5C  141F               	andwf	___flmul@grs+1,w,c
  4896  000E5E  6E1A               	movwf	(??___flmul+1)& (0+255),c
  4897  000E60  0EFF               	movlw	255
  4898  000E62  1420               	andwf	___flmul@grs+2,w,c
  4899  000E64  6E1B               	movwf	(??___flmul+2)& (0+255),c
  4900  000E66  0E7F               	movlw	127
  4901  000E68  1421               	andwf	___flmul@grs+3,w,c
  4902  000E6A  6E1C               	movwf	(??___flmul+3)& (0+255),c
  4903  000E6C  5019               	movf	??___flmul,w,c
  4904  000E6E  101A               	iorwf	??___flmul+1,w,c
  4905  000E70  101B               	iorwf	??___flmul+2,w,c
  4906  000E72  101C               	iorwf	??___flmul+3,w,c
  4907  000E74  B4D8               	btfsc	status,2,c
  4908  000E76  D003               	goto	l1176
  4909  000E78                     u3340:
  4910  000E78  0E01               	movlw	1
  4911  000E7A  6E22               	movwf	___flmul@aexp,c
  4912  000E7C  D002               	goto	l1175
  4913  000E7E                     l1176:
  4914  000E7E  B024               	btfsc	___flmul@prod,0,c
  4915  000E80  D7FB               	goto	u3340
  4916  000E82                     l1175:
  4917  000E82  5022               	movf	___flmul@aexp,w,c
  4918  000E84  B4D8               	btfsc	status,2,c
  4919  000E86  D01F               	goto	l3494
  4920  000E88  0E01               	movlw	1
  4921  000E8A  2624               	addwf	___flmul@prod,f,c
  4922  000E8C  0E00               	movlw	0
  4923  000E8E  2225               	addwfc	___flmul@prod+1,f,c
  4924  000E90  2226               	addwfc	___flmul@prod+2,f,c
  4925  000E92  2227               	addwfc	___flmul@prod+3,f,c
  4926  000E94  A027               	btfss	___flmul@prod+3,0,c
  4927  000E96  D017               	goto	l3494
  4928  000E98  C024  F019         	movff	___flmul@prod,??___flmul
  4929  000E9C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  4930  000EA0  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  4931  000EA4  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  4932  000EA8  341C               	rlcf	??___flmul+3,w,c
  4933  000EAA  321C               	rrcf	??___flmul+3,f,c
  4934  000EAC  321B               	rrcf	??___flmul+2,f,c
  4935  000EAE  321A               	rrcf	??___flmul+1,f,c
  4936  000EB0  3219               	rrcf	??___flmul,f,c
  4937  000EB2  C019  F024         	movff	??___flmul,___flmul@prod
  4938  000EB6  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  4939  000EBA  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  4940  000EBE  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  4941  000EC2  4A28               	infsnz	___flmul@temp,f,c
  4942  000EC4  2A29               	incf	___flmul@temp+1,f,c
  4943  000EC6                     l3494:
  4944  000EC6  BE29               	btfsc	___flmul@temp+1,7,c
  4945  000EC8  D00D               	goto	l3498
  4946  000ECA  5029               	movf	___flmul@temp+1,w,c
  4947  000ECC  E103               	bnz	u3380
  4948  000ECE  2828               	incf	___flmul@temp,w,c
  4949  000ED0  A0D8               	btfss	status,0,c
  4950  000ED2  D008               	goto	l3498
  4951  000ED4                     u3380:
  4952  000ED4  0E00               	movlw	0
  4953  000ED6  6E24               	movwf	___flmul@prod,c
  4954  000ED8  0E00               	movlw	0
  4955  000EDA  6E25               	movwf	___flmul@prod+1,c
  4956  000EDC  0E80               	movlw	128
  4957  000EDE  6E26               	movwf	___flmul@prod+2,c
  4958  000EE0  0E7F               	movlw	127
  4959  000EE2  D020               	goto	L3
  4960  000EE4                     l3498:
  4961  000EE4  BE29               	btfsc	___flmul@temp+1,7,c
  4962  000EE6  D005               	goto	u3390
  4963  000EE8  5029               	movf	___flmul@temp+1,w,c
  4964  000EEA  E10E               	bnz	l1183
  4965  000EEC  0428               	decf	___flmul@temp,w,c
  4966  000EEE  B0D8               	btfsc	status,0,c
  4967  000EF0  D00B               	goto	l1183
  4968  000EF2                     u3390:
  4969  000EF2  0E00               	movlw	0
  4970  000EF4  6E24               	movwf	___flmul@prod,c
  4971  000EF6  0E00               	movlw	0
  4972  000EF8  6E25               	movwf	___flmul@prod+1,c
  4973  000EFA  0E00               	movlw	0
  4974  000EFC  6E26               	movwf	___flmul@prod+2,c
  4975  000EFE  0E00               	movlw	0
  4976  000F00  6E27               	movwf	___flmul@prod+3,c
  4977  000F02  0E00               	movlw	0
  4978  000F04  6E1D               	movwf	___flmul@sign,c
  4979  000F06  D00F               	goto	l3510
  4980  000F08                     l1183:
  4981  000F08  C028  F023         	movff	___flmul@temp,___flmul@bexp
  4982  000F0C  0EFF               	movlw	255
  4983  000F0E  1624               	andwf	___flmul@prod,f,c
  4984  000F10  0EFF               	movlw	255
  4985  000F12  1625               	andwf	___flmul@prod+1,f,c
  4986  000F14  0E7F               	movlw	127
  4987  000F16  1626               	andwf	___flmul@prod+2,f,c
  4988  000F18  0E00               	movlw	0
  4989  000F1A  1627               	andwf	___flmul@prod+3,f,c
  4990  000F1C  B023               	btfsc	___flmul@bexp,0,c
  4991  000F1E  8E26               	bsf	___flmul@prod+2,7,c
  4992  000F20  90D8               	bcf	status,0,c
  4993  000F22  3023               	rrcf	___flmul@bexp,w,c
  4994  000F24                     L3:
  4995  000F24  6E27               	movwf	___flmul@prod+3,c
  4996  000F26                     l3510:
  4997  000F26  501D               	movf	___flmul@sign,w,c
  4998  000F28  1227               	iorwf	___flmul@prod+3,f,c
  4999  000F2A  C024  F011         	movff	___flmul@prod,?___flmul
  5000  000F2E  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  5001  000F32  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  5002  000F36  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  5003  000F3A  0012               	return		;funcret
  5004  000F3C                     __end_of___flmul:
  5005                           	opt callstack 0
  5006                           
  5007 ;; *************** function __tdiv_to_l_ *****************
  5008 ;; Defined at:
  5009 ;;		line 60 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftdivl.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  f1              4    2[COMRAM] float 
  5012 ;;  f2              4    6[COMRAM] float 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  quot            4   13[COMRAM] unsigned long 
  5015 ;;  exp1            1   18[COMRAM] unsigned char 
  5016 ;;  cntr            1   17[COMRAM] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  4    2[COMRAM] unsigned long 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5026 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;Total ram usage:       17 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    2
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_sprintf
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text13
  5041  0021D0                     __ptext13:
  5042                           	opt callstack 0
  5043  0021D0                     __tdiv_to_l_:
  5044                           	opt callstack 25
  5045                           
  5046                           ;incstack = 0
  5047  0021D0  C005  F00B         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5048  0021D4  6A0C               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5049  0021D6  6A0D               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5050  0021D8  3404               	rlcf	__tdiv_to_l_@f1+1,w,c
  5051  0021DA  360B               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5052  0021DC  E301               	bnc	u3771
  5053  0021DE  800C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5054  0021E0                     u3771:
  5055  0021E0  500B               	movf	??__tdiv_to_l_,w,c
  5056  0021E2  6E13               	movwf	__tdiv_to_l_@exp1,c
  5057  0021E4  5013               	movf	__tdiv_to_l_@exp1,w,c
  5058  0021E6  A4D8               	btfss	status,2,c
  5059  0021E8  D009               	goto	l3768
  5060  0021EA                     u3780:
  5061  0021EA  0E00               	movlw	0
  5062  0021EC  6E03               	movwf	?__tdiv_to_l_,c
  5063  0021EE  0E00               	movlw	0
  5064  0021F0  6E04               	movwf	?__tdiv_to_l_+1,c
  5065  0021F2  0E00               	movlw	0
  5066  0021F4  6E05               	movwf	?__tdiv_to_l_+2,c
  5067  0021F6  0E00               	movlw	0
  5068  0021F8  6E06               	movwf	?__tdiv_to_l_+3,c
  5069  0021FA  0012               	return	
  5070  0021FC                     l3768:
  5071  0021FC  C009  F00B         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5072  002200  6A0C               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5073  002202  6A0D               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5074  002204  3408               	rlcf	__tdiv_to_l_@f2+1,w,c
  5075  002206  360B               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5076  002208  E301               	bnc	u3791
  5077  00220A  800C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5078  00220C                     u3791:
  5079  00220C  500B               	movf	??__tdiv_to_l_,w,c
  5080  00220E  6E12               	movwf	__tdiv_to_l_@cntr,c
  5081  002210  5012               	movf	__tdiv_to_l_@cntr,w,c
  5082  002212  B4D8               	btfsc	status,2,c
  5083  002214  D7EA               	goto	u3780
  5084  002216  8E04               	bsf	__tdiv_to_l_@f1+1,7,c
  5085  002218  0EFF               	movlw	255
  5086  00221A  1603               	andwf	__tdiv_to_l_@f1,f,c
  5087  00221C  0EFF               	movlw	255
  5088  00221E  1604               	andwf	__tdiv_to_l_@f1+1,f,c
  5089  002220  0E00               	movlw	0
  5090  002222  1605               	andwf	__tdiv_to_l_@f1+2,f,c
  5091  002224  8E08               	bsf	__tdiv_to_l_@f2+1,7,c
  5092  002226  0EFF               	movlw	255
  5093  002228  1607               	andwf	__tdiv_to_l_@f2,f,c
  5094  00222A  0EFF               	movlw	255
  5095  00222C  1608               	andwf	__tdiv_to_l_@f2+1,f,c
  5096  00222E  0E00               	movlw	0
  5097  002230  1609               	andwf	__tdiv_to_l_@f2+2,f,c
  5098  002232  0E00               	movlw	0
  5099  002234  6E0E               	movwf	__tdiv_to_l_@quot,c
  5100  002236  0E00               	movlw	0
  5101  002238  6E0F               	movwf	__tdiv_to_l_@quot+1,c
  5102  00223A  0E00               	movlw	0
  5103  00223C  6E10               	movwf	__tdiv_to_l_@quot+2,c
  5104  00223E  0E00               	movlw	0
  5105  002240  6E11               	movwf	__tdiv_to_l_@quot+3,c
  5106  002242  0E7F               	movlw	127
  5107  002244  5E13               	subwf	__tdiv_to_l_@exp1,f,c
  5108  002246  5012               	movf	__tdiv_to_l_@cntr,w,c
  5109  002248  0F98               	addlw	152
  5110  00224A  5E13               	subwf	__tdiv_to_l_@exp1,f,c
  5111  00224C  0E18               	movlw	24
  5112  00224E  6E12               	movwf	__tdiv_to_l_@cntr,c
  5113  002250                     l895:
  5114  002250  90D8               	bcf	status,0,c
  5115  002252  360E               	rlcf	__tdiv_to_l_@quot,f,c
  5116  002254  360F               	rlcf	__tdiv_to_l_@quot+1,f,c
  5117  002256  3610               	rlcf	__tdiv_to_l_@quot+2,f,c
  5118  002258  3611               	rlcf	__tdiv_to_l_@quot+3,f,c
  5119  00225A  5007               	movf	__tdiv_to_l_@f2,w,c
  5120  00225C  5C03               	subwf	__tdiv_to_l_@f1,w,c
  5121  00225E  5008               	movf	__tdiv_to_l_@f2+1,w,c
  5122  002260  5804               	subwfb	__tdiv_to_l_@f1+1,w,c
  5123  002262  5009               	movf	__tdiv_to_l_@f2+2,w,c
  5124  002264  5805               	subwfb	__tdiv_to_l_@f1+2,w,c
  5125  002266  A0D8               	btfss	status,0,c
  5126  002268  D007               	goto	l896
  5127  00226A  5007               	movf	__tdiv_to_l_@f2,w,c
  5128  00226C  5E03               	subwf	__tdiv_to_l_@f1,f,c
  5129  00226E  5008               	movf	__tdiv_to_l_@f2+1,w,c
  5130  002270  5A04               	subwfb	__tdiv_to_l_@f1+1,f,c
  5131  002272  5009               	movf	__tdiv_to_l_@f2+2,w,c
  5132  002274  5A05               	subwfb	__tdiv_to_l_@f1+2,f,c
  5133  002276  800E               	bsf	__tdiv_to_l_@quot,0,c
  5134  002278                     l896:
  5135  002278  90D8               	bcf	status,0,c
  5136  00227A  3603               	rlcf	__tdiv_to_l_@f1,f,c
  5137  00227C  3604               	rlcf	__tdiv_to_l_@f1+1,f,c
  5138  00227E  3605               	rlcf	__tdiv_to_l_@f1+2,f,c
  5139  002280  2E12               	decfsz	__tdiv_to_l_@cntr,f,c
  5140  002282  D7E6               	goto	l895
  5141  002284  AE13               	btfss	__tdiv_to_l_@exp1,7,c
  5142  002286  D00D               	goto	l3808
  5143  002288  5013               	movf	__tdiv_to_l_@exp1,w,c
  5144  00228A  0A80               	xorlw	128
  5145  00228C  0F97               	addlw	151
  5146  00228E  A0D8               	btfss	status,0,c
  5147  002290  D7AC               	goto	u3780
  5148  002292                     l3804:
  5149  002292  90D8               	bcf	status,0,c
  5150  002294  3211               	rrcf	__tdiv_to_l_@quot+3,f,c
  5151  002296  3210               	rrcf	__tdiv_to_l_@quot+2,f,c
  5152  002298  320F               	rrcf	__tdiv_to_l_@quot+1,f,c
  5153  00229A  320E               	rrcf	__tdiv_to_l_@quot,f,c
  5154  00229C  3E13               	incfsz	__tdiv_to_l_@exp1,f,c
  5155  00229E  D7F9               	goto	l3804
  5156  0022A0  D00D               	goto	u3850
  5157  0022A2                     l3808:
  5158  0022A2  0E17               	movlw	23
  5159  0022A4  6413               	cpfsgt	__tdiv_to_l_@exp1,c
  5160  0022A6  D007               	goto	l3816
  5161  0022A8  D7A0               	goto	u3780
  5162  0022AA                     l3814:
  5163  0022AA  90D8               	bcf	status,0,c
  5164  0022AC  360E               	rlcf	__tdiv_to_l_@quot,f,c
  5165  0022AE  360F               	rlcf	__tdiv_to_l_@quot+1,f,c
  5166  0022B0  3610               	rlcf	__tdiv_to_l_@quot+2,f,c
  5167  0022B2  3611               	rlcf	__tdiv_to_l_@quot+3,f,c
  5168  0022B4  0613               	decf	__tdiv_to_l_@exp1,f,c
  5169  0022B6                     l3816:
  5170  0022B6  5013               	movf	__tdiv_to_l_@exp1,w,c
  5171  0022B8  A4D8               	btfss	status,2,c
  5172  0022BA  D7F7               	goto	l3814
  5173  0022BC                     u3850:
  5174  0022BC  C00E  F003         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5175  0022C0  C00F  F004         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5176  0022C4  C010  F005         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5177  0022C8  C011  F006         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5178  0022CC  0012               	return		;funcret
  5179  0022CE                     __end_of__tdiv_to_l_:
  5180                           	opt callstack 0
  5181                           
  5182 ;; *************** function __div_to_l_ *****************
  5183 ;; Defined at:
  5184 ;;		line 60 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fldivl.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  f1              4    2[COMRAM] unsigned long 
  5187 ;;  f2              4    6[COMRAM] unsigned long 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  quot            4   10[COMRAM] unsigned long 
  5190 ;;  exp1            1   15[COMRAM] unsigned char 
  5191 ;;  cntr            1   14[COMRAM] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  4    2[COMRAM] unsigned long 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5205 ;;Total ram usage:       14 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    2
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_sprintf
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text14
  5216  0022CE                     __ptext14:
  5217                           	opt callstack 0
  5218  0022CE                     __div_to_l_:
  5219                           	opt callstack 25
  5220                           
  5221                           ;incstack = 0
  5222  0022CE  3405               	rlcf	__div_to_l_@f1+2,w,c
  5223  0022D0  3406               	rlcf	__div_to_l_@f1+3,w,c
  5224  0022D2  6E10               	movwf	__div_to_l_@exp1,c
  5225  0022D4  5010               	movf	__div_to_l_@exp1,w,c
  5226  0022D6  A4D8               	btfss	status,2,c
  5227  0022D8  D009               	goto	l3824
  5228  0022DA                     u3860:
  5229  0022DA  0E00               	movlw	0
  5230  0022DC  6E03               	movwf	?__div_to_l_,c
  5231  0022DE  0E00               	movlw	0
  5232  0022E0  6E04               	movwf	?__div_to_l_+1,c
  5233  0022E2  0E00               	movlw	0
  5234  0022E4  6E05               	movwf	?__div_to_l_+2,c
  5235  0022E6  0E00               	movlw	0
  5236  0022E8  6E06               	movwf	?__div_to_l_+3,c
  5237  0022EA  0012               	return	
  5238  0022EC                     l3824:
  5239  0022EC  3409               	rlcf	__div_to_l_@f2+2,w,c
  5240  0022EE  340A               	rlcf	__div_to_l_@f2+3,w,c
  5241  0022F0  6E0F               	movwf	__div_to_l_@cntr,c
  5242  0022F2  500F               	movf	__div_to_l_@cntr,w,c
  5243  0022F4  B4D8               	btfsc	status,2,c
  5244  0022F6  D7F1               	goto	u3860
  5245  0022F8  8E05               	bsf	__div_to_l_@f1+2,7,c
  5246  0022FA  0EFF               	movlw	255
  5247  0022FC  1603               	andwf	__div_to_l_@f1,f,c
  5248  0022FE  0EFF               	movlw	255
  5249  002300  1604               	andwf	__div_to_l_@f1+1,f,c
  5250  002302  0EFF               	movlw	255
  5251  002304  1605               	andwf	__div_to_l_@f1+2,f,c
  5252  002306  0E00               	movlw	0
  5253  002308  1606               	andwf	__div_to_l_@f1+3,f,c
  5254  00230A  8E09               	bsf	__div_to_l_@f2+2,7,c
  5255  00230C  0EFF               	movlw	255
  5256  00230E  1607               	andwf	__div_to_l_@f2,f,c
  5257  002310  0EFF               	movlw	255
  5258  002312  1608               	andwf	__div_to_l_@f2+1,f,c
  5259  002314  0EFF               	movlw	255
  5260  002316  1609               	andwf	__div_to_l_@f2+2,f,c
  5261  002318  0E00               	movlw	0
  5262  00231A  160A               	andwf	__div_to_l_@f2+3,f,c
  5263  00231C  0E00               	movlw	0
  5264  00231E  6E0B               	movwf	__div_to_l_@quot,c
  5265  002320  0E00               	movlw	0
  5266  002322  6E0C               	movwf	__div_to_l_@quot+1,c
  5267  002324  0E00               	movlw	0
  5268  002326  6E0D               	movwf	__div_to_l_@quot+2,c
  5269  002328  0E00               	movlw	0
  5270  00232A  6E0E               	movwf	__div_to_l_@quot+3,c
  5271  00232C  0E7F               	movlw	127
  5272  00232E  5E10               	subwf	__div_to_l_@exp1,f,c
  5273  002330  500F               	movf	__div_to_l_@cntr,w,c
  5274  002332  0FA0               	addlw	160
  5275  002334  5E10               	subwf	__div_to_l_@exp1,f,c
  5276  002336  0E20               	movlw	32
  5277  002338  6E0F               	movwf	__div_to_l_@cntr,c
  5278  00233A                     l3844:
  5279  00233A  90D8               	bcf	status,0,c
  5280  00233C  360B               	rlcf	__div_to_l_@quot,f,c
  5281  00233E  360C               	rlcf	__div_to_l_@quot+1,f,c
  5282  002340  360D               	rlcf	__div_to_l_@quot+2,f,c
  5283  002342  360E               	rlcf	__div_to_l_@quot+3,f,c
  5284  002344  5007               	movf	__div_to_l_@f2,w,c
  5285  002346  5C03               	subwf	__div_to_l_@f1,w,c
  5286  002348  5008               	movf	__div_to_l_@f2+1,w,c
  5287  00234A  5804               	subwfb	__div_to_l_@f1+1,w,c
  5288  00234C  5009               	movf	__div_to_l_@f2+2,w,c
  5289  00234E  5805               	subwfb	__div_to_l_@f1+2,w,c
  5290  002350  500A               	movf	__div_to_l_@f2+3,w,c
  5291  002352  5806               	subwfb	__div_to_l_@f1+3,w,c
  5292  002354  A0D8               	btfss	status,0,c
  5293  002356  D009               	goto	l3852
  5294  002358  5007               	movf	__div_to_l_@f2,w,c
  5295  00235A  5E03               	subwf	__div_to_l_@f1,f,c
  5296  00235C  5008               	movf	__div_to_l_@f2+1,w,c
  5297  00235E  5A04               	subwfb	__div_to_l_@f1+1,f,c
  5298  002360  5009               	movf	__div_to_l_@f2+2,w,c
  5299  002362  5A05               	subwfb	__div_to_l_@f1+2,f,c
  5300  002364  500A               	movf	__div_to_l_@f2+3,w,c
  5301  002366  5A06               	subwfb	__div_to_l_@f1+3,f,c
  5302  002368  800B               	bsf	__div_to_l_@quot,0,c
  5303  00236A                     l3852:
  5304  00236A  90D8               	bcf	status,0,c
  5305  00236C  3603               	rlcf	__div_to_l_@f1,f,c
  5306  00236E  3604               	rlcf	__div_to_l_@f1+1,f,c
  5307  002370  3605               	rlcf	__div_to_l_@f1+2,f,c
  5308  002372  3606               	rlcf	__div_to_l_@f1+3,f,c
  5309  002374  2E0F               	decfsz	__div_to_l_@cntr,f,c
  5310  002376  D7E1               	goto	l3844
  5311  002378  AE10               	btfss	__div_to_l_@exp1,7,c
  5312  00237A  D00D               	goto	l3868
  5313  00237C  5010               	movf	__div_to_l_@exp1,w,c
  5314  00237E  0A80               	xorlw	128
  5315  002380  0F9F               	addlw	159
  5316  002382  A0D8               	btfss	status,0,c
  5317  002384  D7AA               	goto	u3860
  5318  002386                     l3864:
  5319  002386  90D8               	bcf	status,0,c
  5320  002388  320E               	rrcf	__div_to_l_@quot+3,f,c
  5321  00238A  320D               	rrcf	__div_to_l_@quot+2,f,c
  5322  00238C  320C               	rrcf	__div_to_l_@quot+1,f,c
  5323  00238E  320B               	rrcf	__div_to_l_@quot,f,c
  5324  002390  3E10               	incfsz	__div_to_l_@exp1,f,c
  5325  002392  D7F9               	goto	l3864
  5326  002394  D00D               	goto	u3920
  5327  002396                     l3868:
  5328  002396  0E1F               	movlw	31
  5329  002398  6410               	cpfsgt	__div_to_l_@exp1,c
  5330  00239A  D007               	goto	l3876
  5331  00239C  D79E               	goto	u3860
  5332  00239E                     l3874:
  5333  00239E  90D8               	bcf	status,0,c
  5334  0023A0  360B               	rlcf	__div_to_l_@quot,f,c
  5335  0023A2  360C               	rlcf	__div_to_l_@quot+1,f,c
  5336  0023A4  360D               	rlcf	__div_to_l_@quot+2,f,c
  5337  0023A6  360E               	rlcf	__div_to_l_@quot+3,f,c
  5338  0023A8  0610               	decf	__div_to_l_@exp1,f,c
  5339  0023AA                     l3876:
  5340  0023AA  5010               	movf	__div_to_l_@exp1,w,c
  5341  0023AC  A4D8               	btfss	status,2,c
  5342  0023AE  D7F7               	goto	l3874
  5343  0023B0                     u3920:
  5344  0023B0  C00B  F003         	movff	__div_to_l_@quot,?__div_to_l_
  5345  0023B4  C00C  F004         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5346  0023B8  C00D  F005         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5347  0023BC  C00E  F006         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5348  0023C0  0012               	return		;funcret
  5349  0023C2                     __end_of__div_to_l_:
  5350                           	opt callstack 0
  5351                           
  5352 ;; *************** function ___xxtofl *****************
  5353 ;; Defined at:
  5354 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/xxtofl.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  sign            1    wreg     unsigned char 
  5357 ;;  val             4    2[COMRAM] long 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  sign            1   10[COMRAM] unsigned char 
  5360 ;;  arg             4   12[COMRAM] unsigned long 
  5361 ;;  exp             1   11[COMRAM] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  4    2[COMRAM] unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;Total ram usage:       14 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    2
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_uds_get_soc
  5382 ;;		_sprintf
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text15
  5387  001F7C                     __ptext15:
  5388                           	opt callstack 0
  5389  001F7C                     ___xxtofl:
  5390                           	opt callstack 25
  5391                           
  5392                           ;incstack = 0
  5393                           ;___xxtofl@sign stored from wreg
  5394  001F7C  6E0B               	movwf	___xxtofl@sign,c
  5395  001F7E  500B               	movf	___xxtofl@sign,w,c
  5396  001F80  A4D8               	btfss	status,2,c
  5397  001F82  AE06               	btfss	___xxtofl@val+3,7,c
  5398  001F84  D01A               	goto	l1207
  5399  001F86  C003  F007         	movff	___xxtofl@val,??___xxtofl
  5400  001F8A  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  5401  001F8E  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  5402  001F92  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  5403  001F96  1E07               	comf	??___xxtofl,f,c
  5404  001F98  1E08               	comf	??___xxtofl+1,f,c
  5405  001F9A  1E09               	comf	??___xxtofl+2,f,c
  5406  001F9C  1E0A               	comf	??___xxtofl+3,f,c
  5407  001F9E  2A07               	incf	??___xxtofl,f,c
  5408  001FA0  0E00               	movlw	0
  5409  001FA2  2208               	addwfc	??___xxtofl+1,f,c
  5410  001FA4  2209               	addwfc	??___xxtofl+2,f,c
  5411  001FA6  220A               	addwfc	??___xxtofl+3,f,c
  5412  001FA8  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  5413  001FAC  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  5414  001FB0  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  5415  001FB4  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  5416  001FB8  D008               	goto	l4024
  5417  001FBA                     l1207:
  5418  001FBA  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  5419  001FBE  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5420  001FC2  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5421  001FC6  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5422  001FCA                     l4024:
  5423  001FCA  5003               	movf	___xxtofl@val,w,c
  5424  001FCC  1004               	iorwf	___xxtofl@val+1,w,c
  5425  001FCE  1005               	iorwf	___xxtofl@val+2,w,c
  5426  001FD0  1006               	iorwf	___xxtofl@val+3,w,c
  5427  001FD2  A4D8               	btfss	status,2,c
  5428  001FD4  D009               	goto	l4030
  5429  001FD6  0E00               	movlw	0
  5430  001FD8  6E03               	movwf	?___xxtofl,c
  5431  001FDA  0E00               	movlw	0
  5432  001FDC  6E04               	movwf	?___xxtofl+1,c
  5433  001FDE  0E00               	movlw	0
  5434  001FE0  6E05               	movwf	?___xxtofl+2,c
  5435  001FE2  0E00               	movlw	0
  5436  001FE4  6E06               	movwf	?___xxtofl+3,c
  5437  001FE6  0012               	return	
  5438  001FE8                     l4030:
  5439  001FE8  0E96               	movlw	150
  5440  001FEA  6E0C               	movwf	___xxtofl@exp,c
  5441  001FEC  D006               	goto	l4034
  5442  001FEE                     l4032:
  5443  001FEE  2A0C               	incf	___xxtofl@exp,f,c
  5444  001FF0  90D8               	bcf	status,0,c
  5445  001FF2  3210               	rrcf	___xxtofl@arg+3,f,c
  5446  001FF4  320F               	rrcf	___xxtofl@arg+2,f,c
  5447  001FF6  320E               	rrcf	___xxtofl@arg+1,f,c
  5448  001FF8  320D               	rrcf	___xxtofl@arg,f,c
  5449  001FFA                     l4034:
  5450  001FFA  0E00               	movlw	0
  5451  001FFC  140D               	andwf	___xxtofl@arg,w,c
  5452  001FFE  6E07               	movwf	??___xxtofl& (0+255),c
  5453  002000  0E00               	movlw	0
  5454  002002  140E               	andwf	___xxtofl@arg+1,w,c
  5455  002004  6E08               	movwf	(??___xxtofl+1)& (0+255),c
  5456  002006  0E00               	movlw	0
  5457  002008  140F               	andwf	___xxtofl@arg+2,w,c
  5458  00200A  6E09               	movwf	(??___xxtofl+2)& (0+255),c
  5459  00200C  0EFE               	movlw	254
  5460  00200E  1410               	andwf	___xxtofl@arg+3,w,c
  5461  002010  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
  5462  002012  5007               	movf	??___xxtofl,w,c
  5463  002014  1008               	iorwf	??___xxtofl+1,w,c
  5464  002016  1009               	iorwf	??___xxtofl+2,w,c
  5465  002018  100A               	iorwf	??___xxtofl+3,w,c
  5466  00201A  B4D8               	btfsc	status,2,c
  5467  00201C  D00D               	goto	l1214
  5468  00201E  D7E7               	goto	l4032
  5469  002020                     l4036:
  5470  002020  2A0C               	incf	___xxtofl@exp,f,c
  5471  002022  0E01               	movlw	1
  5472  002024  260D               	addwf	___xxtofl@arg,f,c
  5473  002026  0E00               	movlw	0
  5474  002028  220E               	addwfc	___xxtofl@arg+1,f,c
  5475  00202A  220F               	addwfc	___xxtofl@arg+2,f,c
  5476  00202C  2210               	addwfc	___xxtofl@arg+3,f,c
  5477  00202E  90D8               	bcf	status,0,c
  5478  002030  3210               	rrcf	___xxtofl@arg+3,f,c
  5479  002032  320F               	rrcf	___xxtofl@arg+2,f,c
  5480  002034  320E               	rrcf	___xxtofl@arg+1,f,c
  5481  002036  320D               	rrcf	___xxtofl@arg,f,c
  5482  002038                     l1214:
  5483  002038  0E00               	movlw	0
  5484  00203A  140D               	andwf	___xxtofl@arg,w,c
  5485  00203C  6E07               	movwf	??___xxtofl& (0+255),c
  5486  00203E  0E00               	movlw	0
  5487  002040  140E               	andwf	___xxtofl@arg+1,w,c
  5488  002042  6E08               	movwf	(??___xxtofl+1)& (0+255),c
  5489  002044  0E00               	movlw	0
  5490  002046  140F               	andwf	___xxtofl@arg+2,w,c
  5491  002048  6E09               	movwf	(??___xxtofl+2)& (0+255),c
  5492  00204A  0EFF               	movlw	255
  5493  00204C  1410               	andwf	___xxtofl@arg+3,w,c
  5494  00204E  6E0A               	movwf	(??___xxtofl+3)& (0+255),c
  5495  002050  5007               	movf	??___xxtofl,w,c
  5496  002052  1008               	iorwf	??___xxtofl+1,w,c
  5497  002054  1009               	iorwf	??___xxtofl+2,w,c
  5498  002056  100A               	iorwf	??___xxtofl+3,w,c
  5499  002058  B4D8               	btfsc	status,2,c
  5500  00205A  D007               	goto	l4044
  5501  00205C  D7E1               	goto	l4036
  5502  00205E                     l4042:
  5503  00205E  060C               	decf	___xxtofl@exp,f,c
  5504  002060  90D8               	bcf	status,0,c
  5505  002062  360D               	rlcf	___xxtofl@arg,f,c
  5506  002064  360E               	rlcf	___xxtofl@arg+1,f,c
  5507  002066  360F               	rlcf	___xxtofl@arg+2,f,c
  5508  002068  3610               	rlcf	___xxtofl@arg+3,f,c
  5509  00206A                     l4044:
  5510  00206A  BE0F               	btfsc	___xxtofl@arg+2,7,c
  5511  00206C  D003               	goto	u4210
  5512  00206E  0E02               	movlw	2
  5513  002070  600C               	cpfslt	___xxtofl@exp,c
  5514  002072  D7F5               	goto	l4042
  5515  002074                     u4210:
  5516  002074  A00C               	btfss	___xxtofl@exp,0,c
  5517  002076  9E0F               	bcf	___xxtofl@arg+2,7,c
  5518  002078  90D8               	bcf	status,0,c
  5519  00207A  320C               	rrcf	___xxtofl@exp,f,c
  5520  00207C  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  5521  002080  6A08               	clrf	(??___xxtofl+1)& (0+255),c
  5522  002082  6A09               	clrf	(??___xxtofl+2)& (0+255),c
  5523  002084  6A0A               	clrf	(??___xxtofl+3)& (0+255),c
  5524  002086  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  5525  00208A  6A09               	clrf	??___xxtofl+2,c
  5526  00208C  6A08               	clrf	??___xxtofl+1,c
  5527  00208E  6A07               	clrf	??___xxtofl,c
  5528  002090  5007               	movf	??___xxtofl,w,c
  5529  002092  120D               	iorwf	___xxtofl@arg,f,c
  5530  002094  5008               	movf	??___xxtofl+1,w,c
  5531  002096  120E               	iorwf	___xxtofl@arg+1,f,c
  5532  002098  5009               	movf	??___xxtofl+2,w,c
  5533  00209A  120F               	iorwf	___xxtofl@arg+2,f,c
  5534  00209C  500A               	movf	??___xxtofl+3,w,c
  5535  00209E  1210               	iorwf	___xxtofl@arg+3,f,c
  5536  0020A0  500B               	movf	___xxtofl@sign,w,c
  5537  0020A2  A4D8               	btfss	status,2,c
  5538  0020A4  AE06               	btfss	___xxtofl@val+3,7,c
  5539  0020A6  D001               	goto	l4060
  5540  0020A8  8E10               	bsf	___xxtofl@arg+3,7,c
  5541  0020AA                     l4060:
  5542  0020AA  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  5543  0020AE  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  5544  0020B2  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  5545  0020B6  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  5546  0020BA  0012               	return		;funcret
  5547  0020BC                     __end_of___xxtofl:
  5548                           	opt callstack 0
  5549                           
  5550 ;; *************** function ___wmul *****************
  5551 ;; Defined at:
  5552 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  multiplier      2    2[COMRAM] unsigned int 
  5555 ;;  multiplicand    2    4[COMRAM] unsigned int 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  product         2    6[COMRAM] unsigned int 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  2    2[COMRAM] unsigned int 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0, prodl, prodh
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;Total ram usage:        6 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    2
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_sprintf
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text16
  5582  002B7C                     __ptext16:
  5583                           	opt callstack 0
  5584  002B7C                     ___wmul:
  5585                           	opt callstack 25
  5586                           
  5587                           ;incstack = 0
  5588  002B7C  5003               	movf	___wmul@multiplier,w,c
  5589  002B7E  0205               	mulwf	___wmul@multiplicand,c
  5590  002B80  CFF3 F007          	movff	prodl,___wmul@product
  5591  002B84  CFF4 F008          	movff	prodh,___wmul@product+1
  5592  002B88  5003               	movf	___wmul@multiplier,w,c
  5593  002B8A  0206               	mulwf	___wmul@multiplicand+1,c
  5594  002B8C  50F3               	movf	prodl,w,c
  5595  002B8E  2608               	addwf	___wmul@product+1,f,c
  5596  002B90  5004               	movf	___wmul@multiplier+1,w,c
  5597  002B92  0205               	mulwf	___wmul@multiplicand,c
  5598  002B94  50F3               	movf	prodl,w,c
  5599  002B96  2608               	addwf	___wmul@product+1,f,c
  5600  002B98  C007  F003         	movff	___wmul@product,?___wmul
  5601  002B9C  C008  F004         	movff	___wmul@product+1,?___wmul+1
  5602  002BA0  0012               	return		;funcret
  5603  002BA2                     __end_of___wmul:
  5604                           	opt callstack 0
  5605                           
  5606 ;; *************** function ___llmod *****************
  5607 ;; Defined at:
  5608 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/llmod.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  dividend        4    2[COMRAM] unsigned long 
  5611 ;;  divisor         4    6[COMRAM] unsigned long 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  counter         1   10[COMRAM] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  4    2[COMRAM] unsigned long 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5623 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5626 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5627 ;;Total ram usage:        9 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    2
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_sprintf
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text17
  5638  002862                     __ptext17:
  5639                           	opt callstack 0
  5640  002862                     ___llmod:
  5641                           	opt callstack 25
  5642                           
  5643                           ;incstack = 0
  5644  002862  5007               	movf	___llmod@divisor,w,c
  5645  002864  1008               	iorwf	___llmod@divisor+1,w,c
  5646  002866  1009               	iorwf	___llmod@divisor+2,w,c
  5647  002868  100A               	iorwf	___llmod@divisor+3,w,c
  5648  00286A  B4D8               	btfsc	status,2,c
  5649  00286C  D024               	goto	l972
  5650  00286E  0E01               	movlw	1
  5651  002870  6E0B               	movwf	___llmod@counter,c
  5652  002872  D006               	goto	l4008
  5653  002874                     l4006:
  5654  002874  90D8               	bcf	status,0,c
  5655  002876  3607               	rlcf	___llmod@divisor,f,c
  5656  002878  3608               	rlcf	___llmod@divisor+1,f,c
  5657  00287A  3609               	rlcf	___llmod@divisor+2,f,c
  5658  00287C  360A               	rlcf	___llmod@divisor+3,f,c
  5659  00287E  2A0B               	incf	___llmod@counter,f,c
  5660  002880                     l4008:
  5661  002880  AE0A               	btfss	___llmod@divisor+3,7,c
  5662  002882  D7F8               	goto	l4006
  5663  002884                     u4130:
  5664  002884  5007               	movf	___llmod@divisor,w,c
  5665  002886  5C03               	subwf	___llmod@dividend,w,c
  5666  002888  5008               	movf	___llmod@divisor+1,w,c
  5667  00288A  5804               	subwfb	___llmod@dividend+1,w,c
  5668  00288C  5009               	movf	___llmod@divisor+2,w,c
  5669  00288E  5805               	subwfb	___llmod@dividend+2,w,c
  5670  002890  500A               	movf	___llmod@divisor+3,w,c
  5671  002892  5806               	subwfb	___llmod@dividend+3,w,c
  5672  002894  A0D8               	btfss	status,0,c
  5673  002896  D008               	goto	l4014
  5674  002898  5007               	movf	___llmod@divisor,w,c
  5675  00289A  5E03               	subwf	___llmod@dividend,f,c
  5676  00289C  5008               	movf	___llmod@divisor+1,w,c
  5677  00289E  5A04               	subwfb	___llmod@dividend+1,f,c
  5678  0028A0  5009               	movf	___llmod@divisor+2,w,c
  5679  0028A2  5A05               	subwfb	___llmod@dividend+2,f,c
  5680  0028A4  500A               	movf	___llmod@divisor+3,w,c
  5681  0028A6  5A06               	subwfb	___llmod@dividend+3,f,c
  5682  0028A8                     l4014:
  5683  0028A8  90D8               	bcf	status,0,c
  5684  0028AA  320A               	rrcf	___llmod@divisor+3,f,c
  5685  0028AC  3209               	rrcf	___llmod@divisor+2,f,c
  5686  0028AE  3208               	rrcf	___llmod@divisor+1,f,c
  5687  0028B0  3207               	rrcf	___llmod@divisor,f,c
  5688  0028B2  2E0B               	decfsz	___llmod@counter,f,c
  5689  0028B4  D7E7               	goto	u4130
  5690  0028B6                     l972:
  5691  0028B6  C003  F003         	movff	___llmod@dividend,?___llmod
  5692  0028BA  C004  F004         	movff	___llmod@dividend+1,?___llmod+1
  5693  0028BE  C005  F005         	movff	___llmod@dividend+2,?___llmod+2
  5694  0028C2  C006  F006         	movff	___llmod@dividend+3,?___llmod+3
  5695  0028C6  0012               	return		;funcret
  5696  0028C8                     __end_of___llmod:
  5697                           	opt callstack 0
  5698                           
  5699 ;; *************** function ___lldiv *****************
  5700 ;; Defined at:
  5701 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/__lldiv.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  dividend        4    2[COMRAM] unsigned long 
  5704 ;;  divisor         4    6[COMRAM] unsigned long 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  quotient        4   10[COMRAM] unsigned long 
  5707 ;;  counter         1   14[COMRAM] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  4    2[COMRAM] unsigned long 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5717 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;Total ram usage:       13 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    2
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_sprintf
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text18
  5732  0026FC                     __ptext18:
  5733                           	opt callstack 0
  5734  0026FC                     ___lldiv:
  5735                           	opt callstack 25
  5736                           
  5737                           ;incstack = 0
  5738  0026FC  0E00               	movlw	0
  5739  0026FE  6E0B               	movwf	___lldiv@quotient,c
  5740  002700  0E00               	movlw	0
  5741  002702  6E0C               	movwf	___lldiv@quotient+1,c
  5742  002704  0E00               	movlw	0
  5743  002706  6E0D               	movwf	___lldiv@quotient+2,c
  5744  002708  0E00               	movlw	0
  5745  00270A  6E0E               	movwf	___lldiv@quotient+3,c
  5746  00270C  5007               	movf	___lldiv@divisor,w,c
  5747  00270E  1008               	iorwf	___lldiv@divisor+1,w,c
  5748  002710  1009               	iorwf	___lldiv@divisor+2,w,c
  5749  002712  100A               	iorwf	___lldiv@divisor+3,w,c
  5750  002714  B4D8               	btfsc	status,2,c
  5751  002716  D02A               	goto	l557
  5752  002718  0E01               	movlw	1
  5753  00271A  6E0F               	movwf	___lldiv@counter,c
  5754  00271C  D006               	goto	l3892
  5755  00271E                     l3890:
  5756  00271E  90D8               	bcf	status,0,c
  5757  002720  3607               	rlcf	___lldiv@divisor,f,c
  5758  002722  3608               	rlcf	___lldiv@divisor+1,f,c
  5759  002724  3609               	rlcf	___lldiv@divisor+2,f,c
  5760  002726  360A               	rlcf	___lldiv@divisor+3,f,c
  5761  002728  2A0F               	incf	___lldiv@counter,f,c
  5762  00272A                     l3892:
  5763  00272A  AE0A               	btfss	___lldiv@divisor+3,7,c
  5764  00272C  D7F8               	goto	l3890
  5765  00272E                     u3940:
  5766  00272E  90D8               	bcf	status,0,c
  5767  002730  360B               	rlcf	___lldiv@quotient,f,c
  5768  002732  360C               	rlcf	___lldiv@quotient+1,f,c
  5769  002734  360D               	rlcf	___lldiv@quotient+2,f,c
  5770  002736  360E               	rlcf	___lldiv@quotient+3,f,c
  5771  002738  5007               	movf	___lldiv@divisor,w,c
  5772  00273A  5C03               	subwf	___lldiv@dividend,w,c
  5773  00273C  5008               	movf	___lldiv@divisor+1,w,c
  5774  00273E  5804               	subwfb	___lldiv@dividend+1,w,c
  5775  002740  5009               	movf	___lldiv@divisor+2,w,c
  5776  002742  5805               	subwfb	___lldiv@dividend+2,w,c
  5777  002744  500A               	movf	___lldiv@divisor+3,w,c
  5778  002746  5806               	subwfb	___lldiv@dividend+3,w,c
  5779  002748  A0D8               	btfss	status,0,c
  5780  00274A  D009               	goto	l3902
  5781  00274C  5007               	movf	___lldiv@divisor,w,c
  5782  00274E  5E03               	subwf	___lldiv@dividend,f,c
  5783  002750  5008               	movf	___lldiv@divisor+1,w,c
  5784  002752  5A04               	subwfb	___lldiv@dividend+1,f,c
  5785  002754  5009               	movf	___lldiv@divisor+2,w,c
  5786  002756  5A05               	subwfb	___lldiv@dividend+2,f,c
  5787  002758  500A               	movf	___lldiv@divisor+3,w,c
  5788  00275A  5A06               	subwfb	___lldiv@dividend+3,f,c
  5789  00275C  800B               	bsf	___lldiv@quotient,0,c
  5790  00275E                     l3902:
  5791  00275E  90D8               	bcf	status,0,c
  5792  002760  320A               	rrcf	___lldiv@divisor+3,f,c
  5793  002762  3209               	rrcf	___lldiv@divisor+2,f,c
  5794  002764  3208               	rrcf	___lldiv@divisor+1,f,c
  5795  002766  3207               	rrcf	___lldiv@divisor,f,c
  5796  002768  2E0F               	decfsz	___lldiv@counter,f,c
  5797  00276A  D7E1               	goto	u3940
  5798  00276C                     l557:
  5799  00276C  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  5800  002770  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  5801  002774  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  5802  002778  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  5803  00277C  0012               	return		;funcret
  5804  00277E                     __end_of___lldiv:
  5805                           	opt callstack 0
  5806                           
  5807 ;; *************** function ___fltol *****************
  5808 ;; Defined at:
  5809 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fltol.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  f1              4   41[COMRAM] unsigned long 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  exp1            1   50[COMRAM] unsigned char 
  5814 ;;  sign1           1   49[COMRAM] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  4   41[COMRAM] long 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;Total ram usage:       10 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    2
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_sprintf
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text19
  5839  002492                     __ptext19:
  5840                           	opt callstack 0
  5841  002492                     ___fltol:
  5842                           	opt callstack 25
  5843                           
  5844                           ;incstack = 0
  5845  002492  342C               	rlcf	___fltol@f1+2,w,c
  5846  002494  342D               	rlcf	___fltol@f1+3,w,c
  5847  002496  6E33               	movwf	___fltol@exp1,c
  5848  002498  5033               	movf	___fltol@exp1,w,c
  5849  00249A  A4D8               	btfss	status,2,c
  5850  00249C  D009               	goto	l3964
  5851  00249E                     u4050:
  5852  00249E  0E00               	movlw	0
  5853  0024A0  6E2A               	movwf	?___fltol,c
  5854  0024A2  0E00               	movlw	0
  5855  0024A4  6E2B               	movwf	?___fltol+1,c
  5856  0024A6  0E00               	movlw	0
  5857  0024A8  6E2C               	movwf	?___fltol+2,c
  5858  0024AA  0E00               	movlw	0
  5859  0024AC  6E2D               	movwf	?___fltol+3,c
  5860  0024AE  0012               	return	
  5861  0024B0                     l3964:
  5862  0024B0  C02A  F02E         	movff	___fltol@f1,??___fltol
  5863  0024B4  C02B  F02F         	movff	___fltol@f1+1,??___fltol+1
  5864  0024B8  C02C  F030         	movff	___fltol@f1+2,??___fltol+2
  5865  0024BC  C02D  F031         	movff	___fltol@f1+3,??___fltol+3
  5866  0024C0  0E20               	movlw	32
  5867  0024C2  D005               	goto	u4060
  5868  0024C4                     u4065:
  5869  0024C4  90D8               	bcf	status,0,c
  5870  0024C6  3231               	rrcf	??___fltol+3,f,c
  5871  0024C8  3230               	rrcf	??___fltol+2,f,c
  5872  0024CA  322F               	rrcf	??___fltol+1,f,c
  5873  0024CC  322E               	rrcf	??___fltol,f,c
  5874  0024CE                     u4060:
  5875  0024CE  2EE8               	decfsz	wreg,f,c
  5876  0024D0  D7F9               	goto	u4065
  5877  0024D2  502E               	movf	??___fltol,w,c
  5878  0024D4  6E32               	movwf	___fltol@sign1,c
  5879  0024D6  8E2C               	bsf	___fltol@f1+2,7,c
  5880  0024D8  0EFF               	movlw	255
  5881  0024DA  162A               	andwf	___fltol@f1,f,c
  5882  0024DC  0EFF               	movlw	255
  5883  0024DE  162B               	andwf	___fltol@f1+1,f,c
  5884  0024E0  0EFF               	movlw	255
  5885  0024E2  162C               	andwf	___fltol@f1+2,f,c
  5886  0024E4  0E00               	movlw	0
  5887  0024E6  162D               	andwf	___fltol@f1+3,f,c
  5888  0024E8  0E96               	movlw	150
  5889  0024EA  5E33               	subwf	___fltol@exp1,f,c
  5890  0024EC  AE33               	btfss	___fltol@exp1,7,c
  5891  0024EE  D00D               	goto	l3984
  5892  0024F0  5033               	movf	___fltol@exp1,w,c
  5893  0024F2  0A80               	xorlw	128
  5894  0024F4  0F97               	addlw	151
  5895  0024F6  A0D8               	btfss	status,0,c
  5896  0024F8  D7D2               	goto	u4050
  5897  0024FA                     l3980:
  5898  0024FA  90D8               	bcf	status,0,c
  5899  0024FC  322D               	rrcf	___fltol@f1+3,f,c
  5900  0024FE  322C               	rrcf	___fltol@f1+2,f,c
  5901  002500  322B               	rrcf	___fltol@f1+1,f,c
  5902  002502  322A               	rrcf	___fltol@f1,f,c
  5903  002504  3E33               	incfsz	___fltol@exp1,f,c
  5904  002506  D7F9               	goto	l3980
  5905  002508  D00D               	goto	u4100
  5906  00250A                     l3984:
  5907  00250A  0E1F               	movlw	31
  5908  00250C  6433               	cpfsgt	___fltol@exp1,c
  5909  00250E  D007               	goto	l3992
  5910  002510  D7C6               	goto	u4050
  5911  002512                     l3990:
  5912  002512  90D8               	bcf	status,0,c
  5913  002514  362A               	rlcf	___fltol@f1,f,c
  5914  002516  362B               	rlcf	___fltol@f1+1,f,c
  5915  002518  362C               	rlcf	___fltol@f1+2,f,c
  5916  00251A  362D               	rlcf	___fltol@f1+3,f,c
  5917  00251C  0633               	decf	___fltol@exp1,f,c
  5918  00251E                     l3992:
  5919  00251E  5033               	movf	___fltol@exp1,w,c
  5920  002520  A4D8               	btfss	status,2,c
  5921  002522  D7F7               	goto	l3990
  5922  002524                     u4100:
  5923  002524  5032               	movf	___fltol@sign1,w,c
  5924  002526  B4D8               	btfsc	status,2,c
  5925  002528  D008               	goto	l3998
  5926  00252A  1E2D               	comf	___fltol@f1+3,f,c
  5927  00252C  1E2C               	comf	___fltol@f1+2,f,c
  5928  00252E  1E2B               	comf	___fltol@f1+1,f,c
  5929  002530  6C2A               	negf	___fltol@f1,c
  5930  002532  0E00               	movlw	0
  5931  002534  222B               	addwfc	___fltol@f1+1,f,c
  5932  002536  222C               	addwfc	___fltol@f1+2,f,c
  5933  002538  222D               	addwfc	___fltol@f1+3,f,c
  5934  00253A                     l3998:
  5935  00253A  C02A  F02A         	movff	___fltol@f1,?___fltol
  5936  00253E  C02B  F02B         	movff	___fltol@f1+1,?___fltol+1
  5937  002542  C02C  F02C         	movff	___fltol@f1+2,?___fltol+2
  5938  002546  C02D  F02D         	movff	___fltol@f1+3,?___fltol+3
  5939  00254A  0012               	return		;funcret
  5940  00254C                     __end_of___fltol:
  5941                           	opt callstack 0
  5942                           
  5943 ;; *************** function ___flsub *****************
  5944 ;; Defined at:
  5945 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcadd.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  b               4   70[COMRAM] long 
  5948 ;;  a               4   74[COMRAM] long 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  4   70[COMRAM] long 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5960 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5963 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5964 ;;Total ram usage:        8 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    3
  5967 ;; This function calls:
  5968 ;;		___fladd
  5969 ;; This function is called by:
  5970 ;;		_sprintf
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text20
  5975  002AC6                     __ptext20:
  5976                           	opt callstack 0
  5977  002AC6                     ___flsub:
  5978                           	opt callstack 24
  5979                           
  5980                           ;incstack = 0
  5981  002AC6  0E00               	movlw	0
  5982  002AC8  1A4B               	xorwf	___flsub@a,f,c
  5983  002ACA  0E00               	movlw	0
  5984  002ACC  1A4C               	xorwf	___flsub@a+1,f,c
  5985  002ACE  0E00               	movlw	0
  5986  002AD0  1A4D               	xorwf	___flsub@a+2,f,c
  5987  002AD2  0E80               	movlw	128
  5988  002AD4  1A4E               	xorwf	___flsub@a+3,f,c
  5989  002AD6  C047  F037         	movff	___flsub@b,___fladd@b
  5990  002ADA  C048  F038         	movff	___flsub@b+1,___fladd@b+1
  5991  002ADE  C049  F039         	movff	___flsub@b+2,___fladd@b+2
  5992  002AE2  C04A  F03A         	movff	___flsub@b+3,___fladd@b+3
  5993  002AE6  C04B  F03B         	movff	___flsub@a,___fladd@a
  5994  002AEA  C04C  F03C         	movff	___flsub@a+1,___fladd@a+1
  5995  002AEE  C04D  F03D         	movff	___flsub@a+2,___fladd@a+2
  5996  002AF2  C04E  F03E         	movff	___flsub@a+3,___fladd@a+3
  5997  002AF6  EC9E  F007         	call	___fladd	;wreg free
  5998  002AFA  C037  F047         	movff	?___fladd,?___flsub
  5999  002AFE  C038  F048         	movff	?___fladd+1,?___flsub+1
  6000  002B02  C039  F049         	movff	?___fladd+2,?___flsub+2
  6001  002B06  C03A  F04A         	movff	?___fladd+3,?___flsub+3
  6002  002B0A  0012               	return		;funcret
  6003  002B0C                     __end_of___flsub:
  6004                           	opt callstack 0
  6005                           
  6006 ;; *************** function ___fladd *****************
  6007 ;; Defined at:
  6008 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcadd.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  b               4   54[COMRAM] long 
  6011 ;;  a               4   58[COMRAM] long 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  grs             1   69[COMRAM] unsigned char 
  6014 ;;  bexp            1   68[COMRAM] unsigned char 
  6015 ;;  aexp            1   67[COMRAM] unsigned char 
  6016 ;;  signs           1   66[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  4   54[COMRAM] unsigned char 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6026 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6029 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6030 ;;Total ram usage:       16 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    2
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_sprintf
  6037 ;;		___flsub
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text21
  6042  000F3C                     __ptext21:
  6043                           	opt callstack 0
  6044  000F3C                     ___fladd:
  6045                           	opt callstack 24
  6046                           
  6047                           ;incstack = 0
  6048  000F3C  503A               	movf	___fladd@b+3,w,c
  6049  000F3E  0B80               	andlw	128
  6050  000F40  6E43               	movwf	___fladd@signs,c
  6051  000F42  503A               	movf	___fladd@b+3,w,c
  6052  000F44  243A               	addwf	___fladd@b+3,w,c
  6053  000F46  6E45               	movwf	___fladd@bexp,c
  6054  000F48  BE39               	btfsc	___fladd@b+2,7,c
  6055  000F4A  8045               	bsf	___fladd@bexp,0,c
  6056  000F4C  5045               	movf	___fladd@bexp,w,c
  6057  000F4E  B4D8               	btfsc	status,2,c
  6058  000F50  D00D               	goto	l3200
  6059  000F52  2845               	incf	___fladd@bexp,w,c
  6060  000F54  A4D8               	btfss	status,2,c
  6061  000F56  D008               	goto	l3196
  6062  000F58  0E00               	movlw	0
  6063  000F5A  6E37               	movwf	___fladd@b,c
  6064  000F5C  0E00               	movlw	0
  6065  000F5E  6E38               	movwf	___fladd@b+1,c
  6066  000F60  0E00               	movlw	0
  6067  000F62  6E39               	movwf	___fladd@b+2,c
  6068  000F64  0E00               	movlw	0
  6069  000F66  6E3A               	movwf	___fladd@b+3,c
  6070  000F68                     l3196:
  6071  000F68  8E39               	bsf	___fladd@b+2,7,c
  6072  000F6A  D006               	goto	L4
  6073  000F6C                     l3200:
  6074  000F6C  0E00               	movlw	0
  6075  000F6E  6E37               	movwf	___fladd@b,c
  6076  000F70  0E00               	movlw	0
  6077  000F72  6E38               	movwf	___fladd@b+1,c
  6078  000F74  0E00               	movlw	0
  6079  000F76  6E39               	movwf	___fladd@b+2,c
  6080  000F78                     L4:
  6081  000F78  0E00               	movlw	0
  6082  000F7A  6E3A               	movwf	___fladd@b+3,c
  6083  000F7C  503E               	movf	___fladd@a+3,w,c
  6084  000F7E  0B80               	andlw	128
  6085  000F80  6E44               	movwf	___fladd@aexp,c
  6086  000F82  5043               	movf	___fladd@signs,w,c
  6087  000F84  1844               	xorwf	___fladd@aexp,w,c
  6088  000F86  A4D8               	btfss	status,2,c
  6089  000F88  8C43               	bsf	___fladd@signs,6,c
  6090  000F8A  503E               	movf	___fladd@a+3,w,c
  6091  000F8C  243E               	addwf	___fladd@a+3,w,c
  6092  000F8E  6E44               	movwf	___fladd@aexp,c
  6093  000F90  BE3D               	btfsc	___fladd@a+2,7,c
  6094  000F92  8044               	bsf	___fladd@aexp,0,c
  6095  000F94  5044               	movf	___fladd@aexp,w,c
  6096  000F96  B4D8               	btfsc	status,2,c
  6097  000F98  D00D               	goto	l3224
  6098  000F9A  2844               	incf	___fladd@aexp,w,c
  6099  000F9C  A4D8               	btfss	status,2,c
  6100  000F9E  D008               	goto	l3220
  6101  000FA0  0E00               	movlw	0
  6102  000FA2  6E3B               	movwf	___fladd@a,c
  6103  000FA4  0E00               	movlw	0
  6104  000FA6  6E3C               	movwf	___fladd@a+1,c
  6105  000FA8  0E00               	movlw	0
  6106  000FAA  6E3D               	movwf	___fladd@a+2,c
  6107  000FAC  0E00               	movlw	0
  6108  000FAE  6E3E               	movwf	___fladd@a+3,c
  6109  000FB0                     l3220:
  6110  000FB0  8E3D               	bsf	___fladd@a+2,7,c
  6111  000FB2  D006               	goto	L5
  6112  000FB4                     l3224:
  6113  000FB4  0E00               	movlw	0
  6114  000FB6  6E3B               	movwf	___fladd@a,c
  6115  000FB8  0E00               	movlw	0
  6116  000FBA  6E3C               	movwf	___fladd@a+1,c
  6117  000FBC  0E00               	movlw	0
  6118  000FBE  6E3D               	movwf	___fladd@a+2,c
  6119  000FC0                     L5:
  6120  000FC0  0E00               	movlw	0
  6121  000FC2  6E3E               	movwf	___fladd@a+3,c
  6122  000FC4  5045               	movf	___fladd@bexp,w,c
  6123  000FC6  5C44               	subwf	___fladd@aexp,w,c
  6124  000FC8  B0D8               	btfsc	status,0,c
  6125  000FCA  D022               	goto	l3262
  6126  000FCC  AC43               	btfss	___fladd@signs,6,c
  6127  000FCE  D002               	goto	l3232
  6128  000FD0  0E80               	movlw	128
  6129  000FD2  1A43               	xorwf	___fladd@signs,f,c
  6130  000FD4                     l3232:
  6131  000FD4  C045  F046         	movff	___fladd@bexp,___fladd@grs
  6132  000FD8  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  6133  000FDC  C046  F044         	movff	___fladd@grs,___fladd@aexp
  6134  000FE0  C037  F046         	movff	___fladd@b,___fladd@grs
  6135  000FE4  C03B  F037         	movff	___fladd@a,___fladd@b
  6136  000FE8  C046  F03B         	movff	___fladd@grs,___fladd@a
  6137  000FEC  C038  F046         	movff	___fladd@b+1,___fladd@grs
  6138  000FF0  C03C  F038         	movff	___fladd@a+1,___fladd@b+1
  6139  000FF4  C046  F03C         	movff	___fladd@grs,___fladd@a+1
  6140  000FF8  C039  F046         	movff	___fladd@b+2,___fladd@grs
  6141  000FFC  C03D  F039         	movff	___fladd@a+2,___fladd@b+2
  6142  001000  C046  F03D         	movff	___fladd@grs,___fladd@a+2
  6143  001004  C03A  F046         	movff	___fladd@b+3,___fladd@grs
  6144  001008  C03E  F03A         	movff	___fladd@a+3,___fladd@b+3
  6145  00100C  C046  F03E         	movff	___fladd@grs,___fladd@a+3
  6146  001010                     l3262:
  6147  001010  0E00               	movlw	0
  6148  001012  6E46               	movwf	___fladd@grs,c
  6149  001014  5045               	movf	___fladd@bexp,w,c
  6150  001016  C044  F03F         	movff	___fladd@aexp,??___fladd
  6151  00101A  6A40               	clrf	(??___fladd+1)& (0+255),c
  6152  00101C  5E3F               	subwf	??___fladd,f,c
  6153  00101E  0E00               	movlw	0
  6154  001020  5A40               	subwfb	??___fladd+1,f,c
  6155  001022  BE40               	btfsc	??___fladd+1,7,c
  6156  001024  D02C               	goto	l1081
  6157  001026  5040               	movf	??___fladd+1,w,c
  6158  001028  E104               	bnz	u2920
  6159  00102A  0E1A               	movlw	26
  6160  00102C  5C3F               	subwf	??___fladd,w,c
  6161  00102E  A0D8               	btfss	status,0,c
  6162  001030  D026               	goto	l1081
  6163  001032                     u2920:
  6164  001032  5037               	movf	___fladd@b,w,c
  6165  001034  1038               	iorwf	___fladd@b+1,w,c
  6166  001036  1039               	iorwf	___fladd@b+2,w,c
  6167  001038  103A               	iorwf	___fladd@b+3,w,c
  6168  00103A  B4D8               	btfsc	status,2,c
  6169  00103C  D002               	goto	u2930
  6170  00103E  0E01               	movlw	1
  6171  001040  D001               	goto	u2940
  6172  001042                     u2930:
  6173  001042  0E00               	movlw	0
  6174  001044                     u2940:
  6175  001044  6E46               	movwf	___fladd@grs,c
  6176  001046  0E00               	movlw	0
  6177  001048  6E37               	movwf	___fladd@b,c
  6178  00104A  0E00               	movlw	0
  6179  00104C  6E38               	movwf	___fladd@b+1,c
  6180  00104E  0E00               	movlw	0
  6181  001050  6E39               	movwf	___fladd@b+2,c
  6182  001052  0E00               	movlw	0
  6183  001054  6E3A               	movwf	___fladd@b+3,c
  6184  001056  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  6185  00105A  D015               	goto	u2970
  6186  00105C                     l1082:
  6187  00105C  A046               	btfss	___fladd@grs,0,c
  6188  00105E  D005               	goto	l3274
  6189  001060  90D8               	bcf	status,0,c
  6190  001062  3046               	rrcf	___fladd@grs,w,c
  6191  001064  0901               	iorlw	1
  6192  001066  6E46               	movwf	___fladd@grs,c
  6193  001068  D002               	goto	l3276
  6194  00106A                     l3274:
  6195  00106A  90D8               	bcf	status,0,c
  6196  00106C  3246               	rrcf	___fladd@grs,f,c
  6197  00106E                     l3276:
  6198  00106E  B037               	btfsc	___fladd@b,0,c
  6199  001070  8E46               	bsf	___fladd@grs,7,c
  6200  001072  343A               	rlcf	___fladd@b+3,w,c
  6201  001074  323A               	rrcf	___fladd@b+3,f,c
  6202  001076  3239               	rrcf	___fladd@b+2,f,c
  6203  001078  3238               	rrcf	___fladd@b+1,f,c
  6204  00107A  3237               	rrcf	___fladd@b,f,c
  6205  00107C  2A45               	incf	___fladd@bexp,f,c
  6206  00107E                     l1081:
  6207  00107E  5044               	movf	___fladd@aexp,w,c
  6208  001080  5C45               	subwf	___fladd@bexp,w,c
  6209  001082  A0D8               	btfss	status,0,c
  6210  001084  D7EB               	goto	l1082
  6211  001086                     u2970:
  6212  001086  BC43               	btfsc	___fladd@signs,6,c
  6213  001088  D028               	goto	l3308
  6214  00108A  5045               	movf	___fladd@bexp,w,c
  6215  00108C  A4D8               	btfss	status,2,c
  6216  00108E  D009               	goto	l3290
  6217  001090  0E00               	movlw	0
  6218  001092  6E37               	movwf	?___fladd,c
  6219  001094  0E00               	movlw	0
  6220  001096  6E38               	movwf	?___fladd+1,c
  6221  001098  0E00               	movlw	0
  6222  00109A  6E39               	movwf	?___fladd+2,c
  6223  00109C  0E00               	movlw	0
  6224  00109E  6E3A               	movwf	?___fladd+3,c
  6225  0010A0  0012               	return	
  6226  0010A2                     l3290:
  6227  0010A2  503B               	movf	___fladd@a,w,c
  6228  0010A4  2637               	addwf	___fladd@b,f,c
  6229  0010A6  503C               	movf	___fladd@a+1,w,c
  6230  0010A8  2238               	addwfc	___fladd@b+1,f,c
  6231  0010AA  503D               	movf	___fladd@a+2,w,c
  6232  0010AC  2239               	addwfc	___fladd@b+2,f,c
  6233  0010AE  503E               	movf	___fladd@a+3,w,c
  6234  0010B0  223A               	addwfc	___fladd@b+3,f,c
  6235  0010B2  A03A               	btfss	___fladd@b+3,0,c
  6236  0010B4  D071               	goto	u3100
  6237  0010B6  A046               	btfss	___fladd@grs,0,c
  6238  0010B8  D005               	goto	l3298
  6239  0010BA  90D8               	bcf	status,0,c
  6240  0010BC  3046               	rrcf	___fladd@grs,w,c
  6241  0010BE  0901               	iorlw	1
  6242  0010C0  6E46               	movwf	___fladd@grs,c
  6243  0010C2  D002               	goto	l3300
  6244  0010C4                     l3298:
  6245  0010C4  90D8               	bcf	status,0,c
  6246  0010C6  3246               	rrcf	___fladd@grs,f,c
  6247  0010C8                     l3300:
  6248  0010C8  B037               	btfsc	___fladd@b,0,c
  6249  0010CA  8E46               	bsf	___fladd@grs,7,c
  6250  0010CC  343A               	rlcf	___fladd@b+3,w,c
  6251  0010CE  323A               	rrcf	___fladd@b+3,f,c
  6252  0010D0  3239               	rrcf	___fladd@b+2,f,c
  6253  0010D2  3238               	rrcf	___fladd@b+1,f,c
  6254  0010D4  3237               	rrcf	___fladd@b,f,c
  6255  0010D6  2A45               	incf	___fladd@bexp,f,c
  6256  0010D8  D05F               	goto	u3100
  6257  0010DA                     l3308:
  6258  0010DA  503B               	movf	___fladd@a,w,c
  6259  0010DC  5C37               	subwf	___fladd@b,w,c
  6260  0010DE  503C               	movf	___fladd@a+1,w,c
  6261  0010E0  5838               	subwfb	___fladd@b+1,w,c
  6262  0010E2  503D               	movf	___fladd@a+2,w,c
  6263  0010E4  5839               	subwfb	___fladd@b+2,w,c
  6264  0010E6  503A               	movf	___fladd@b+3,w,c
  6265  0010E8  0A80               	xorlw	128
  6266  0010EA  6E3F               	movwf	??___fladd& (0+255),c
  6267  0010EC  503E               	movf	___fladd@a+3,w,c
  6268  0010EE  0A80               	xorlw	128
  6269  0010F0  583F               	subwfb	??___fladd& (0+255),w,c
  6270  0010F2  B0D8               	btfsc	status,0,c
  6271  0010F4  D025               	goto	l3318
  6272  0010F6  5037               	movf	___fladd@b,w,c
  6273  0010F8  5C3B               	subwf	___fladd@a,w,c
  6274  0010FA  6E3F               	movwf	??___fladd& (0+255),c
  6275  0010FC  5038               	movf	___fladd@b+1,w,c
  6276  0010FE  583C               	subwfb	___fladd@a+1,w,c
  6277  001100  6E40               	movwf	(??___fladd+1)& (0+255),c
  6278  001102  5039               	movf	___fladd@b+2,w,c
  6279  001104  583D               	subwfb	___fladd@a+2,w,c
  6280  001106  6E41               	movwf	(??___fladd+2)& (0+255),c
  6281  001108  503A               	movf	___fladd@b+3,w,c
  6282  00110A  583E               	subwfb	___fladd@a+3,w,c
  6283  00110C  6E42               	movwf	(??___fladd+3)& (0+255),c
  6284  00110E  0EFF               	movlw	255
  6285  001110  243F               	addwf	??___fladd,w,c
  6286  001112  6E37               	movwf	___fladd@b,c
  6287  001114  0EFF               	movlw	255
  6288  001116  2040               	addwfc	??___fladd+1,w,c
  6289  001118  6E38               	movwf	___fladd@b+1,c
  6290  00111A  0EFF               	movlw	255
  6291  00111C  2041               	addwfc	??___fladd+2,w,c
  6292  00111E  6E39               	movwf	___fladd@b+2,c
  6293  001120  0EFF               	movlw	255
  6294  001122  2042               	addwfc	??___fladd+3,w,c
  6295  001124  6E3A               	movwf	___fladd@b+3,c
  6296  001126  0E80               	movlw	128
  6297  001128  1A43               	xorwf	___fladd@signs,f,c
  6298  00112A  6C46               	negf	___fladd@grs,c
  6299  00112C  5046               	movf	___fladd@grs,w,c
  6300  00112E  A4D8               	btfss	status,2,c
  6301  001130  D00F               	goto	l1097
  6302  001132  0E01               	movlw	1
  6303  001134  2637               	addwf	___fladd@b,f,c
  6304  001136  0E00               	movlw	0
  6305  001138  2238               	addwfc	___fladd@b+1,f,c
  6306  00113A  2239               	addwfc	___fladd@b+2,f,c
  6307  00113C  223A               	addwfc	___fladd@b+3,f,c
  6308  00113E  D008               	goto	l1097
  6309  001140                     l3318:
  6310  001140  503B               	movf	___fladd@a,w,c
  6311  001142  5E37               	subwf	___fladd@b,f,c
  6312  001144  503C               	movf	___fladd@a+1,w,c
  6313  001146  5A38               	subwfb	___fladd@b+1,f,c
  6314  001148  503D               	movf	___fladd@a+2,w,c
  6315  00114A  5A39               	subwfb	___fladd@b+2,f,c
  6316  00114C  503E               	movf	___fladd@a+3,w,c
  6317  00114E  5A3A               	subwfb	___fladd@b+3,f,c
  6318  001150                     l1097:
  6319  001150  5037               	movf	___fladd@b,w,c
  6320  001152  1038               	iorwf	___fladd@b+1,w,c
  6321  001154  1039               	iorwf	___fladd@b+2,w,c
  6322  001156  103A               	iorwf	___fladd@b+3,w,c
  6323  001158  A4D8               	btfss	status,2,c
  6324  00115A  D01C               	goto	l3342
  6325  00115C  5046               	movf	___fladd@grs,w,c
  6326  00115E  A4D8               	btfss	status,2,c
  6327  001160  D019               	goto	l3342
  6328  001162  0E00               	movlw	0
  6329  001164  6E37               	movwf	?___fladd,c
  6330  001166  0E00               	movlw	0
  6331  001168  6E38               	movwf	?___fladd+1,c
  6332  00116A  0E00               	movlw	0
  6333  00116C  6E39               	movwf	?___fladd+2,c
  6334  00116E  0E00               	movlw	0
  6335  001170  6E3A               	movwf	?___fladd+3,c
  6336  001172  0012               	return	
  6337  001174                     l3326:
  6338  001174  90D8               	bcf	status,0,c
  6339  001176  3637               	rlcf	___fladd@b,f,c
  6340  001178  3638               	rlcf	___fladd@b+1,f,c
  6341  00117A  3639               	rlcf	___fladd@b+2,f,c
  6342  00117C  363A               	rlcf	___fladd@b+3,f,c
  6343  00117E  BE46               	btfsc	___fladd@grs,7,c
  6344  001180  8037               	bsf	___fladd@b,0,c
  6345  001182  A046               	btfss	___fladd@grs,0,c
  6346  001184  D002               	goto	l3336
  6347  001186  80D8               	bsf	status,0,c
  6348  001188  D001               	goto	L6
  6349  00118A                     l3336:
  6350  00118A  90D8               	bcf	status,0,c
  6351  00118C                     L6:
  6352  00118C  3646               	rlcf	___fladd@grs,f,c
  6353  00118E  5045               	movf	___fladd@bexp,w,c
  6354  001190  A4D8               	btfss	status,2,c
  6355  001192  0645               	decf	___fladd@bexp,f,c
  6356  001194                     l3342:
  6357  001194  AE39               	btfss	___fladd@b+2,7,c
  6358  001196  D7EE               	goto	l3326
  6359  001198                     u3100:
  6360  001198  0E00               	movlw	0
  6361  00119A  6E44               	movwf	___fladd@aexp,c
  6362  00119C  AE46               	btfss	___fladd@grs,7,c
  6363  00119E  D00B               	goto	l1106
  6364  0011A0  C046  F03F         	movff	___fladd@grs,??___fladd
  6365  0011A4  0E7F               	movlw	127
  6366  0011A6  163F               	andwf	??___fladd,f,c
  6367  0011A8  B4D8               	btfsc	status,2,c
  6368  0011AA  D003               	goto	l1107
  6369  0011AC                     u3120:
  6370  0011AC  0E01               	movlw	1
  6371  0011AE  6E44               	movwf	___fladd@aexp,c
  6372  0011B0  D002               	goto	l1106
  6373  0011B2                     l1107:
  6374  0011B2  B037               	btfsc	___fladd@b,0,c
  6375  0011B4  D7FB               	goto	u3120
  6376  0011B6                     l1106:
  6377  0011B6  5044               	movf	___fladd@aexp,w,c
  6378  0011B8  B4D8               	btfsc	status,2,c
  6379  0011BA  D020               	goto	l3362
  6380  0011BC  0E01               	movlw	1
  6381  0011BE  2637               	addwf	___fladd@b,f,c
  6382  0011C0  0E00               	movlw	0
  6383  0011C2  2238               	addwfc	___fladd@b+1,f,c
  6384  0011C4  2239               	addwfc	___fladd@b+2,f,c
  6385  0011C6  223A               	addwfc	___fladd@b+3,f,c
  6386  0011C8  A03A               	btfss	___fladd@b+3,0,c
  6387  0011CA  D018               	goto	l3362
  6388  0011CC  C037  F03F         	movff	___fladd@b,??___fladd
  6389  0011D0  C038  F040         	movff	___fladd@b+1,??___fladd+1
  6390  0011D4  C039  F041         	movff	___fladd@b+2,??___fladd+2
  6391  0011D8  C03A  F042         	movff	___fladd@b+3,??___fladd+3
  6392  0011DC  3442               	rlcf	??___fladd+3,w,c
  6393  0011DE  3242               	rrcf	??___fladd+3,f,c
  6394  0011E0  3241               	rrcf	??___fladd+2,f,c
  6395  0011E2  3240               	rrcf	??___fladd+1,f,c
  6396  0011E4  323F               	rrcf	??___fladd,f,c
  6397  0011E6  C03F  F037         	movff	??___fladd,___fladd@b
  6398  0011EA  C040  F038         	movff	??___fladd+1,___fladd@b+1
  6399  0011EE  C041  F039         	movff	??___fladd+2,___fladd@b+2
  6400  0011F2  C042  F03A         	movff	??___fladd+3,___fladd@b+3
  6401  0011F6  2845               	incf	___fladd@bexp,w,c
  6402  0011F8  A4D8               	btfss	status,2,c
  6403  0011FA  2A45               	incf	___fladd@bexp,f,c
  6404  0011FC                     l3362:
  6405  0011FC  2845               	incf	___fladd@bexp,w,c
  6406  0011FE  B4D8               	btfsc	status,2,c
  6407  001200  D003               	goto	u3180
  6408  001202  5045               	movf	___fladd@bexp,w,c
  6409  001204  A4D8               	btfss	status,2,c
  6410  001206  D00D               	goto	l3370
  6411  001208                     u3180:
  6412  001208  0E00               	movlw	0
  6413  00120A  6E37               	movwf	___fladd@b,c
  6414  00120C  0E00               	movlw	0
  6415  00120E  6E38               	movwf	___fladd@b+1,c
  6416  001210  0E00               	movlw	0
  6417  001212  6E39               	movwf	___fladd@b+2,c
  6418  001214  0E00               	movlw	0
  6419  001216  6E3A               	movwf	___fladd@b+3,c
  6420  001218  5045               	movf	___fladd@bexp,w,c
  6421  00121A  A4D8               	btfss	status,2,c
  6422  00121C  D002               	goto	l3370
  6423  00121E  0E00               	movlw	0
  6424  001220  6E43               	movwf	___fladd@signs,c
  6425  001222                     l3370:
  6426  001222  A045               	btfss	___fladd@bexp,0,c
  6427  001224  D002               	goto	l3374
  6428  001226  8E39               	bsf	___fladd@b+2,7,c
  6429  001228  D001               	goto	l3376
  6430  00122A                     l3374:
  6431  00122A  9E39               	bcf	___fladd@b+2,7,c
  6432  00122C                     l3376:
  6433  00122C  90D8               	bcf	status,0,c
  6434  00122E  3045               	rrcf	___fladd@bexp,w,c
  6435  001230  6E3A               	movwf	___fladd@b+3,c
  6436  001232  BE43               	btfsc	___fladd@signs,7,c
  6437  001234  8E3A               	bsf	___fladd@b+3,7,c
  6438  001236  C037  F037         	movff	___fladd@b,?___fladd
  6439  00123A  C038  F038         	movff	___fladd@b+1,?___fladd+1
  6440  00123E  C039  F039         	movff	___fladd@b+2,?___fladd+2
  6441  001242  C03A  F03A         	movff	___fladd@b+3,?___fladd+3
  6442  001246  0012               	return		;funcret
  6443  001248                     __end_of___fladd:
  6444                           	opt callstack 0
  6445                           
  6446 ;; *************** function ___flneg *****************
  6447 ;; Defined at:
  6448 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/flneg.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  f1              4    2[COMRAM] unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  4    2[COMRAM] unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;Total ram usage:        4 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    2
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_sprintf
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text22
  6477  002B4E                     __ptext22:
  6478                           	opt callstack 0
  6479  002B4E                     ___flneg:
  6480                           	opt callstack 25
  6481                           
  6482                           ;incstack = 0
  6483  002B4E  5003               	movf	___flneg@f1,w,c
  6484  002B50  1004               	iorwf	___flneg@f1+1,w,c
  6485  002B52  1005               	iorwf	___flneg@f1+2,w,c
  6486  002B54  1006               	iorwf	___flneg@f1+3,w,c
  6487  002B56  B4D8               	btfsc	status,2,c
  6488  002B58  D008               	goto	l3954
  6489  002B5A  0E00               	movlw	0
  6490  002B5C  1A03               	xorwf	___flneg@f1,f,c
  6491  002B5E  0E00               	movlw	0
  6492  002B60  1A04               	xorwf	___flneg@f1+1,f,c
  6493  002B62  0E00               	movlw	0
  6494  002B64  1A05               	xorwf	___flneg@f1+2,f,c
  6495  002B66  0E80               	movlw	128
  6496  002B68  1A06               	xorwf	___flneg@f1+3,f,c
  6497  002B6A                     l3954:
  6498  002B6A  C003  F003         	movff	___flneg@f1,?___flneg
  6499  002B6E  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  6500  002B72  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  6501  002B76  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  6502  002B7A  0012               	return		;funcret
  6503  002B7C                     __end_of___flneg:
  6504                           	opt callstack 0
  6505                           
  6506 ;; *************** function ___flge *****************
  6507 ;; Defined at:
  6508 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/flge.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  ff1             4    2[COMRAM] unsigned char 
  6511 ;;  ff2             4    6[COMRAM] unsigned char 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6523 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6526 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6527 ;;Total ram usage:       12 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    2
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_sprintf
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text23
  6538  0023C2                     __ptext23:
  6539                           	opt callstack 0
  6540  0023C2                     ___flge:
  6541                           	opt callstack 25
  6542                           
  6543                           ;incstack = 0
  6544  0023C2  0E00               	movlw	0
  6545  0023C4  1403               	andwf	___flge@ff1,w,c
  6546  0023C6  6E0B               	movwf	??___flge& (0+255),c
  6547  0023C8  0E00               	movlw	0
  6548  0023CA  1404               	andwf	___flge@ff1+1,w,c
  6549  0023CC  6E0C               	movwf	(??___flge+1)& (0+255),c
  6550  0023CE  0E80               	movlw	128
  6551  0023D0  1405               	andwf	___flge@ff1+2,w,c
  6552  0023D2  6E0D               	movwf	(??___flge+2)& (0+255),c
  6553  0023D4  0E7F               	movlw	127
  6554  0023D6  1406               	andwf	___flge@ff1+3,w,c
  6555  0023D8  6E0E               	movwf	(??___flge+3)& (0+255),c
  6556  0023DA  500B               	movf	??___flge,w,c
  6557  0023DC  100C               	iorwf	??___flge+1,w,c
  6558  0023DE  100D               	iorwf	??___flge+2,w,c
  6559  0023E0  100E               	iorwf	??___flge+3,w,c
  6560  0023E2  A4D8               	btfss	status,2,c
  6561  0023E4  D008               	goto	l3932
  6562  0023E6  0E00               	movlw	0
  6563  0023E8  6E03               	movwf	___flge@ff1,c
  6564  0023EA  0E00               	movlw	0
  6565  0023EC  6E04               	movwf	___flge@ff1+1,c
  6566  0023EE  0E00               	movlw	0
  6567  0023F0  6E05               	movwf	___flge@ff1+2,c
  6568  0023F2  0E00               	movlw	0
  6569  0023F4  6E06               	movwf	___flge@ff1+3,c
  6570  0023F6                     l3932:
  6571  0023F6  0E00               	movlw	0
  6572  0023F8  1407               	andwf	___flge@ff2,w,c
  6573  0023FA  6E0B               	movwf	??___flge& (0+255),c
  6574  0023FC  0E00               	movlw	0
  6575  0023FE  1408               	andwf	___flge@ff2+1,w,c
  6576  002400  6E0C               	movwf	(??___flge+1)& (0+255),c
  6577  002402  0E80               	movlw	128
  6578  002404  1409               	andwf	___flge@ff2+2,w,c
  6579  002406  6E0D               	movwf	(??___flge+2)& (0+255),c
  6580  002408  0E7F               	movlw	127
  6581  00240A  140A               	andwf	___flge@ff2+3,w,c
  6582  00240C  6E0E               	movwf	(??___flge+3)& (0+255),c
  6583  00240E  500B               	movf	??___flge,w,c
  6584  002410  100C               	iorwf	??___flge+1,w,c
  6585  002412  100D               	iorwf	??___flge+2,w,c
  6586  002414  100E               	iorwf	??___flge+3,w,c
  6587  002416  A4D8               	btfss	status,2,c
  6588  002418  D008               	goto	l3936
  6589  00241A  0E00               	movlw	0
  6590  00241C  6E07               	movwf	___flge@ff2,c
  6591  00241E  0E00               	movlw	0
  6592  002420  6E08               	movwf	___flge@ff2+1,c
  6593  002422  0E00               	movlw	0
  6594  002424  6E09               	movwf	___flge@ff2+2,c
  6595  002426  0E00               	movlw	0
  6596  002428  6E0A               	movwf	___flge@ff2+3,c
  6597  00242A                     l3936:
  6598  00242A  AE06               	btfss	___flge@ff1+3,7,c
  6599  00242C  D009               	goto	l3940
  6600  00242E  6C03               	negf	___flge@ff1,c
  6601  002430  1E04               	comf	___flge@ff1+1,f,c
  6602  002432  B0D8               	btfsc	status,0,c
  6603  002434  2A04               	incf	___flge@ff1+1,f,c
  6604  002436  1E05               	comf	___flge@ff1+2,f,c
  6605  002438  B0D8               	btfsc	status,0,c
  6606  00243A  2A05               	incf	___flge@ff1+2,f,c
  6607  00243C  0E80               	movlw	128
  6608  00243E  5606               	subfwb	___flge@ff1+3,f,c
  6609  002440                     l3940:
  6610  002440  AE0A               	btfss	___flge@ff2+3,7,c
  6611  002442  D009               	goto	l808
  6612  002444  6C07               	negf	___flge@ff2,c
  6613  002446  1E08               	comf	___flge@ff2+1,f,c
  6614  002448  B0D8               	btfsc	status,0,c
  6615  00244A  2A08               	incf	___flge@ff2+1,f,c
  6616  00244C  1E09               	comf	___flge@ff2+2,f,c
  6617  00244E  B0D8               	btfsc	status,0,c
  6618  002450  2A09               	incf	___flge@ff2+2,f,c
  6619  002452  0E80               	movlw	128
  6620  002454  560A               	subfwb	___flge@ff2+3,f,c
  6621  002456                     l808:
  6622  002456  0E00               	movlw	0
  6623  002458  1A03               	xorwf	___flge@ff1,f,c
  6624  00245A  0E00               	movlw	0
  6625  00245C  1A04               	xorwf	___flge@ff1+1,f,c
  6626  00245E  0E00               	movlw	0
  6627  002460  1A05               	xorwf	___flge@ff1+2,f,c
  6628  002462  0E80               	movlw	128
  6629  002464  1A06               	xorwf	___flge@ff1+3,f,c
  6630  002466  0E00               	movlw	0
  6631  002468  1A07               	xorwf	___flge@ff2,f,c
  6632  00246A  0E00               	movlw	0
  6633  00246C  1A08               	xorwf	___flge@ff2+1,f,c
  6634  00246E  0E00               	movlw	0
  6635  002470  1A09               	xorwf	___flge@ff2+2,f,c
  6636  002472  0E80               	movlw	128
  6637  002474  1A0A               	xorwf	___flge@ff2+3,f,c
  6638  002476  5007               	movf	___flge@ff2,w,c
  6639  002478  5C03               	subwf	___flge@ff1,w,c
  6640  00247A  5008               	movf	___flge@ff2+1,w,c
  6641  00247C  5804               	subwfb	___flge@ff1+1,w,c
  6642  00247E  5009               	movf	___flge@ff2+2,w,c
  6643  002480  5805               	subwfb	___flge@ff1+2,w,c
  6644  002482  500A               	movf	___flge@ff2+3,w,c
  6645  002484  5806               	subwfb	___flge@ff1+3,w,c
  6646  002486  B0D8               	btfsc	status,0,c
  6647  002488  D002               	goto	l3946
  6648  00248A  90D8               	bcf	status,0,c
  6649  00248C  0012               	return	
  6650  00248E                     l3946:
  6651  00248E  80D8               	bsf	status,0,c
  6652  002490  0012               	return		;funcret
  6653  002492                     __end_of___flge:
  6654                           	opt callstack 0
  6655                           
  6656 ;; *************** function ___fleq *****************
  6657 ;; Defined at:
  6658 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fleq.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  ff1             4    2[COMRAM] unsigned char 
  6661 ;;  ff2             4    6[COMRAM] unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;		None               void
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6673 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6676 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6677 ;;Total ram usage:       12 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    2
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_sprintf
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text24
  6688  0025EE                     __ptext24:
  6689                           	opt callstack 0
  6690  0025EE                     ___fleq:
  6691                           	opt callstack 25
  6692                           
  6693                           ;incstack = 0
  6694  0025EE  0E00               	movlw	0
  6695  0025F0  1403               	andwf	___fleq@ff1,w,c
  6696  0025F2  6E0B               	movwf	??___fleq& (0+255),c
  6697  0025F4  0E00               	movlw	0
  6698  0025F6  1404               	andwf	___fleq@ff1+1,w,c
  6699  0025F8  6E0C               	movwf	(??___fleq+1)& (0+255),c
  6700  0025FA  0E80               	movlw	128
  6701  0025FC  1405               	andwf	___fleq@ff1+2,w,c
  6702  0025FE  6E0D               	movwf	(??___fleq+2)& (0+255),c
  6703  002600  0E7F               	movlw	127
  6704  002602  1406               	andwf	___fleq@ff1+3,w,c
  6705  002604  6E0E               	movwf	(??___fleq+3)& (0+255),c
  6706  002606  500B               	movf	??___fleq,w,c
  6707  002608  100C               	iorwf	??___fleq+1,w,c
  6708  00260A  100D               	iorwf	??___fleq+2,w,c
  6709  00260C  100E               	iorwf	??___fleq+3,w,c
  6710  00260E  A4D8               	btfss	status,2,c
  6711  002610  D008               	goto	l3916
  6712  002612  0E00               	movlw	0
  6713  002614  6E03               	movwf	___fleq@ff1,c
  6714  002616  0E00               	movlw	0
  6715  002618  6E04               	movwf	___fleq@ff1+1,c
  6716  00261A  0E00               	movlw	0
  6717  00261C  6E05               	movwf	___fleq@ff1+2,c
  6718  00261E  0E00               	movlw	0
  6719  002620  6E06               	movwf	___fleq@ff1+3,c
  6720  002622                     l3916:
  6721  002622  0E00               	movlw	0
  6722  002624  1407               	andwf	___fleq@ff2,w,c
  6723  002626  6E0B               	movwf	??___fleq& (0+255),c
  6724  002628  0E00               	movlw	0
  6725  00262A  1408               	andwf	___fleq@ff2+1,w,c
  6726  00262C  6E0C               	movwf	(??___fleq+1)& (0+255),c
  6727  00262E  0E80               	movlw	128
  6728  002630  1409               	andwf	___fleq@ff2+2,w,c
  6729  002632  6E0D               	movwf	(??___fleq+2)& (0+255),c
  6730  002634  0E7F               	movlw	127
  6731  002636  140A               	andwf	___fleq@ff2+3,w,c
  6732  002638  6E0E               	movwf	(??___fleq+3)& (0+255),c
  6733  00263A  500B               	movf	??___fleq,w,c
  6734  00263C  100C               	iorwf	??___fleq+1,w,c
  6735  00263E  100D               	iorwf	??___fleq+2,w,c
  6736  002640  100E               	iorwf	??___fleq+3,w,c
  6737  002642  A4D8               	btfss	status,2,c
  6738  002644  D008               	goto	l3920
  6739  002646  0E00               	movlw	0
  6740  002648  6E07               	movwf	___fleq@ff2,c
  6741  00264A  0E00               	movlw	0
  6742  00264C  6E08               	movwf	___fleq@ff2+1,c
  6743  00264E  0E00               	movlw	0
  6744  002650  6E09               	movwf	___fleq@ff2+2,c
  6745  002652  0E00               	movlw	0
  6746  002654  6E0A               	movwf	___fleq@ff2+3,c
  6747  002656                     l3920:
  6748  002656  5007               	movf	___fleq@ff2,w,c
  6749  002658  1803               	xorwf	___fleq@ff1,w,c
  6750  00265A  E10A               	bnz	u3980
  6751  00265C  5008               	movf	___fleq@ff2+1,w,c
  6752  00265E  1804               	xorwf	___fleq@ff1+1,w,c
  6753  002660  E107               	bnz	u3980
  6754  002662  5009               	movf	___fleq@ff2+2,w,c
  6755  002664  1805               	xorwf	___fleq@ff1+2,w,c
  6756  002666  E104               	bnz	u3980
  6757  002668  500A               	movf	___fleq@ff2+3,w,c
  6758  00266A  1806               	xorwf	___fleq@ff1+3,w,c
  6759  00266C  B4D8               	btfsc	status,2,c
  6760  00266E  D002               	goto	l3924
  6761  002670                     u3980:
  6762  002670  90D8               	bcf	status,0,c
  6763  002672  0012               	return	
  6764  002674                     l3924:
  6765  002674  80D8               	bsf	status,0,c
  6766  002676  0012               	return		;funcret
  6767  002678                     __end_of___fleq:
  6768                           	opt callstack 0
  6769                           
  6770 ;; *************** function _alive *****************
  6771 ;; Defined at:
  6772 ;;		line 25 in file "main.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  j               2    2[COMRAM] int 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  i               2    6[COMRAM] int 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6790 ;;Total ram usage:        6 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    2
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_uds_get_soc
  6797 ;;		_uds_get_vin
  6798 ;;		_shell
  6799 ;;		_main
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text25
  6804  002928                     __ptext25:
  6805                           	opt callstack 0
  6806  002928                     _alive:
  6807                           	opt callstack 26
  6808                           
  6809                           ;main.c: 26: TRISB7 = 0;
  6810                           
  6811                           ;incstack = 0
  6812  002928  9E93               	bcf	3987,7,c	;volatile
  6813                           
  6814                           ;main.c: 27: for(int i = 0; i<j; i++) {
  6815  00292A  0E00               	movlw	0
  6816  00292C  6E08               	movwf	alive@i+1,c
  6817  00292E  0E00               	movlw	0
  6818  002930  6E07               	movwf	alive@i,c
  6819  002932  D01C               	goto	l98
  6820  002934                     l99:
  6821                           
  6822                           ;main.c: 28: RB7 = 1;
  6823  002934  8E81               	bsf	3969,7,c	;volatile
  6824                           
  6825                           ;main.c: 29: _delay((unsigned long)((50)*(16000000/4000.0)));
  6826  002936  0E02               	movlw	2
  6827  002938  6E06               	movwf	(??_alive+1)& (0+255),c
  6828  00293A  0E04               	movlw	4
  6829  00293C  6E05               	movwf	??_alive& (0+255),c
  6830  00293E  0EBA               	movlw	186
  6831  002940                     u5687:
  6832  002940  2EE8               	decfsz	wreg,f,c
  6833  002942  D7FE               	bra	u5687
  6834  002944  2E05               	decfsz	??_alive& (0+255),f,c
  6835  002946  D7FC               	bra	u5687
  6836  002948  2E06               	decfsz	(??_alive+1)& (0+255),f,c
  6837  00294A  D7FA               	bra	u5687
  6838  00294C  D000               	nop2	
  6839                           
  6840                           ;main.c: 30: RB7 = 0;
  6841  00294E  9E81               	bcf	3969,7,c	;volatile
  6842                           
  6843                           ;main.c: 31: _delay((unsigned long)((50)*(16000000/4000.0)));
  6844  002950  0E02               	movlw	2
  6845  002952  6E06               	movwf	(??_alive+1)& (0+255),c
  6846  002954  0E04               	movlw	4
  6847  002956  6E05               	movwf	??_alive& (0+255),c
  6848  002958  0EBA               	movlw	186
  6849  00295A                     u5697:
  6850  00295A  2EE8               	decfsz	wreg,f,c
  6851  00295C  D7FE               	bra	u5697
  6852  00295E  2E05               	decfsz	??_alive& (0+255),f,c
  6853  002960  D7FC               	bra	u5697
  6854  002962  2E06               	decfsz	(??_alive+1)& (0+255),f,c
  6855  002964  D7FA               	bra	u5697
  6856  002966  D000               	nop2	
  6857  002968  4A07               	infsnz	alive@i,f,c
  6858  00296A  2A08               	incf	alive@i+1,f,c
  6859  00296C                     l98:
  6860  00296C  5003               	movf	alive@j,w,c
  6861  00296E  5C07               	subwf	alive@i,w,c
  6862  002970  5008               	movf	alive@i+1,w,c
  6863  002972  0A80               	xorlw	128
  6864  002974  6E05               	movwf	??_alive& (0+255),c
  6865  002976  5004               	movf	alive@j+1,w,c
  6866  002978  0A80               	xorlw	128
  6867  00297A  5805               	subwfb	??_alive& (0+255),w,c
  6868  00297C  B0D8               	btfsc	status,0,c
  6869  00297E  0012               	return	
  6870  002980  D7D9               	goto	l99
  6871  002982                     __end_of_alive:
  6872                           	opt callstack 0
  6873                           
  6874 ;; *************** function ___fldiv *****************
  6875 ;; Defined at:
  6876 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcdiv.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  b               4   16[COMRAM] void 
  6879 ;;  a               4   20[COMRAM] void 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  grs             4   35[COMRAM] unsigned long 
  6882 ;;  rem             4   28[COMRAM] unsigned long 
  6883 ;;  new_exp         2   33[COMRAM] int 
  6884 ;;  aexp            1   40[COMRAM] unsigned char 
  6885 ;;  bexp            1   39[COMRAM] unsigned char 
  6886 ;;  sign            1   32[COMRAM] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  4   16[COMRAM] unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6896 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6898 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6899 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6900 ;;Total ram usage:       25 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:    2
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_uds_get_soc
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text26
  6911  0014D2                     __ptext26:
  6912                           	opt callstack 0
  6913  0014D2                     ___fldiv:
  6914                           	opt callstack 26
  6915                           
  6916                           ;incstack = 0
  6917  0014D2  5014               	movf	___fldiv@b+3,w,c
  6918  0014D4  0B80               	andlw	128
  6919  0014D6  6E21               	movwf	___fldiv@sign,c
  6920  0014D8  5014               	movf	___fldiv@b+3,w,c
  6921  0014DA  2414               	addwf	___fldiv@b+3,w,c
  6922  0014DC  6E28               	movwf	___fldiv@bexp,c
  6923  0014DE  BE13               	btfsc	___fldiv@b+2,7,c
  6924  0014E0  8028               	bsf	___fldiv@bexp,0,c
  6925  0014E2  5028               	movf	___fldiv@bexp,w,c
  6926  0014E4  B4D8               	btfsc	status,2,c
  6927  0014E6  D00D               	goto	l4464
  6928  0014E8  2828               	incf	___fldiv@bexp,w,c
  6929  0014EA  A4D8               	btfss	status,2,c
  6930  0014EC  D008               	goto	l4460
  6931  0014EE  0E00               	movlw	0
  6932  0014F0  6E11               	movwf	___fldiv@b,c
  6933  0014F2  0E00               	movlw	0
  6934  0014F4  6E12               	movwf	___fldiv@b+1,c
  6935  0014F6  0E00               	movlw	0
  6936  0014F8  6E13               	movwf	___fldiv@b+2,c
  6937  0014FA  0E00               	movlw	0
  6938  0014FC  6E14               	movwf	___fldiv@b+3,c
  6939  0014FE                     l4460:
  6940  0014FE  8E13               	bsf	___fldiv@b+2,7,c
  6941  001500  D006               	goto	L7
  6942  001502                     l4464:
  6943  001502  0E00               	movlw	0
  6944  001504  6E11               	movwf	___fldiv@b,c
  6945  001506  0E00               	movlw	0
  6946  001508  6E12               	movwf	___fldiv@b+1,c
  6947  00150A  0E00               	movlw	0
  6948  00150C  6E13               	movwf	___fldiv@b+2,c
  6949  00150E                     L7:
  6950  00150E  0E00               	movlw	0
  6951  001510  6E14               	movwf	___fldiv@b+3,c
  6952  001512  5018               	movf	___fldiv@a+3,w,c
  6953  001514  0B80               	andlw	128
  6954  001516  1A21               	xorwf	___fldiv@sign,f,c
  6955  001518  5018               	movf	___fldiv@a+3,w,c
  6956  00151A  2418               	addwf	___fldiv@a+3,w,c
  6957  00151C  6E29               	movwf	___fldiv@aexp,c
  6958  00151E  BE17               	btfsc	___fldiv@a+2,7,c
  6959  001520  8029               	bsf	___fldiv@aexp,0,c
  6960  001522  5029               	movf	___fldiv@aexp,w,c
  6961  001524  B4D8               	btfsc	status,2,c
  6962  001526  D00D               	goto	l4484
  6963  001528  2829               	incf	___fldiv@aexp,w,c
  6964  00152A  A4D8               	btfss	status,2,c
  6965  00152C  D008               	goto	l4480
  6966  00152E  0E00               	movlw	0
  6967  001530  6E15               	movwf	___fldiv@a,c
  6968  001532  0E00               	movlw	0
  6969  001534  6E16               	movwf	___fldiv@a+1,c
  6970  001536  0E00               	movlw	0
  6971  001538  6E17               	movwf	___fldiv@a+2,c
  6972  00153A  0E00               	movlw	0
  6973  00153C  6E18               	movwf	___fldiv@a+3,c
  6974  00153E                     l4480:
  6975  00153E  8E17               	bsf	___fldiv@a+2,7,c
  6976  001540  D006               	goto	L8
  6977  001542                     l4484:
  6978  001542  0E00               	movlw	0
  6979  001544  6E15               	movwf	___fldiv@a,c
  6980  001546  0E00               	movlw	0
  6981  001548  6E16               	movwf	___fldiv@a+1,c
  6982  00154A  0E00               	movlw	0
  6983  00154C  6E17               	movwf	___fldiv@a+2,c
  6984  00154E                     L8:
  6985  00154E  0E00               	movlw	0
  6986  001550  6E18               	movwf	___fldiv@a+3,c
  6987  001552  5015               	movf	___fldiv@a,w,c
  6988  001554  1016               	iorwf	___fldiv@a+1,w,c
  6989  001556  1017               	iorwf	___fldiv@a+2,w,c
  6990  001558  1018               	iorwf	___fldiv@a+3,w,c
  6991  00155A  A4D8               	btfss	status,2,c
  6992  00155C  D017               	goto	l4498
  6993  00155E  0E00               	movlw	0
  6994  001560  6E11               	movwf	___fldiv@b,c
  6995  001562  0E00               	movlw	0
  6996  001564  6E12               	movwf	___fldiv@b+1,c
  6997  001566  0E00               	movlw	0
  6998  001568  6E13               	movwf	___fldiv@b+2,c
  6999  00156A  0E00               	movlw	0
  7000  00156C  6E14               	movwf	___fldiv@b+3,c
  7001  00156E  0E80               	movlw	128
  7002  001570  1213               	iorwf	___fldiv@b+2,f,c
  7003  001572  0E7F               	movlw	127
  7004  001574  1214               	iorwf	___fldiv@b+3,f,c
  7005  001576                     l4492:
  7006  001576  5021               	movf	___fldiv@sign,w,c
  7007  001578  1214               	iorwf	___fldiv@b+3,f,c
  7008  00157A  C011  F011         	movff	___fldiv@b,?___fldiv
  7009  00157E  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  7010  001582  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  7011  001586  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  7012  00158A  0012               	return	
  7013  00158C                     l4498:
  7014  00158C  5028               	movf	___fldiv@bexp,w,c
  7015  00158E  A4D8               	btfss	status,2,c
  7016  001590  D009               	goto	l4506
  7017  001592  0E00               	movlw	0
  7018  001594  6E11               	movwf	?___fldiv,c
  7019  001596  0E00               	movlw	0
  7020  001598  6E12               	movwf	?___fldiv+1,c
  7021  00159A  0E00               	movlw	0
  7022  00159C  6E13               	movwf	?___fldiv+2,c
  7023  00159E  0E00               	movlw	0
  7024  0015A0  6E14               	movwf	?___fldiv+3,c
  7025  0015A2  0012               	return	
  7026  0015A4                     l4506:
  7027  0015A4  5029               	movf	___fldiv@aexp,w,c
  7028  0015A6  C028  F019         	movff	___fldiv@bexp,??___fldiv
  7029  0015AA  6A1A               	clrf	(??___fldiv+1)& (0+255),c
  7030  0015AC  5E19               	subwf	??___fldiv,f,c
  7031  0015AE  0E00               	movlw	0
  7032  0015B0  5A1A               	subwfb	??___fldiv+1,f,c
  7033  0015B2  0E7F               	movlw	127
  7034  0015B4  2419               	addwf	??___fldiv,w,c
  7035  0015B6  6E22               	movwf	___fldiv@new_exp,c
  7036  0015B8  0E00               	movlw	0
  7037  0015BA  201A               	addwfc	??___fldiv+1,w,c
  7038  0015BC  6E23               	movwf	___fldiv@new_exp+1,c
  7039  0015BE  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  7040  0015C2  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  7041  0015C6  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  7042  0015CA  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  7043  0015CE  0E00               	movlw	0
  7044  0015D0  6E11               	movwf	___fldiv@b,c
  7045  0015D2  0E00               	movlw	0
  7046  0015D4  6E12               	movwf	___fldiv@b+1,c
  7047  0015D6  0E00               	movlw	0
  7048  0015D8  6E13               	movwf	___fldiv@b+2,c
  7049  0015DA  0E00               	movlw	0
  7050  0015DC  6E14               	movwf	___fldiv@b+3,c
  7051  0015DE  0E00               	movlw	0
  7052  0015E0  6E24               	movwf	___fldiv@grs,c
  7053  0015E2  0E00               	movlw	0
  7054  0015E4  6E25               	movwf	___fldiv@grs+1,c
  7055  0015E6  0E00               	movlw	0
  7056  0015E8  6E26               	movwf	___fldiv@grs+2,c
  7057  0015EA  0E00               	movlw	0
  7058  0015EC  6E27               	movwf	___fldiv@grs+3,c
  7059  0015EE  0E00               	movlw	0
  7060  0015F0  6E29               	movwf	___fldiv@aexp,c
  7061  0015F2  D028               	goto	l1136
  7062  0015F4                     l4516:
  7063  0015F4  5029               	movf	___fldiv@aexp,w,c
  7064  0015F6  B4D8               	btfsc	status,2,c
  7065  0015F8  D011               	goto	l4524
  7066  0015FA  90D8               	bcf	status,0,c
  7067  0015FC  361D               	rlcf	___fldiv@rem,f,c
  7068  0015FE  361E               	rlcf	___fldiv@rem+1,f,c
  7069  001600  361F               	rlcf	___fldiv@rem+2,f,c
  7070  001602  3620               	rlcf	___fldiv@rem+3,f,c
  7071  001604  90D8               	bcf	status,0,c
  7072  001606  3611               	rlcf	___fldiv@b,f,c
  7073  001608  3612               	rlcf	___fldiv@b+1,f,c
  7074  00160A  3613               	rlcf	___fldiv@b+2,f,c
  7075  00160C  3614               	rlcf	___fldiv@b+3,f,c
  7076  00160E  BE27               	btfsc	___fldiv@grs+3,7,c
  7077  001610  8011               	bsf	___fldiv@b,0,c
  7078  001612  90D8               	bcf	status,0,c
  7079  001614  3624               	rlcf	___fldiv@grs,f,c
  7080  001616  3625               	rlcf	___fldiv@grs+1,f,c
  7081  001618  3626               	rlcf	___fldiv@grs+2,f,c
  7082  00161A  3627               	rlcf	___fldiv@grs+3,f,c
  7083  00161C                     l4524:
  7084  00161C  5015               	movf	___fldiv@a,w,c
  7085  00161E  5C1D               	subwf	___fldiv@rem,w,c
  7086  001620  5016               	movf	___fldiv@a+1,w,c
  7087  001622  581E               	subwfb	___fldiv@rem+1,w,c
  7088  001624  5017               	movf	___fldiv@a+2,w,c
  7089  001626  581F               	subwfb	___fldiv@rem+2,w,c
  7090  001628  5018               	movf	___fldiv@a+3,w,c
  7091  00162A  5820               	subwfb	___fldiv@rem+3,w,c
  7092  00162C  A0D8               	btfss	status,0,c
  7093  00162E  D009               	goto	l4530
  7094  001630  8C27               	bsf	___fldiv@grs+3,6,c
  7095  001632  5015               	movf	___fldiv@a,w,c
  7096  001634  5E1D               	subwf	___fldiv@rem,f,c
  7097  001636  5016               	movf	___fldiv@a+1,w,c
  7098  001638  5A1E               	subwfb	___fldiv@rem+1,f,c
  7099  00163A  5017               	movf	___fldiv@a+2,w,c
  7100  00163C  5A1F               	subwfb	___fldiv@rem+2,f,c
  7101  00163E  5018               	movf	___fldiv@a+3,w,c
  7102  001640  5A20               	subwfb	___fldiv@rem+3,f,c
  7103  001642                     l4530:
  7104  001642  2A29               	incf	___fldiv@aexp,f,c
  7105  001644                     l1136:
  7106  001644  0E19               	movlw	25
  7107  001646  6429               	cpfsgt	___fldiv@aexp,c
  7108  001648  D7D5               	goto	l4516
  7109  00164A  501D               	movf	___fldiv@rem,w,c
  7110  00164C  101E               	iorwf	___fldiv@rem+1,w,c
  7111  00164E  101F               	iorwf	___fldiv@rem+2,w,c
  7112  001650  1020               	iorwf	___fldiv@rem+3,w,c
  7113  001652  B4D8               	btfsc	status,2,c
  7114  001654  D011               	goto	l4542
  7115  001656  8024               	bsf	___fldiv@grs,0,c
  7116  001658  D00F               	goto	l4542
  7117  00165A                     l4536:
  7118  00165A  90D8               	bcf	status,0,c
  7119  00165C  3611               	rlcf	___fldiv@b,f,c
  7120  00165E  3612               	rlcf	___fldiv@b+1,f,c
  7121  001660  3613               	rlcf	___fldiv@b+2,f,c
  7122  001662  3614               	rlcf	___fldiv@b+3,f,c
  7123  001664  BE27               	btfsc	___fldiv@grs+3,7,c
  7124  001666  8011               	bsf	___fldiv@b,0,c
  7125  001668  90D8               	bcf	status,0,c
  7126  00166A  3624               	rlcf	___fldiv@grs,f,c
  7127  00166C  3625               	rlcf	___fldiv@grs+1,f,c
  7128  00166E  3626               	rlcf	___fldiv@grs+2,f,c
  7129  001670  3627               	rlcf	___fldiv@grs+3,f,c
  7130  001672  0622               	decf	___fldiv@new_exp,f,c
  7131  001674  A0D8               	btfss	status,0,c
  7132  001676  0623               	decf	___fldiv@new_exp+1,f,c
  7133  001678                     l4542:
  7134  001678  AE13               	btfss	___fldiv@b+2,7,c
  7135  00167A  D7EF               	goto	l4536
  7136  00167C  0E00               	movlw	0
  7137  00167E  6E29               	movwf	___fldiv@aexp,c
  7138  001680  AE27               	btfss	___fldiv@grs+3,7,c
  7139  001682  D017               	goto	l1147
  7140  001684  0EFF               	movlw	255
  7141  001686  1424               	andwf	___fldiv@grs,w,c
  7142  001688  6E19               	movwf	??___fldiv& (0+255),c
  7143  00168A  0EFF               	movlw	255
  7144  00168C  1425               	andwf	___fldiv@grs+1,w,c
  7145  00168E  6E1A               	movwf	(??___fldiv+1)& (0+255),c
  7146  001690  0EFF               	movlw	255
  7147  001692  1426               	andwf	___fldiv@grs+2,w,c
  7148  001694  6E1B               	movwf	(??___fldiv+2)& (0+255),c
  7149  001696  0E7F               	movlw	127
  7150  001698  1427               	andwf	___fldiv@grs+3,w,c
  7151  00169A  6E1C               	movwf	(??___fldiv+3)& (0+255),c
  7152  00169C  5019               	movf	??___fldiv,w,c
  7153  00169E  101A               	iorwf	??___fldiv+1,w,c
  7154  0016A0  101B               	iorwf	??___fldiv+2,w,c
  7155  0016A2  101C               	iorwf	??___fldiv+3,w,c
  7156  0016A4  B4D8               	btfsc	status,2,c
  7157  0016A6  D003               	goto	l1148
  7158  0016A8                     u4950:
  7159  0016A8  0E01               	movlw	1
  7160  0016AA  6E29               	movwf	___fldiv@aexp,c
  7161  0016AC  D002               	goto	l1147
  7162  0016AE                     l1148:
  7163  0016AE  B011               	btfsc	___fldiv@b,0,c
  7164  0016B0  D7FB               	goto	u4950
  7165  0016B2                     l1147:
  7166  0016B2  5029               	movf	___fldiv@aexp,w,c
  7167  0016B4  B4D8               	btfsc	status,2,c
  7168  0016B6  D01F               	goto	l4562
  7169  0016B8  0E01               	movlw	1
  7170  0016BA  2611               	addwf	___fldiv@b,f,c
  7171  0016BC  0E00               	movlw	0
  7172  0016BE  2212               	addwfc	___fldiv@b+1,f,c
  7173  0016C0  2213               	addwfc	___fldiv@b+2,f,c
  7174  0016C2  2214               	addwfc	___fldiv@b+3,f,c
  7175  0016C4  A014               	btfss	___fldiv@b+3,0,c
  7176  0016C6  D017               	goto	l4562
  7177  0016C8  C011  F019         	movff	___fldiv@b,??___fldiv
  7178  0016CC  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  7179  0016D0  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  7180  0016D4  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  7181  0016D8  341C               	rlcf	??___fldiv+3,w,c
  7182  0016DA  321C               	rrcf	??___fldiv+3,f,c
  7183  0016DC  321B               	rrcf	??___fldiv+2,f,c
  7184  0016DE  321A               	rrcf	??___fldiv+1,f,c
  7185  0016E0  3219               	rrcf	??___fldiv,f,c
  7186  0016E2  C019  F011         	movff	??___fldiv,___fldiv@b
  7187  0016E6  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  7188  0016EA  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  7189  0016EE  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  7190  0016F2  4A22               	infsnz	___fldiv@new_exp,f,c
  7191  0016F4  2A23               	incf	___fldiv@new_exp+1,f,c
  7192  0016F6                     l4562:
  7193  0016F6  BE23               	btfsc	___fldiv@new_exp+1,7,c
  7194  0016F8  D010               	goto	l4566
  7195  0016FA  5023               	movf	___fldiv@new_exp+1,w,c
  7196  0016FC  E103               	bnz	u4990
  7197  0016FE  2822               	incf	___fldiv@new_exp,w,c
  7198  001700  A0D8               	btfss	status,0,c
  7199  001702  D00B               	goto	l4566
  7200  001704                     u4990:
  7201  001704  0E00               	movlw	0
  7202  001706  6E23               	movwf	___fldiv@new_exp+1,c
  7203  001708  6822               	setf	___fldiv@new_exp,c
  7204  00170A  0E00               	movlw	0
  7205  00170C  6E11               	movwf	___fldiv@b,c
  7206  00170E  0E00               	movlw	0
  7207  001710  6E12               	movwf	___fldiv@b+1,c
  7208  001712  0E00               	movlw	0
  7209  001714  6E13               	movwf	___fldiv@b+2,c
  7210  001716  0E00               	movlw	0
  7211  001718  6E14               	movwf	___fldiv@b+3,c
  7212  00171A                     l4566:
  7213  00171A  BE23               	btfsc	___fldiv@new_exp+1,7,c
  7214  00171C  D005               	goto	u5000
  7215  00171E  5023               	movf	___fldiv@new_exp+1,w,c
  7216  001720  E111               	bnz	l4570
  7217  001722  0422               	decf	___fldiv@new_exp,w,c
  7218  001724  B0D8               	btfsc	status,0,c
  7219  001726  D00E               	goto	l4570
  7220  001728                     u5000:
  7221  001728  0E00               	movlw	0
  7222  00172A  6E23               	movwf	___fldiv@new_exp+1,c
  7223  00172C  0E00               	movlw	0
  7224  00172E  6E22               	movwf	___fldiv@new_exp,c
  7225  001730  0E00               	movlw	0
  7226  001732  6E11               	movwf	___fldiv@b,c
  7227  001734  0E00               	movlw	0
  7228  001736  6E12               	movwf	___fldiv@b+1,c
  7229  001738  0E00               	movlw	0
  7230  00173A  6E13               	movwf	___fldiv@b+2,c
  7231  00173C  0E00               	movlw	0
  7232  00173E  6E14               	movwf	___fldiv@b+3,c
  7233  001740  0E00               	movlw	0
  7234  001742  6E21               	movwf	___fldiv@sign,c
  7235  001744                     l4570:
  7236  001744  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  7237  001748  A028               	btfss	___fldiv@bexp,0,c
  7238  00174A  D002               	goto	l4576
  7239  00174C  8E13               	bsf	___fldiv@b+2,7,c
  7240  00174E  D001               	goto	l4578
  7241  001750                     l4576:
  7242  001750  9E13               	bcf	___fldiv@b+2,7,c
  7243  001752                     l4578:
  7244  001752  90D8               	bcf	status,0,c
  7245  001754  3028               	rrcf	___fldiv@bexp,w,c
  7246  001756  6E14               	movwf	___fldiv@b+3,c
  7247  001758  D70E               	goto	l4492
  7248  00175A                     __end_of___fldiv:
  7249                           	opt callstack 0
  7250                           
  7251 ;; *************** function _PutString *****************
  7252 ;; Defined at:
  7253 ;;		line 58 in file "Serial.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  mess            2    4[COMRAM] PTR const unsigned char 
  7256 ;;		 -> STR_15(15), STR_14(20), STR_13(16), STR_12(25), 
  7257 ;;		 -> STR_11(16), STR_10(12), STR_9(25), STR_8(18), 
  7258 ;;		 -> STR_7(24), STR_6(18), STR_5(16), uds_get_soc@buf(128), 
  7259 ;;		 -> STR_3(18), STR_2(24), STR_1(18), 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7275 ;;Total ram usage:        2 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    4
  7278 ;; This function calls:
  7279 ;;		_Putchar
  7280 ;; This function is called by:
  7281 ;;		_uds_get_soc
  7282 ;;		_uds_get_vin
  7283 ;;		_shell
  7284 ;;		_main
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text27
  7289  002A26                     __ptext27:
  7290                           	opt callstack 0
  7291  002A26                     _PutString:
  7292                           	opt callstack 24
  7293                           
  7294                           ;Serial.c: 60: while(*mess != '\0')
  7295                           
  7296                           ;incstack = 0
  7297  002A26  D014               	goto	l4070
  7298  002A28                     l4066:
  7299                           
  7300                           ;Serial.c: 61: {;Serial.c: 62: Putchar(*mess++);
  7301  002A28  C005  FFF6         	movff	PutString@mess,tblptrl
  7302  002A2C  C006  FFF7         	movff	PutString@mess+1,tblptrh
  7303  002A30  6AF8               	clrf	tblptru,c
  7304  002A32  0E0E               	movlw	(high __ramtop+-1)
  7305  002A34  64F7               	cpfsgt	tblptrh,c
  7306  002A36  D003               	bra	u4257
  7307  002A38  0008               	tblrd		*
  7308  002A3A  50F5               	movf	tablat,w,c
  7309  002A3C  D005               	bra	u4250
  7310  002A3E                     u4257:
  7311  002A3E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7312  002A42  CFF7 FFEA          	movff	tblptrh,fsr0h
  7313  002A46  50EF               	movf	indf0,w,c
  7314  002A48                     u4250:
  7315  002A48  ECFA  F015         	call	_Putchar
  7316  002A4C  4A05               	infsnz	PutString@mess,f,c
  7317  002A4E  2A06               	incf	PutString@mess+1,f,c
  7318  002A50                     l4070:
  7319  002A50  C005  FFF6         	movff	PutString@mess,tblptrl
  7320  002A54  C006  FFF7         	movff	PutString@mess+1,tblptrh
  7321  002A58  6AF8               	clrf	tblptru,c
  7322  002A5A  0E0E               	movlw	(high __ramtop+-1)
  7323  002A5C  64F7               	cpfsgt	tblptrh,c
  7324  002A5E  D003               	bra	u4267
  7325  002A60  0008               	tblrd		*
  7326  002A62  50F5               	movf	tablat,w,c
  7327  002A64  D005               	bra	u4260
  7328  002A66                     u4267:
  7329  002A66  CFF6 FFE9          	movff	tblptrl,fsr0l
  7330  002A6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  7331  002A6E  50EF               	movf	indf0,w,c
  7332  002A70                     u4260:
  7333  002A70  0900               	iorlw	0
  7334  002A72  B4D8               	btfsc	status,2,c
  7335  002A74  0012               	return	
  7336  002A76  D7D8               	goto	l4066
  7337  002A78                     __end_of_PutString:
  7338                           	opt callstack 0
  7339                           
  7340 ;; *************** function _Putchar *****************
  7341 ;; Defined at:
  7342 ;;		line 103 in file "Serial.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  send_data       1    wreg     unsigned char 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  send_data       1    3[COMRAM] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;Total ram usage:        1 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    3
  7363 ;; This function calls:
  7364 ;;		_Write1USART
  7365 ;; This function is called by:
  7366 ;;		_PutString
  7367 ;;		_uds_get_vin
  7368 ;;		_shell
  7369 ;;		_hex_ascii
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text28
  7374  002BF4                     __ptext28:
  7375                           	opt callstack 0
  7376  002BF4                     _Putchar:
  7377                           	opt callstack 25
  7378                           
  7379                           ;incstack = 0
  7380                           ;Putchar@send_data stored from wreg
  7381  002BF4  6E04               	movwf	Putchar@send_data,c
  7382  002BF6                     
  7383                           ;Serial.c: 105: while((!TXSTA1bits.TRMT));
  7384  002BF6  A2AC               	btfss	4012,1,c	;volatile
  7385  002BF8  D7FE               	goto	l3634
  7386                           
  7387                           ;Serial.c: 107: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7388  002BFA  D000               	nop2		;2 cycle nop
  7389  002BFC  D000               	nop2		;2 cycle nop
  7390                           
  7391                           ;Serial.c: 111: Write1USART(send_data);
  7392  002BFE  5004               	movf	Putchar@send_data,w,c
  7393  002C00  EC03  F016         	call	_Write1USART
  7394  002C04  0012               	return		;funcret
  7395  002C06                     __end_of_Putchar:
  7396                           	opt callstack 0
  7397                           
  7398 ;; *************** function _Write1USART *****************
  7399 ;; Defined at:
  7400 ;;		line 14 in file "plib/USART/u1write.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  data            1    wreg     unsigned char 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  data            1    2[COMRAM] unsigned char 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7418 ;;Total ram usage:        1 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    2
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_Putchar
  7425 ;;		_putrs1USART
  7426 ;;		_puts1USART
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text29
  7431  002C06                     __ptext29:
  7432                           	opt callstack 0
  7433  002C06                     _Write1USART:
  7434                           	opt callstack 25
  7435                           
  7436                           ;incstack = 0
  7437                           ;Write1USART@data stored from wreg
  7438  002C06  6E03               	movwf	Write1USART@data,c
  7439                           
  7440                           ;u1write.c: 16: if(TXSTA1bits.TX9)
  7441  002C08  ACAC               	btfss	4012,6,c	;volatile
  7442  002C0A  D003               	goto	l3182
  7443                           
  7444                           ;u1write.c: 17: {;u1write.c: 18: TXSTA1bits.TX9D = 0;
  7445  002C0C  90AC               	bcf	4012,0,c	;volatile
  7446                           
  7447                           ;u1write.c: 19: if(USART1_Status.TX_NINE)
  7448  002C0E  B25A               	btfsc	_USART1_Status,1,c
  7449                           
  7450                           ;u1write.c: 20: TXSTA1bits.TX9D = 1;
  7451  002C10  80AC               	bsf	4012,0,c	;volatile
  7452  002C12                     l3182:
  7453                           
  7454                           ;u1write.c: 21: };u1write.c: 23: TXREG1 = data;
  7455  002C12  C003  FFAD         	movff	Write1USART@data,4013	;volatile
  7456  002C16  0012               	return		;funcret
  7457  002C18                     __end_of_Write1USART:
  7458                           	opt callstack 0
  7459                           
  7460 ;; *************** function _ECANSendMessage *****************
  7461 ;; Defined at:
  7462 ;;		line 610 in file "can/ECANPoll.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  id              4   13[COMRAM] unsigned long 
  7465 ;;  data            2   17[COMRAM] PTR unsigned char 
  7466 ;;		 -> uds_get_vin@msg_continue(8), uds_get_vin@msg_start(8), uds_get_soc@msg(8), 
  7467 ;;  dataLen         1   19[COMRAM] unsigned char 
  7468 ;;  msgFlags        1   20[COMRAM] enum E12036
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  pb             18   22[COMRAM] PTR unsigned char [9]
  7471 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  7472 ;;  ptr             2   45[COMRAM] PTR unsigned char 
  7473 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  7474 ;;  tempPtr         2   41[COMRAM] PTR unsigned char 
  7475 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  7476 ;;  i               1   44[COMRAM] unsigned char 
  7477 ;;  temp            1   43[COMRAM] unsigned char 
  7478 ;;  j               1   40[COMRAM] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      enum E12262
  7481 ;; Registers used:
  7482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7488 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7489 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7491 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7492 ;;Total ram usage:       34 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    3
  7495 ;; This function calls:
  7496 ;;		__CANIDToRegs
  7497 ;; This function is called by:
  7498 ;;		_uds_get_soc
  7499 ;;		_uds_get_vin
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text30
  7504  0020BC                     __ptext30:
  7505                           	opt callstack 0
  7506  0020BC                     _ECANSendMessage:
  7507                           	opt callstack 25
  7508                           
  7509                           ;ECANPoll.c: 625: BYTE i,j;;ECANPoll.c: 626: BYTE *ptr, *tempPtr;;ECANPoll.c: 627: BYTE*
      +                           pb[9];;ECANPoll.c: 628: BYTE temp;;ECANPoll.c: 638: pb[0]=(BYTE*)&TXB0CON;
  7510                           
  7511                           ;incstack = 0
  7512  0020BC  0E20               	movlw	32
  7513  0020BE  6E17               	movwf	ECANSendMessage@pb,c
  7514  0020C0  0E0F               	movlw	15
  7515  0020C2  6E18               	movwf	ECANSendMessage@pb+1,c
  7516                           
  7517                           ;ECANPoll.c: 639: pb[1]=(BYTE*)&TXB1CON;
  7518  0020C4  0E10               	movlw	16
  7519  0020C6  6E19               	movwf	ECANSendMessage@pb+2,c
  7520  0020C8  0E0F               	movlw	15
  7521  0020CA  6E1A               	movwf	ECANSendMessage@pb+3,c
  7522                           
  7523                           ;ECANPoll.c: 640: pb[2]=(BYTE*)&TXB2CON;
  7524  0020CC  0E00               	movlw	0
  7525  0020CE  6E1B               	movwf	ECANSendMessage@pb+4,c
  7526  0020D0  0E0F               	movlw	15
  7527  0020D2  6E1C               	movwf	ECANSendMessage@pb+5,c
  7528                           
  7529                           ;ECANPoll.c: 670: for ( i = 0; i < 2; i++ )
  7530  0020D4  0E00               	movlw	0
  7531  0020D6  6E2D               	movwf	ECANSendMessage@i,c
  7532  0020D8                     l4090:
  7533                           
  7534                           ;ECANPoll.c: 685: {;ECANPoll.c: 690: ptr = pb[i];
  7535  0020D8  502D               	movf	ECANSendMessage@i,w,c
  7536  0020DA  0D02               	mullw	2
  7537  0020DC  0E17               	movlw	low ECANSendMessage@pb
  7538  0020DE  24F3               	addwf	prodl,w,c
  7539  0020E0  6ED9               	movwf	fsr2l,c
  7540  0020E2  0E00               	movlw	high ECANSendMessage@pb
  7541  0020E4  20F4               	addwfc	prodh,w,c
  7542  0020E6  6EDA               	movwf	fsr2h,c
  7543  0020E8  CFDE F02E          	movff	postinc2,ECANSendMessage@ptr
  7544  0020EC  CFDD F02F          	movff	postdec2,ECANSendMessage@ptr+1
  7545                           
  7546                           ;ECANPoll.c: 691: tempPtr = ptr;
  7547  0020F0  C02E  F02A         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
  7548  0020F4  C02F  F02B         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
  7549                           
  7550                           ;ECANPoll.c: 717: if ( !(*ptr & 0x08) )
  7551  0020F8  C02E  FFD9         	movff	ECANSendMessage@ptr,fsr2l
  7552  0020FC  C02F  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
  7553  002100  B6DF               	btfsc	indf2,3,c
  7554  002102  D060               	goto	l4136
  7555                           
  7556                           ;ECANPoll.c: 718: {;ECANPoll.c: 720: *ptr &= ~ECAN_TX_PRIORITY_BITS;
  7557  002104  C02E  FFD9         	movff	ECANSendMessage@ptr,fsr2l
  7558  002108  C02F  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
  7559  00210C  0EFC               	movlw	252
  7560  00210E  16DF               	andwf	indf2,f,c
  7561                           
  7562                           ;ECANPoll.c: 721: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
  7563  002110  C015  F016         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
  7564  002114  0E03               	movlw	3
  7565  002116  1616               	andwf	??_ECANSendMessage,f,c
  7566  002118  C02E  FFD9         	movff	ECANSendMessage@ptr,fsr2l
  7567  00211C  C02F  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
  7568  002120  5016               	movf	??_ECANSendMessage,w,c
  7569  002122  12DF               	iorwf	indf2,f,c
  7570                           
  7571                           ;ECANPoll.c: 724: if ( msgFlags & ECAN_TX_RTR_BIT )
  7572  002124  AC15               	btfss	ECANSendMessage@msgFlags,6,c
  7573  002126  D004               	goto	l387
  7574                           
  7575                           ;ECANPoll.c: 725: temp = 0x40 | dataLen;
  7576  002128  5014               	movf	ECANSendMessage@dataLen,w,c
  7577  00212A  0940               	iorlw	64
  7578  00212C  6E2C               	movwf	ECANSendMessage@temp,c
  7579  00212E  D002               	goto	l4104
  7580  002130                     l387:
  7581                           
  7582                           ;ECANPoll.c: 726: else;ECANPoll.c: 727: temp = dataLen;
  7583  002130  C014  F02C         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
  7584  002134                     l4104:
  7585                           
  7586                           ;ECANPoll.c: 729: *(ptr+5) = temp;
  7587  002134  EE20 F005          	lfsr	2,5
  7588  002138  502E               	movf	ECANSendMessage@ptr,w,c
  7589  00213A  26D9               	addwf	fsr2l,f,c
  7590  00213C  502F               	movf	ECANSendMessage@ptr+1,w,c
  7591  00213E  22DA               	addwfc	fsr2h,f,c
  7592  002140  C02C  FFDF         	movff	ECANSendMessage@temp,indf2
  7593                           
  7594                           ;ECANPoll.c: 732: if ( msgFlags & ECAN_TX_FRAME_BIT )
  7595  002144  AA15               	btfss	ECANSendMessage@msgFlags,5,c
  7596  002146  D002               	goto	l4110
  7597                           
  7598                           ;ECANPoll.c: 733: temp = 1;
  7599  002148  0E01               	movlw	1
  7600  00214A  D001               	goto	L9
  7601  00214C                     l4110:
  7602                           
  7603                           ;ECANPoll.c: 735: else;ECANPoll.c: 736: temp = 0;
  7604  00214C  0E00               	movlw	0
  7605  00214E                     L9:
  7606  00214E  6E2C               	movwf	ECANSendMessage@temp,c
  7607                           
  7608                           ;ECANPoll.c: 739: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
  7609  002150  0E01               	movlw	1
  7610  002152  242E               	addwf	ECANSendMessage@ptr,w,c
  7611  002154  6E03               	movwf	__CANIDToRegs@ptr,c
  7612  002156  0E00               	movlw	0
  7613  002158  202F               	addwfc	ECANSendMessage@ptr+1,w,c
  7614  00215A  6E04               	movwf	__CANIDToRegs@ptr+1,c
  7615  00215C  C00E  F005         	movff	ECANSendMessage@id,__CANIDToRegs@val
  7616  002160  C00F  F006         	movff	ECANSendMessage@id+1,__CANIDToRegs@val+1
  7617  002164  C010  F007         	movff	ECANSendMessage@id+2,__CANIDToRegs@val+2
  7618  002168  C011  F008         	movff	ECANSendMessage@id+3,__CANIDToRegs@val+3
  7619  00216C  C02C  F009         	movff	ECANSendMessage@temp,__CANIDToRegs@type
  7620  002170  EC61  F00E         	call	__CANIDToRegs	;wreg free
  7621                           
  7622                           ;ECANPoll.c: 742: ptr += 6;
  7623  002174  0E06               	movlw	6
  7624  002176  262E               	addwf	ECANSendMessage@ptr,f,c
  7625  002178  0E00               	movlw	0
  7626  00217A  222F               	addwfc	ECANSendMessage@ptr+1,f,c
  7627                           
  7628                           ;ECANPoll.c: 744: for ( j = 0 ; j < dataLen; j++ )
  7629  00217C  0E00               	movlw	0
  7630  00217E  6E29               	movwf	ECANSendMessage@j,c
  7631  002180  D00F               	goto	l4126
  7632  002182                     l4118:
  7633                           
  7634                           ;ECANPoll.c: 745: *ptr++ = *data++;
  7635  002182  C012  FFD9         	movff	ECANSendMessage@data,fsr2l
  7636  002186  C013  FFDA         	movff	ECANSendMessage@data+1,fsr2h
  7637  00218A  C02E  FFE1         	movff	ECANSendMessage@ptr,fsr1l
  7638  00218E  C02F  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
  7639  002192  CFDF FFE7          	movff	indf2,indf1
  7640  002196  4A12               	infsnz	ECANSendMessage@data,f,c
  7641  002198  2A13               	incf	ECANSendMessage@data+1,f,c
  7642  00219A  4A2E               	infsnz	ECANSendMessage@ptr,f,c
  7643  00219C  2A2F               	incf	ECANSendMessage@ptr+1,f,c
  7644  00219E  2A29               	incf	ECANSendMessage@j,f,c
  7645  0021A0                     l4126:
  7646  0021A0  5014               	movf	ECANSendMessage@dataLen,w,c
  7647  0021A2  5C29               	subwf	ECANSendMessage@j,w,c
  7648  0021A4  A0D8               	btfss	status,0,c
  7649  0021A6  D7ED               	goto	l4118
  7650                           
  7651                           ;ECANPoll.c: 749: if ( !(*tempPtr & 0x04) )
  7652  0021A8  C02A  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
  7653  0021AC  C02B  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
  7654  0021B0  B4DF               	btfsc	indf2,2,c
  7655  0021B2  D006               	goto	l4132
  7656                           
  7657                           ;ECANPoll.c: 750: *tempPtr |= 0x08;
  7658  0021B4  C02A  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
  7659  0021B8  C02B  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
  7660  0021BC  0E00               	movlw	0
  7661  0021BE  86DB               	bsf	plusw2,3,c
  7662  0021C0                     l4132:
  7663                           
  7664                           ;ECANPoll.c: 752: return TRUE;
  7665  0021C0  0E01               	movlw	1
  7666  0021C2  0012               	return	
  7667  0021C4                     l4136:
  7668  0021C4  2A2D               	incf	ECANSendMessage@i,f,c
  7669  0021C6  0E01               	movlw	1
  7670  0021C8  642D               	cpfsgt	ECANSendMessage@i,c
  7671  0021CA  D786               	goto	l4090
  7672                           
  7673                           ;ECANPoll.c: 753: };ECANPoll.c: 754: };ECANPoll.c: 757: return FALSE;
  7674  0021CC  0E00               	movlw	0
  7675  0021CE  0012               	return		;funcret
  7676  0021D0                     __end_of_ECANSendMessage:
  7677                           	opt callstack 0
  7678                           
  7679 ;; *************** function __CANIDToRegs *****************
  7680 ;; Defined at:
  7681 ;;		line 1097 in file "can/ECANPoll.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  ptr             2    2[COMRAM] PTR unsigned char 
  7684 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  7685 ;;  val             4    4[COMRAM] unsigned long 
  7686 ;;  type            1    8[COMRAM] unsigned char 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  Value           2   11[COMRAM] PTR struct _CAN_MESSAGE_
  7689 ;;		 -> _CANIDToRegs@val(4), 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7699 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7702 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7703 ;;Total ram usage:       11 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    2
  7706 ;; This function calls:
  7707 ;;		Nothing
  7708 ;; This function is called by:
  7709 ;;		_ECANSendMessage
  7710 ;; This function uses a non-reentrant model
  7711 ;;
  7712                           
  7713                           	psect	text31
  7714  001CC2                     __ptext31:
  7715                           	opt callstack 0
  7716  001CC2                     __CANIDToRegs:
  7717                           	opt callstack 25
  7718                           
  7719                           ;ECANPoll.c: 1101: CAN_MESSAGE_ID *Value;;ECANPoll.c: 1103: Value = (CAN_MESSAGE_ID*)&va
      +                          l;
  7720                           
  7721                           ;incstack = 0
  7722  001CC2  0E05               	movlw	low __CANIDToRegs@val
  7723  001CC4  6E0C               	movwf	__CANIDToRegs@Value,c
  7724  001CC6  0E00               	movlw	high __CANIDToRegs@val
  7725  001CC8  6E0D               	movwf	__CANIDToRegs@Value+1,c
  7726                           
  7727                           ;ECANPoll.c: 1105: if ( type == 0 )
  7728  001CCA  5009               	movf	__CANIDToRegs@type,w,c
  7729  001CCC  A4D8               	btfss	status,2,c
  7730  001CCE  D03A               	goto	l3648
  7731                           
  7732                           ;ECANPoll.c: 1106: {;ECANPoll.c: 1108: *ptr = Value->BYTES.BYTE_1 >> 3;
  7733  001CD0  C00C  FFD9         	movff	__CANIDToRegs@Value,fsr2l
  7734  001CD4  C00D  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
  7735  001CD8  50DF               	movf	indf2,w,c
  7736  001CDA  6E0A               	movwf	??__CANIDToRegs& (0+255),c
  7737  001CDC  90D8               	bcf	status,0,c
  7738  001CDE  320A               	rrcf	??__CANIDToRegs,f,c
  7739  001CE0  90D8               	bcf	status,0,c
  7740  001CE2  320A               	rrcf	??__CANIDToRegs,f,c
  7741  001CE4  90D8               	bcf	status,0,c
  7742  001CE6  300A               	rrcf	??__CANIDToRegs,w,c
  7743  001CE8  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7744  001CEC  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7745  001CF0  6EDF               	movwf	indf2,c
  7746                           
  7747                           ;ECANPoll.c: 1109: *ptr |= (Value->BYTES.BYTE_2 << 5);
  7748  001CF2  EE20 F001          	lfsr	2,1
  7749  001CF6  500C               	movf	__CANIDToRegs@Value,w,c
  7750  001CF8  26D9               	addwf	fsr2l,f,c
  7751  001CFA  500D               	movf	__CANIDToRegs@Value+1,w,c
  7752  001CFC  22DA               	addwfc	fsr2h,f,c
  7753  001CFE  50DF               	movf	indf2,w,c
  7754  001D00  6E0A               	movwf	??__CANIDToRegs& (0+255),c
  7755  001D02  0E05               	movlw	5
  7756  001D04  6E0B               	movwf	(??__CANIDToRegs+1)& (0+255),c
  7757  001D06                     u3615:
  7758  001D06  90D8               	bcf	status,0,c
  7759  001D08  360A               	rlcf	??__CANIDToRegs,f,c
  7760  001D0A  2E0B               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
  7761  001D0C  D7FC               	goto	u3615
  7762  001D0E  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7763  001D12  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7764  001D16  500A               	movf	??__CANIDToRegs,w,c
  7765  001D18  12DF               	iorwf	indf2,f,c
  7766                           
  7767                           ;ECANPoll.c: 1110: ptr++;
  7768  001D1A  4A03               	infsnz	__CANIDToRegs@ptr,f,c
  7769  001D1C  2A04               	incf	__CANIDToRegs@ptr+1,f,c
  7770                           
  7771                           ;ECANPoll.c: 1111: *ptr = Value->BYTES.BYTE_1 << 5;
  7772  001D1E  C00C  FFD9         	movff	__CANIDToRegs@Value,fsr2l
  7773  001D22  C00D  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
  7774  001D26  50DF               	movf	indf2,w,c
  7775  001D28  6E0A               	movwf	??__CANIDToRegs& (0+255),c
  7776  001D2A  0E05               	movlw	5
  7777  001D2C  6E0B               	movwf	(??__CANIDToRegs+1)& (0+255),c
  7778  001D2E                     u3625:
  7779  001D2E  90D8               	bcf	status,0,c
  7780  001D30  360A               	rlcf	??__CANIDToRegs,f,c
  7781  001D32  2E0B               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
  7782  001D34  D7FC               	goto	u3625
  7783  001D36  500A               	movf	??__CANIDToRegs,w,c
  7784  001D38  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7785  001D3C  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7786  001D40  6EDF               	movwf	indf2,c
  7787                           
  7788                           ;ECANPoll.c: 1112: }
  7789  001D42  0012               	return	
  7790  001D44                     l3648:
  7791                           
  7792                           ;ECANPoll.c: 1113: else;ECANPoll.c: 1114: {;ECANPoll.c: 1116: *ptr = Value->BYTES.BYTE_3
      +                           >> 5;
  7793  001D44  EE20 F002          	lfsr	2,2
  7794  001D48  500C               	movf	__CANIDToRegs@Value,w,c
  7795  001D4A  26D9               	addwf	fsr2l,f,c
  7796  001D4C  500D               	movf	__CANIDToRegs@Value+1,w,c
  7797  001D4E  22DA               	addwfc	fsr2h,f,c
  7798  001D50  50DF               	movf	indf2,w,c
  7799  001D52  6E0A               	movwf	??__CANIDToRegs& (0+255),c
  7800  001D54  0E05               	movlw	5
  7801  001D56  6E0B               	movwf	(??__CANIDToRegs+1)& (0+255),c
  7802  001D58                     u3635:
  7803  001D58  90D8               	bcf	status,0,c
  7804  001D5A  320A               	rrcf	??__CANIDToRegs,f,c
  7805  001D5C  2E0B               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
  7806  001D5E  D7FC               	goto	u3635
  7807  001D60  500A               	movf	??__CANIDToRegs,w,c
  7808  001D62  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7809  001D66  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7810  001D6A  6EDF               	movwf	indf2,c
  7811                           
  7812                           ;ECANPoll.c: 1117: *ptr |= Value->BYTES.BYTE_4 << 3;
  7813  001D6C  EE20 F003          	lfsr	2,3
  7814  001D70  500C               	movf	__CANIDToRegs@Value,w,c
  7815  001D72  26D9               	addwf	fsr2l,f,c
  7816  001D74  500D               	movf	__CANIDToRegs@Value+1,w,c
  7817  001D76  22DA               	addwfc	fsr2h,f,c
  7818  001D78  50DF               	movf	indf2,w,c
  7819  001D7A  6E0A               	movwf	??__CANIDToRegs& (0+255),c
  7820  001D7C  90D8               	bcf	status,0,c
  7821  001D7E  360A               	rlcf	??__CANIDToRegs,f,c
  7822  001D80  90D8               	bcf	status,0,c
  7823  001D82  360A               	rlcf	??__CANIDToRegs,f,c
  7824  001D84  90D8               	bcf	status,0,c
  7825  001D86  360A               	rlcf	??__CANIDToRegs,f,c
  7826  001D88  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7827  001D8C  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7828  001D90  500A               	movf	??__CANIDToRegs,w,c
  7829  001D92  12DF               	iorwf	indf2,f,c
  7830                           
  7831                           ;ECANPoll.c: 1118: ptr++;
  7832  001D94  4A03               	infsnz	__CANIDToRegs@ptr,f,c
  7833  001D96  2A04               	incf	__CANIDToRegs@ptr+1,f,c
  7834                           
  7835                           ;ECANPoll.c: 1119: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
  7836  001D98  EE20 F002          	lfsr	2,2
  7837  001D9C  500C               	movf	__CANIDToRegs@Value,w,c
  7838  001D9E  26D9               	addwf	fsr2l,f,c
  7839  001DA0  500D               	movf	__CANIDToRegs@Value+1,w,c
  7840  001DA2  22DA               	addwfc	fsr2h,f,c
  7841  001DA4  50DF               	movf	indf2,w,c
  7842  001DA6  6E0A               	movwf	??__CANIDToRegs& (0+255),c
  7843  001DA8  90D8               	bcf	status,0,c
  7844  001DAA  360A               	rlcf	??__CANIDToRegs,f,c
  7845  001DAC  90D8               	bcf	status,0,c
  7846  001DAE  360A               	rlcf	??__CANIDToRegs,f,c
  7847  001DB0  90D8               	bcf	status,0,c
  7848  001DB2  340A               	rlcf	??__CANIDToRegs,w,c
  7849  001DB4  0BE0               	andlw	224
  7850  001DB6  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7851  001DBA  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7852  001DBE  6EDF               	movwf	indf2,c
  7853                           
  7854                           ;ECANPoll.c: 1121: *ptr |= 0b00001000;
  7855  001DC0  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7856  001DC4  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7857  001DC8  0E00               	movlw	0
  7858  001DCA  86DB               	bsf	plusw2,3,c
  7859                           
  7860                           ;ECANPoll.c: 1122: *ptr |= Value->BYTES.BYTE_3 & 0x03;
  7861  001DCC  EE20 F002          	lfsr	2,2
  7862  001DD0  500C               	movf	__CANIDToRegs@Value,w,c
  7863  001DD2  26D9               	addwf	fsr2l,f,c
  7864  001DD4  500D               	movf	__CANIDToRegs@Value+1,w,c
  7865  001DD6  22DA               	addwfc	fsr2h,f,c
  7866  001DD8  50DF               	movf	indf2,w,c
  7867  001DDA  6E0A               	movwf	??__CANIDToRegs& (0+255),c
  7868  001DDC  0E03               	movlw	3
  7869  001DDE  160A               	andwf	??__CANIDToRegs,f,c
  7870  001DE0  C003  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  7871  001DE4  C004  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  7872  001DE8  500A               	movf	??__CANIDToRegs,w,c
  7873  001DEA  12DF               	iorwf	indf2,f,c
  7874                           
  7875                           ;ECANPoll.c: 1123: ptr++;
  7876  001DEC  4A03               	infsnz	__CANIDToRegs@ptr,f,c
  7877  001DEE  2A04               	incf	__CANIDToRegs@ptr+1,f,c
  7878                           
  7879                           ;ECANPoll.c: 1124: *ptr = Value->BYTES.BYTE_2;
  7880  001DF0  EE20 F001          	lfsr	2,1
  7881  001DF4  500C               	movf	__CANIDToRegs@Value,w,c
  7882  001DF6  26D9               	addwf	fsr2l,f,c
  7883  001DF8  500D               	movf	__CANIDToRegs@Value+1,w,c
  7884  001DFA  22DA               	addwfc	fsr2h,f,c
  7885  001DFC  C003  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
  7886  001E00  C004  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
  7887  001E04  CFDF FFE7          	movff	indf2,indf1
  7888                           
  7889                           ;ECANPoll.c: 1125: ptr++;
  7890  001E08  4A03               	infsnz	__CANIDToRegs@ptr,f,c
  7891  001E0A  2A04               	incf	__CANIDToRegs@ptr+1,f,c
  7892                           
  7893                           ;ECANPoll.c: 1126: *ptr = Value->BYTES.BYTE_1;
  7894  001E0C  C00C  FFD9         	movff	__CANIDToRegs@Value,fsr2l
  7895  001E10  C00D  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
  7896  001E14  C003  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
  7897  001E18  C004  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
  7898  001E1C  CFDF FFE7          	movff	indf2,indf1
  7899  001E20  0012               	return		;funcret
  7900  001E22                     __end_of__CANIDToRegs:
  7901                           	opt callstack 0
  7902                           
  7903 ;; *************** function _ECANReceiveMessage *****************
  7904 ;; Defined at:
  7905 ;;		line 796 in file "can/ECANPoll.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  id              2   11[COMRAM] PTR unsigned long 
  7908 ;;		 -> uds_get_vin@id(4), uds_get_soc@id(4), 
  7909 ;;  data            2   13[COMRAM] PTR unsigned char 
  7910 ;;		 -> uds_get_vin@msg2(32), uds_get_soc@msg2(32), 
  7911 ;;  dataLen         2   15[COMRAM] PTR unsigned char 
  7912 ;;		 -> uds_get_vin@len(1), uds_get_soc@len(1), 
  7913 ;;  msgFlags        2   17[COMRAM] PTR enum E12054
  7914 ;;		 -> uds_get_vin@flags(1), uds_get_soc@flags(1), 
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;  ptr             2   22[COMRAM] PTR unsigned char 
  7917 ;;		 -> RXB1CON(1), RXB0CON(1), 
  7918 ;;  savedPtr        2   19[COMRAM] PTR unsigned char 
  7919 ;;		 -> RXB1CON(1), RXB0CON(1), 
  7920 ;;  temp            1   24[COMRAM] struct _BYTE_VAL
  7921 ;;  i               1   21[COMRAM] unsigned char 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      enum E12262
  7924 ;; Registers used:
  7925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7931 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7932 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;Total ram usage:       14 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    3
  7938 ;; This function calls:
  7939 ;;		__RegsToCANID
  7940 ;; This function is called by:
  7941 ;;		_uds_get_soc
  7942 ;;		_uds_get_vin
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text32
  7947  001E22                     __ptext32:
  7948                           	opt callstack 0
  7949  001E22                     _ECANReceiveMessage:
  7950                           	opt callstack 25
  7951                           
  7952                           ;ECANPoll.c: 805: BYTE *ptr, *savedPtr;;ECANPoll.c: 806: char i;;ECANPoll.c: 807: BYTE_V
      +                          AL temp;;ECANPoll.c: 809: _ECANRxFilterHitInfo.Val = 0;
  7953                           
  7954                           ;incstack = 0
  7955  001E22  0E00               	movlw	0
  7956  001E24  0100               	movlb	0	; () banked
  7957  001E26  6FC8               	movwf	__ECANRxFilterHitInfo& (0+255),b
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;ECANPoll.c: 819: {;ECANPoll.c: 821: if ( RXB0FUL )
  7961  001E28  AE60               	btfss	3936,7,c	;volatile
  7962  001E2A  D012               	goto	l398
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;ECANPoll.c: 822: {;ECANPoll.c: 824: RXB0IF = 0;
  7966  001E2C  9077               	bcf	3959,0,c	;volatile
  7967                           
  7968                           ;ECANPoll.c: 827: if ( RXB0OVFL )
  7969  001E2E  AE71               	btfss	3953,7,c	;volatile
  7970  001E30  D007               	goto	l4154
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;ECANPoll.c: 828: {;ECANPoll.c: 829: *msgFlags |= ECAN_RX_OVERFLOW;
  7974  001E32  C012  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  7975  001E36  C013  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  7976  001E3A  0E00               	movlw	0
  7977  001E3C  86DB               	bsf	plusw2,3,c
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;ECANPoll.c: 830: RXB0OVFL = 0;
  7981  001E3E  9E71               	bcf	3953,7,c	;volatile
  7982  001E40                     l4154:
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;ECANPoll.c: 831: };ECANPoll.c: 833: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
  7986  001E40  A060               	btfss	3936,0,c	;volatile
  7987  001E42  D002               	bra	u4375
  7988  001E44  81C8               	bsf	__ECANRxFilterHitInfo& (0+255),0,b
  7989  001E46  D002               	bra	u4377
  7990  001E48                     u4375:
  7991  001E48  0100               	movlb	0	; () banked
  7992  001E4A  91C8               	bcf	__ECANRxFilterHitInfo& (0+255),0,b
  7993  001E4C                     u4377:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;ECANPoll.c: 835: ptr = (BYTE*)&RXB0CON;
  7997  001E4C  0E60               	movlw	96
  7998  001E4E  D01C               	goto	L10
  7999  001E50                     l398:
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;ECANPoll.c: 838: else if ( B1CONbits.RXFUL )
  8003  001E50  010E               	movlb	14	; () banked
  8004  001E52  AF90               	btfss	144,7,b	;volatile
  8005  001E54  D01D               	goto	l4172
  8006                           
  8007                           ; BSR set to: 14
  8008                           ;ECANPoll.c: 839: {;ECANPoll.c: 841: RXB1IF = 0;
  8009  001E56  9277               	bcf	3959,1,c	;volatile
  8010                           
  8011                           ;ECANPoll.c: 844: if ( RXB1OVFL )
  8012  001E58  AC71               	btfss	3953,6,c	;volatile
  8013  001E5A  D007               	goto	l4164
  8014                           
  8015                           ; BSR set to: 14
  8016                           ;ECANPoll.c: 845: {;ECANPoll.c: 846: *msgFlags |= ECAN_RX_OVERFLOW;
  8017  001E5C  C012  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8018  001E60  C013  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8019  001E64  0E00               	movlw	0
  8020  001E66  86DB               	bsf	plusw2,3,c
  8021                           
  8022                           ; BSR set to: 14
  8023                           ;ECANPoll.c: 847: RXB1OVFL = 0;
  8024  001E68  9C71               	bcf	3953,6,c	;volatile
  8025  001E6A                     l4164:
  8026                           
  8027                           ; BSR set to: 14
  8028                           ;ECANPoll.c: 848: };ECANPoll.c: 850: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
  8029  001E6A  010F               	movlb	15	; () banked
  8030  001E6C  5130               	movf	48,w,b	;volatile
  8031  001E6E  0B07               	andlw	7
  8032  001E70  0100               	movlb	0	; () banked
  8033  001E72  6FC8               	movwf	__ECANRxFilterHitInfo& (0+255),b
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;ECANPoll.c: 852: if ( _ECANRxFilterHitInfo.Val < 0x02 )
  8037  001E74  0E02               	movlw	2
  8038  001E76  61C8               	cpfslt	__ECANRxFilterHitInfo& (0+255),b
  8039  001E78  D006               	goto	l4170
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;ECANPoll.c: 853: *msgFlags |= ECAN_RX_DBL_BUFFERED;
  8043  001E7A  C012  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8044  001E7E  C013  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8045  001E82  0E00               	movlw	0
  8046  001E84  8EDB               	bsf	plusw2,7,c
  8047  001E86                     l4170:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;ECANPoll.c: 856: ptr = (BYTE*)&RXB1CON;
  8051  001E86  0E30               	movlw	48
  8052  001E88                     L10:
  8053  001E88  6E17               	movwf	ECANReceiveMessage@ptr,c
  8054  001E8A  0E0F               	movlw	15
  8055  001E8C  6E18               	movwf	ECANReceiveMessage@ptr+1,c
  8056                           
  8057                           ;ECANPoll.c: 857: }
  8058  001E8E  D002               	goto	l4176
  8059  001E90                     l4172:
  8060                           
  8061                           ; BSR set to: 14
  8062                           ;ECANPoll.c: 858: else;ECANPoll.c: 859: return FALSE;
  8063  001E90  0E00               	movlw	0
  8064  001E92  0012               	return	
  8065  001E94                     l4176:
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;ECANPoll.c: 939: savedPtr = ptr;
  8069  001E94  C017  F014         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
  8070  001E98  C018  F015         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;ECANPoll.c: 940: *msgFlags = 0;
  8074  001E9C  C012  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8075  001EA0  C013  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8076  001EA4  0E00               	movlw	0
  8077  001EA6  6EDF               	movwf	indf2,c
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;ECANPoll.c: 943: temp.Val = *(ptr+5);
  8081  001EA8  EE20 F005          	lfsr	2,5
  8082  001EAC  5017               	movf	ECANReceiveMessage@ptr,w,c
  8083  001EAE  26D9               	addwf	fsr2l,f,c
  8084  001EB0  5018               	movf	ECANReceiveMessage@ptr+1,w,c
  8085  001EB2  22DA               	addwfc	fsr2h,f,c
  8086  001EB4  50DF               	movf	indf2,w,c
  8087  001EB6  6E19               	movwf	ECANReceiveMessage@temp,c
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;ECANPoll.c: 944: *dataLen = temp.Val & 0b00001111;
  8091  001EB8  5019               	movf	ECANReceiveMessage@temp,w,c
  8092  001EBA  0B0F               	andlw	15
  8093  001EBC  C010  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
  8094  001EC0  C011  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
  8095  001EC4  6EDF               	movwf	indf2,c
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;ECANPoll.c: 947: if ( temp.bits.b6 )
  8099  001EC6  AC19               	btfss	ECANReceiveMessage@temp,6,c
  8100  001EC8  D006               	goto	l407
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;ECANPoll.c: 948: *msgFlags |= ECAN_RX_RTR_FRAME;
  8104  001ECA  C012  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8105  001ECE  C013  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8106  001ED2  0E00               	movlw	0
  8107  001ED4  8CDB               	bsf	plusw2,6,c
  8108  001ED6                     l407:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;ECANPoll.c: 951: temp.Val = *(ptr+2);
  8112  001ED6  EE20 F002          	lfsr	2,2
  8113  001EDA  5017               	movf	ECANReceiveMessage@ptr,w,c
  8114  001EDC  26D9               	addwf	fsr2l,f,c
  8115  001EDE  5018               	movf	ECANReceiveMessage@ptr+1,w,c
  8116  001EE0  22DA               	addwfc	fsr2h,f,c
  8117  001EE2  50DF               	movf	indf2,w,c
  8118  001EE4  6E19               	movwf	ECANReceiveMessage@temp,c
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;ECANPoll.c: 952: if ( temp.bits.b3 )
  8122  001EE6  A619               	btfss	ECANReceiveMessage@temp,3,c
  8123  001EE8  D008               	goto	l4194
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;ECANPoll.c: 953: {;ECANPoll.c: 954: *msgFlags |= ECAN_RX_XTD_FRAME;
  8127  001EEA  C012  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8128  001EEE  C013  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8129  001EF2  0E00               	movlw	0
  8130  001EF4  8ADB               	bsf	plusw2,5,c
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;ECANPoll.c: 955: temp.Val = 1;
  8134  001EF6  0E01               	movlw	1
  8135  001EF8  D001               	goto	L11
  8136  001EFA                     l4194:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;ECANPoll.c: 957: else;ECANPoll.c: 958: temp.Val = 0;
  8140  001EFA  0E00               	movlw	0
  8141  001EFC                     L11:
  8142  001EFC  6E19               	movwf	ECANReceiveMessage@temp,c
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;ECANPoll.c: 960: _RegsToCANID(ptr+1, id, temp.Val);
  8146  001EFE  0E01               	movlw	1
  8147  001F00  2417               	addwf	ECANReceiveMessage@ptr,w,c
  8148  001F02  6E03               	movwf	__RegsToCANID@ptr,c
  8149  001F04  0E00               	movlw	0
  8150  001F06  2018               	addwfc	ECANReceiveMessage@ptr+1,w,c
  8151  001F08  6E04               	movwf	__RegsToCANID@ptr+1,c
  8152  001F0A  C00C  F005         	movff	ECANReceiveMessage@id,__RegsToCANID@val
  8153  001F0E  C00D  F006         	movff	ECANReceiveMessage@id+1,__RegsToCANID@val+1
  8154  001F12  C019  F007         	movff	ECANReceiveMessage@temp,__RegsToCANID@type
  8155  001F16  ECA6  F00D         	call	__RegsToCANID	;wreg free
  8156                           
  8157                           ;ECANPoll.c: 963: ptr += 6;
  8158  001F1A  0E06               	movlw	6
  8159  001F1C  2617               	addwf	ECANReceiveMessage@ptr,f,c
  8160  001F1E  0E00               	movlw	0
  8161  001F20  2218               	addwfc	ECANReceiveMessage@ptr+1,f,c
  8162                           
  8163                           ;ECANPoll.c: 964: temp.Val = *dataLen;
  8164  001F22  C010  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
  8165  001F26  C011  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
  8166  001F2A  50DF               	movf	indf2,w,c
  8167  001F2C  6E19               	movwf	ECANReceiveMessage@temp,c
  8168                           
  8169                           ;ECANPoll.c: 965: for ( i = 0; i < temp.Val; i++ )
  8170  001F2E  0E00               	movlw	0
  8171  001F30  6E16               	movwf	ECANReceiveMessage@i,c
  8172  001F32  D00F               	goto	l4212
  8173  001F34                     l4204:
  8174                           
  8175                           ;ECANPoll.c: 966: *data++ = *ptr++;
  8176  001F34  C017  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
  8177  001F38  C018  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
  8178  001F3C  C00E  FFE1         	movff	ECANReceiveMessage@data,fsr1l
  8179  001F40  C00F  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
  8180  001F44  CFDF FFE7          	movff	indf2,indf1
  8181  001F48  4A17               	infsnz	ECANReceiveMessage@ptr,f,c
  8182  001F4A  2A18               	incf	ECANReceiveMessage@ptr+1,f,c
  8183  001F4C  4A0E               	infsnz	ECANReceiveMessage@data,f,c
  8184  001F4E  2A0F               	incf	ECANReceiveMessage@data+1,f,c
  8185  001F50  2A16               	incf	ECANReceiveMessage@i,f,c
  8186  001F52                     l4212:
  8187  001F52  5019               	movf	ECANReceiveMessage@temp,w,c
  8188  001F54  5C16               	subwf	ECANReceiveMessage@i,w,c
  8189  001F56  A0D8               	btfss	status,0,c
  8190  001F58  D7ED               	goto	l4204
  8191                           
  8192                           ;ECANPoll.c: 969: if ( IRXIF )
  8193  001F5A  AE77               	btfss	3959,7,c	;volatile
  8194  001F5C  D007               	goto	l4218
  8195                           
  8196                           ;ECANPoll.c: 970: {;ECANPoll.c: 971: *msgFlags |= ECAN_RX_INVALID_MSG;
  8197  001F5E  C012  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8198  001F62  C013  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8199  001F66  0E00               	movlw	0
  8200  001F68  88DB               	bsf	plusw2,4,c
  8201                           
  8202                           ;ECANPoll.c: 972: IRXIF = 0;
  8203  001F6A  9E77               	bcf	3959,7,c	;volatile
  8204  001F6C                     l4218:
  8205                           
  8206                           ;ECANPoll.c: 973: };ECANPoll.c: 976: *savedPtr &= 0x7f;
  8207  001F6C  C014  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
  8208  001F70  C015  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
  8209  001F74  0E7F               	movlw	127
  8210  001F76  16DF               	andwf	indf2,f,c
  8211                           
  8212                           ;ECANPoll.c: 991: return TRUE;
  8213  001F78  0E01               	movlw	1
  8214  001F7A  0012               	return		;funcret
  8215  001F7C                     __end_of_ECANReceiveMessage:
  8216                           	opt callstack 0
  8217                           
  8218 ;; *************** function __RegsToCANID *****************
  8219 ;; Defined at:
  8220 ;;		line 1154 in file "can/ECANPoll.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  ptr             2    2[COMRAM] PTR unsigned char 
  8223 ;;		 -> RXB1CON(1), RXB0CON(1), 
  8224 ;;  val             2    4[COMRAM] PTR unsigned long 
  8225 ;;		 -> uds_get_vin@id(4), uds_get_soc@id(4), 
  8226 ;;  type            1    6[COMRAM] unsigned char 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  Value           2    9[COMRAM] PTR struct _CAN_MESSAGE_
  8229 ;;		 -> uds_get_vin@id(4), uds_get_soc@id(4), 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8239 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;Total ram usage:        9 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:    2
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_ECANReceiveMessage
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text33
  8254  001B4C                     __ptext33:
  8255                           	opt callstack 0
  8256  001B4C                     __RegsToCANID:
  8257                           	opt callstack 25
  8258                           
  8259                           ;ECANPoll.c: 1158: CAN_MESSAGE_ID *Value;;ECANPoll.c: 1160: Value = (CAN_MESSAGE_ID*)val
      +                          ;
  8260                           
  8261                           ;incstack = 0
  8262  001B4C  C005  F00A         	movff	__RegsToCANID@val,__RegsToCANID@Value
  8263  001B50  C006  F00B         	movff	__RegsToCANID@val+1,__RegsToCANID@Value+1
  8264                           
  8265                           ;ECANPoll.c: 1162: if ( type == 0 )
  8266  001B54  5007               	movf	__RegsToCANID@type,w,c
  8267  001B56  A4D8               	btfss	status,2,c
  8268  001B58  D04A               	goto	l3680
  8269                           
  8270                           ;ECANPoll.c: 1163: {;ECANPoll.c: 1165: Value->BYTES.BYTE_1 = (*ptr << 3);
  8271  001B5A  C003  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8272  001B5E  C004  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8273  001B62  50DF               	movf	indf2,w,c
  8274  001B64  6E08               	movwf	??__RegsToCANID& (0+255),c
  8275  001B66  90D8               	bcf	status,0,c
  8276  001B68  3608               	rlcf	??__RegsToCANID,f,c
  8277  001B6A  90D8               	bcf	status,0,c
  8278  001B6C  3608               	rlcf	??__RegsToCANID,f,c
  8279  001B6E  90D8               	bcf	status,0,c
  8280  001B70  3408               	rlcf	??__RegsToCANID,w,c
  8281  001B72  C00A  FFD9         	movff	__RegsToCANID@Value,fsr2l
  8282  001B76  C00B  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
  8283  001B7A  6EDF               	movwf	indf2,c
  8284                           
  8285                           ;ECANPoll.c: 1166: Value->BYTES.BYTE_2 = *ptr >> 5;
  8286  001B7C  EE20 F001          	lfsr	2,1
  8287  001B80  500A               	movf	__RegsToCANID@Value,w,c
  8288  001B82  26D9               	addwf	fsr2l,f,c
  8289  001B84  500B               	movf	__RegsToCANID@Value+1,w,c
  8290  001B86  22DA               	addwfc	fsr2h,f,c
  8291  001B88  C003  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  8292  001B8C  C004  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  8293  001B90  50E7               	movf	indf1,w,c
  8294  001B92  6E08               	movwf	??__RegsToCANID& (0+255),c
  8295  001B94  0E05               	movlw	5
  8296  001B96  6E09               	movwf	(??__RegsToCANID+1)& (0+255),c
  8297  001B98                     u3655:
  8298  001B98  90D8               	bcf	status,0,c
  8299  001B9A  3208               	rrcf	??__RegsToCANID,f,c
  8300  001B9C  2E09               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  8301  001B9E  D7FC               	goto	u3655
  8302  001BA0  5008               	movf	??__RegsToCANID,w,c
  8303  001BA2  6EDF               	movwf	indf2,c
  8304                           
  8305                           ;ECANPoll.c: 1167: ptr++;
  8306  001BA4  4A03               	infsnz	__RegsToCANID@ptr,f,c
  8307  001BA6  2A04               	incf	__RegsToCANID@ptr+1,f,c
  8308                           
  8309                           ;ECANPoll.c: 1168: Value->BYTES.BYTE_1 |= (*ptr >> 5);
  8310  001BA8  C003  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8311  001BAC  C004  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8312  001BB0  50DF               	movf	indf2,w,c
  8313  001BB2  6E08               	movwf	??__RegsToCANID& (0+255),c
  8314  001BB4  0E05               	movlw	5
  8315  001BB6  6E09               	movwf	(??__RegsToCANID+1)& (0+255),c
  8316  001BB8                     u3665:
  8317  001BB8  90D8               	bcf	status,0,c
  8318  001BBA  3208               	rrcf	??__RegsToCANID,f,c
  8319  001BBC  2E09               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  8320  001BBE  D7FC               	goto	u3665
  8321  001BC0  C00A  FFD9         	movff	__RegsToCANID@Value,fsr2l
  8322  001BC4  C00B  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
  8323  001BC8  5008               	movf	??__RegsToCANID,w,c
  8324  001BCA  12DF               	iorwf	indf2,f,c
  8325                           
  8326                           ;ECANPoll.c: 1169: Value->BYTES.BYTE_3 = 0x00;
  8327  001BCC  EE20 F002          	lfsr	2,2
  8328  001BD0  500A               	movf	__RegsToCANID@Value,w,c
  8329  001BD2  26D9               	addwf	fsr2l,f,c
  8330  001BD4  500B               	movf	__RegsToCANID@Value+1,w,c
  8331  001BD6  22DA               	addwfc	fsr2h,f,c
  8332  001BD8  0E00               	movlw	0
  8333  001BDA  6EDF               	movwf	indf2,c
  8334                           
  8335                           ;ECANPoll.c: 1170: Value->BYTES.BYTE_4 = 0x00;
  8336  001BDC  EE20 F003          	lfsr	2,3
  8337  001BE0  500A               	movf	__RegsToCANID@Value,w,c
  8338  001BE2  26D9               	addwf	fsr2l,f,c
  8339  001BE4  500B               	movf	__RegsToCANID@Value+1,w,c
  8340  001BE6  22DA               	addwfc	fsr2h,f,c
  8341  001BE8  0E00               	movlw	0
  8342  001BEA  6EDF               	movwf	indf2,c
  8343                           
  8344                           ;ECANPoll.c: 1171: }
  8345  001BEC  0012               	return	
  8346  001BEE                     l3680:
  8347                           
  8348                           ;ECANPoll.c: 1172: else;ECANPoll.c: 1173: {;ECANPoll.c: 1175: Value->BYTES.BYTE_3 = (*pt
      +                          r << 5);
  8349  001BEE  EE20 F002          	lfsr	2,2
  8350  001BF2  500A               	movf	__RegsToCANID@Value,w,c
  8351  001BF4  26D9               	addwf	fsr2l,f,c
  8352  001BF6  500B               	movf	__RegsToCANID@Value+1,w,c
  8353  001BF8  22DA               	addwfc	fsr2h,f,c
  8354  001BFA  C003  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  8355  001BFE  C004  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  8356  001C02  50E7               	movf	indf1,w,c
  8357  001C04  6E08               	movwf	??__RegsToCANID& (0+255),c
  8358  001C06  0E05               	movlw	5
  8359  001C08  6E09               	movwf	(??__RegsToCANID+1)& (0+255),c
  8360  001C0A                     u3675:
  8361  001C0A  90D8               	bcf	status,0,c
  8362  001C0C  3608               	rlcf	??__RegsToCANID,f,c
  8363  001C0E  2E09               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  8364  001C10  D7FC               	goto	u3675
  8365  001C12  5008               	movf	??__RegsToCANID,w,c
  8366  001C14  6EDF               	movwf	indf2,c
  8367                           
  8368                           ;ECANPoll.c: 1176: Value->BYTES.BYTE_4 = (*ptr >> 3);
  8369  001C16  EE20 F003          	lfsr	2,3
  8370  001C1A  500A               	movf	__RegsToCANID@Value,w,c
  8371  001C1C  26D9               	addwf	fsr2l,f,c
  8372  001C1E  500B               	movf	__RegsToCANID@Value+1,w,c
  8373  001C20  22DA               	addwfc	fsr2h,f,c
  8374  001C22  C003  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  8375  001C26  C004  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  8376  001C2A  50E7               	movf	indf1,w,c
  8377  001C2C  6E08               	movwf	??__RegsToCANID& (0+255),c
  8378  001C2E  90D8               	bcf	status,0,c
  8379  001C30  3208               	rrcf	??__RegsToCANID,f,c
  8380  001C32  90D8               	bcf	status,0,c
  8381  001C34  3208               	rrcf	??__RegsToCANID,f,c
  8382  001C36  90D8               	bcf	status,0,c
  8383  001C38  3008               	rrcf	??__RegsToCANID,w,c
  8384  001C3A  6EDF               	movwf	indf2,c
  8385                           
  8386                           ;ECANPoll.c: 1177: ptr++;
  8387  001C3C  4A03               	infsnz	__RegsToCANID@ptr,f,c
  8388  001C3E  2A04               	incf	__RegsToCANID@ptr+1,f,c
  8389                           
  8390                           ;ECANPoll.c: 1178: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
  8391  001C40  C003  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8392  001C44  C004  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8393  001C48  50DF               	movf	indf2,w,c
  8394  001C4A  6E08               	movwf	??__RegsToCANID& (0+255),c
  8395  001C4C  0E03               	movlw	3
  8396  001C4E  1608               	andwf	??__RegsToCANID,f,c
  8397  001C50  EE20 F002          	lfsr	2,2
  8398  001C54  500A               	movf	__RegsToCANID@Value,w,c
  8399  001C56  26D9               	addwf	fsr2l,f,c
  8400  001C58  500B               	movf	__RegsToCANID@Value+1,w,c
  8401  001C5A  22DA               	addwfc	fsr2h,f,c
  8402  001C5C  5008               	movf	??__RegsToCANID,w,c
  8403  001C5E  12DF               	iorwf	indf2,f,c
  8404                           
  8405                           ;ECANPoll.c: 1180: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
  8406  001C60  C003  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8407  001C64  C004  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8408  001C68  50DF               	movf	indf2,w,c
  8409  001C6A  6E08               	movwf	??__RegsToCANID& (0+255),c
  8410  001C6C  90D8               	bcf	status,0,c
  8411  001C6E  3208               	rrcf	??__RegsToCANID,f,c
  8412  001C70  90D8               	bcf	status,0,c
  8413  001C72  3208               	rrcf	??__RegsToCANID,f,c
  8414  001C74  90D8               	bcf	status,0,c
  8415  001C76  3208               	rrcf	??__RegsToCANID,f,c
  8416  001C78  0E1C               	movlw	28
  8417  001C7A  1608               	andwf	??__RegsToCANID,f,c
  8418  001C7C  EE20 F002          	lfsr	2,2
  8419  001C80  500A               	movf	__RegsToCANID@Value,w,c
  8420  001C82  26D9               	addwf	fsr2l,f,c
  8421  001C84  500B               	movf	__RegsToCANID@Value+1,w,c
  8422  001C86  22DA               	addwfc	fsr2h,f,c
  8423  001C88  5008               	movf	??__RegsToCANID,w,c
  8424  001C8A  12DF               	iorwf	indf2,f,c
  8425                           
  8426                           ;ECANPoll.c: 1181: ptr++;
  8427  001C8C  4A03               	infsnz	__RegsToCANID@ptr,f,c
  8428  001C8E  2A04               	incf	__RegsToCANID@ptr+1,f,c
  8429                           
  8430                           ;ECANPoll.c: 1182: Value->BYTES.BYTE_2 = *ptr;
  8431  001C90  C003  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8432  001C94  C004  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8433  001C98  EE10 F001          	lfsr	1,1
  8434  001C9C  500A               	movf	__RegsToCANID@Value,w,c
  8435  001C9E  26E1               	addwf	fsr1l,f,c
  8436  001CA0  500B               	movf	__RegsToCANID@Value+1,w,c
  8437  001CA2  22E2               	addwfc	fsr1h,f,c
  8438  001CA4  CFDF FFE7          	movff	indf2,indf1
  8439                           
  8440                           ;ECANPoll.c: 1183: ptr++;
  8441  001CA8  4A03               	infsnz	__RegsToCANID@ptr,f,c
  8442  001CAA  2A04               	incf	__RegsToCANID@ptr+1,f,c
  8443                           
  8444                           ;ECANPoll.c: 1184: Value->BYTES.BYTE_1 = *ptr;
  8445  001CAC  C003  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8446  001CB0  C004  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8447  001CB4  C00A  FFE1         	movff	__RegsToCANID@Value,fsr1l
  8448  001CB8  C00B  FFE2         	movff	__RegsToCANID@Value+1,fsr1h
  8449  001CBC  CFDF FFE7          	movff	indf2,indf1
  8450  001CC0  0012               	return		;funcret
  8451  001CC2                     __end_of__RegsToCANID:
  8452                           	opt callstack 0
  8453                           
  8454 ;; *************** function _Open1USART *****************
  8455 ;; Defined at:
  8456 ;;		line 124 in file "plib/USART/u1open.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  config          1    wreg     unsigned char 
  8459 ;;  spbrg           2    2[COMRAM] unsigned int 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  config          1    4[COMRAM] unsigned char 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		wreg, status,2
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8475 ;;Total ram usage:        3 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:    2
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_main
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text34
  8486  002A78                     __ptext34:
  8487                           	opt callstack 0
  8488  002A78                     _Open1USART:
  8489                           	opt callstack 28
  8490                           
  8491                           ;incstack = 0
  8492                           ;Open1USART@config stored from wreg
  8493  002A78  6E05               	movwf	Open1USART@config,c
  8494                           
  8495                           ;u1open.c: 126: TXSTA1 = 0;
  8496  002A7A  0E00               	movlw	0
  8497  002A7C  6EAC               	movwf	4012,c	;volatile
  8498                           
  8499                           ;u1open.c: 127: RCSTA1 = 0;
  8500  002A7E  0E00               	movlw	0
  8501  002A80  6EAB               	movwf	4011,c	;volatile
  8502                           
  8503                           ;u1open.c: 129: if(config&0x01)
  8504  002A82  B005               	btfsc	Open1USART@config,0,c
  8505                           
  8506                           ;u1open.c: 130: TXSTA1bits.SYNC = 1;
  8507  002A84  88AC               	bsf	4012,4,c	;volatile
  8508                           
  8509                           ;u1open.c: 132: if(config&0x02)
  8510  002A86  A205               	btfss	Open1USART@config,1,c
  8511  002A88  D002               	goto	l4802
  8512                           
  8513                           ;u1open.c: 133: {;u1open.c: 134: TXSTA1bits.TX9 = 1;
  8514  002A8A  8CAC               	bsf	4012,6,c	;volatile
  8515                           
  8516                           ;u1open.c: 135: RCSTA1bits.RX9 = 1;
  8517  002A8C  8CAB               	bsf	4011,6,c	;volatile
  8518  002A8E                     l4802:
  8519                           
  8520                           ;u1open.c: 136: };u1open.c: 138: if(config&0x04)
  8521  002A8E  B405               	btfsc	Open1USART@config,2,c
  8522                           
  8523                           ;u1open.c: 139: TXSTA1bits.CSRC = 1;
  8524  002A90  8EAC               	bsf	4012,7,c	;volatile
  8525                           
  8526                           ;u1open.c: 141: if(config&0x08)
  8527  002A92  A605               	btfss	Open1USART@config,3,c
  8528  002A94  D002               	goto	l234
  8529                           
  8530                           ;u1open.c: 142: RCSTA1bits.CREN = 1;
  8531  002A96  88AB               	bsf	4011,4,c	;volatile
  8532  002A98  D001               	goto	l4810
  8533  002A9A                     l234:
  8534                           
  8535                           ;u1open.c: 143: else;u1open.c: 144: RCSTA1bits.SREN = 1;
  8536  002A9A  8AAB               	bsf	4011,5,c	;volatile
  8537  002A9C                     l4810:
  8538                           
  8539                           ;u1open.c: 146: if(config&0x10)
  8540  002A9C  B805               	btfsc	Open1USART@config,4,c
  8541                           
  8542                           ;u1open.c: 147: TXSTA1bits.BRGH = 1;
  8543  002A9E  84AC               	bsf	4012,2,c	;volatile
  8544                           
  8545                           ;u1open.c: 149: if(config&0x20)
  8546  002AA0  BA05               	btfsc	Open1USART@config,5,c
  8547                           
  8548                           ;u1open.c: 150: RCSTA1bits.ADDEN = 1;
  8549  002AA2  86AB               	bsf	4011,3,c	;volatile
  8550                           
  8551                           ;u1open.c: 154: if(config&0x40)
  8552  002AA4  AC05               	btfss	Open1USART@config,6,c
  8553  002AA6  D002               	goto	l238
  8554                           
  8555                           ;u1open.c: 155: PIE1bits.RCIE = 1;
  8556  002AA8  8A9D               	bsf	3997,5,c	;volatile
  8557  002AAA  D001               	goto	l4822
  8558  002AAC                     l238:
  8559                           
  8560                           ;u1open.c: 156: else;u1open.c: 157: PIE1bits.RCIE = 0;
  8561  002AAC  9A9D               	bcf	3997,5,c	;volatile
  8562  002AAE                     l4822:
  8563                           
  8564                           ;u1open.c: 159: if(config&0x80)
  8565  002AAE  AE05               	btfss	Open1USART@config,7,c
  8566  002AB0  D002               	goto	l240
  8567                           
  8568                           ;u1open.c: 160: PIE1bits.TXIE = 1;
  8569  002AB2  889D               	bsf	3997,4,c	;volatile
  8570  002AB4  D001               	goto	l241
  8571  002AB6                     l240:
  8572                           
  8573                           ;u1open.c: 161: else;u1open.c: 162: PIE1bits.TXIE = 0;
  8574  002AB6  989D               	bcf	3997,4,c	;volatile
  8575  002AB8                     l241:
  8576                           
  8577                           ;u1open.c: 164: SPBRG1 = spbrg;
  8578  002AB8  C003  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  8579                           
  8580                           ;u1open.c: 165: SPBRGH1 = spbrg >> 8;
  8581  002ABC  5004               	movf	Open1USART@spbrg+1,w,c
  8582  002ABE  6E7D               	movwf	3965,c	;volatile
  8583                           
  8584                           ;u1open.c: 167: TXSTA1bits.TXEN = 1;
  8585  002AC0  8AAC               	bsf	4012,5,c	;volatile
  8586                           
  8587                           ;u1open.c: 168: RCSTA1bits.SPEN = 1;
  8588  002AC2  8EAB               	bsf	4011,7,c	;volatile
  8589  002AC4  0012               	return		;funcret
  8590  002AC6                     __end_of_Open1USART:
  8591                           	opt callstack 0
  8592                           
  8593 ;; *************** function _ECANInitialize *****************
  8594 ;; Defined at:
  8595 ;;		line 164 in file "can/ECANPoll.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;		None
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;Total ram usage:        0 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:    3
  8616 ;; This function calls:
  8617 ;;		_ECANSetOperationMode
  8618 ;; This function is called by:
  8619 ;;		_main
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text35
  8624  00277E                     __ptext35:
  8625                           	opt callstack 0
  8626  00277E                     _ECANInitialize:
  8627                           	opt callstack 27
  8628                           
  8629                           ;ECANPoll.c: 168: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
  8630                           
  8631                           ;incstack = 0
  8632  00277E  0E80               	movlw	128
  8633  002780  ECEF  F015         	call	_ECANSetOperationMode
  8634                           
  8635                           ;ECANPoll.c: 172: BRGCON1 = ((2-1) << 6) | (2-1);
  8636  002784  0E41               	movlw	65
  8637  002786  010E               	movlb	14	; () banked
  8638  002788  6F43               	movwf	67,b	;volatile
  8639                           
  8640                           ; BSR set to: 14
  8641                           ;ECANPoll.c: 173: BRGCON2 = (1 << 7) | (1 << 6) | ((1-1) << 3) | (4-1);
  8642  00278A  0EC3               	movlw	195
  8643  00278C  6F44               	movwf	68,b	;volatile
  8644                           
  8645                           ; BSR set to: 14
  8646                           ;ECANPoll.c: 177: BRGCON3 = (0 << 7) |;ECANPoll.c: 178: (0 << 6) |;ECANPoll.c: 179: (2-1
      +                          );
  8647  00278E  0E01               	movlw	1
  8648  002790  6F45               	movwf	69,b	;volatile
  8649                           
  8650                           ; BSR set to: 14
  8651                           ;ECANPoll.c: 182: CIOCON = 0 << 7 | 0 << 6 | 1 << 4 | 0;
  8652  002792  0E10               	movlw	16
  8653  002794  6E70               	movwf	3952,c	;volatile
  8654                           
  8655                           ; BSR set to: 14
  8656                           ;ECANPoll.c: 189: MDSEL1 = 0x00 >> 7;
  8657  002796  9E72               	bcf	3954,7,c	;volatile
  8658                           
  8659                           ; BSR set to: 14
  8660                           ;ECANPoll.c: 190: MDSEL0 = 0x00 >> 6;
  8661  002798  9C72               	bcf	3954,6,c	;volatile
  8662                           
  8663                           ; BSR set to: 14
  8664                           ;ECANPoll.c: 195: RXB0CON = (0 << 5) | (0 << 2);
  8665  00279A  0E00               	movlw	0
  8666  00279C  6E60               	movwf	3936,c	;volatile
  8667                           
  8668                           ; BSR set to: 14
  8669                           ;ECANPoll.c: 196: RXB1CON = 0 << 5;
  8670  00279E  0E00               	movlw	0
  8671  0027A0  010F               	movlb	15	; () banked
  8672  0027A2  6F30               	movwf	48,b	;volatile
  8673                           
  8674                           ; BSR set to: 15
  8675                           ;ECANPoll.c: 290: RXF0SIDH = (long)0x0L >> 3L;RXF0SIDL = (long)0x0L << 5L;
  8676  0027A4  0E00               	movlw	0
  8677  0027A6  010E               	movlb	14	; () banked
  8678  0027A8  6FE0               	movwf	224,b	;volatile
  8679                           
  8680                           ; BSR set to: 14
  8681  0027AA  0E00               	movlw	0
  8682  0027AC  6FE1               	movwf	225,b	;volatile
  8683                           
  8684                           ; BSR set to: 14
  8685                           ;ECANPoll.c: 298: RXF1SIDH = (long)0x0L >> 3L;RXF1SIDL = (long)0x0L << 5L;
  8686  0027AE  0E00               	movlw	0
  8687  0027B0  6FE4               	movwf	228,b	;volatile
  8688                           
  8689                           ; BSR set to: 14
  8690  0027B2  0E00               	movlw	0
  8691  0027B4  6FE5               	movwf	229,b	;volatile
  8692                           
  8693                           ; BSR set to: 14
  8694                           ;ECANPoll.c: 307: RXF2SIDH = (long)0x0L >> 3L;RXF2SIDL = (long)0x0L << 5L;
  8695  0027B6  0E00               	movlw	0
  8696  0027B8  6FE8               	movwf	232,b	;volatile
  8697                           
  8698                           ; BSR set to: 14
  8699  0027BA  0E00               	movlw	0
  8700  0027BC  6FE9               	movwf	233,b	;volatile
  8701                           
  8702                           ; BSR set to: 14
  8703                           ;ECANPoll.c: 316: RXF3SIDH = (long)0x0L >> 3L;RXF3SIDL = (long)0x0L << 5L;
  8704  0027BE  0E00               	movlw	0
  8705  0027C0  6FEC               	movwf	236,b	;volatile
  8706                           
  8707                           ; BSR set to: 14
  8708  0027C2  0E00               	movlw	0
  8709  0027C4  6FED               	movwf	237,b	;volatile
  8710                           
  8711                           ; BSR set to: 14
  8712                           ;ECANPoll.c: 325: RXF4SIDH = (long)0x0L >> 3L;RXF4SIDL = (long)0x0L << 5L;
  8713  0027C6  0E00               	movlw	0
  8714  0027C8  6FF0               	movwf	240,b	;volatile
  8715                           
  8716                           ; BSR set to: 14
  8717  0027CA  0E00               	movlw	0
  8718  0027CC  6FF1               	movwf	241,b	;volatile
  8719                           
  8720                           ; BSR set to: 14
  8721                           ;ECANPoll.c: 333: RXF5SIDH = (long)0x0L >> 3L;RXF5SIDL = (long)0x0L << 5L;
  8722  0027CE  0E00               	movlw	0
  8723  0027D0  6FF4               	movwf	244,b	;volatile
  8724                           
  8725                           ; BSR set to: 14
  8726  0027D2  0E00               	movlw	0
  8727  0027D4  6FF5               	movwf	245,b	;volatile
  8728                           
  8729                           ; BSR set to: 14
  8730                           ;ECANPoll.c: 475: RXM0SIDH = (long)0x0L >> 3L; RXM0SIDL = (long)0x0L << 5L;
  8731  0027D6  0E00               	movlw	0
  8732  0027D8  6FF8               	movwf	248,b	;volatile
  8733                           
  8734                           ; BSR set to: 14
  8735  0027DA  0E00               	movlw	0
  8736  0027DC  6FF9               	movwf	249,b	;volatile
  8737                           
  8738                           ; BSR set to: 14
  8739                           ;ECANPoll.c: 476: RXM0EXIDM = 0;
  8740  0027DE  97F9               	bcf	249,3,b	;volatile
  8741                           
  8742                           ; BSR set to: 14
  8743                           ;ECANPoll.c: 483: RXM1SIDH = (long)0x0L >> 3L; RXM1SIDL = (long)0x0L << 5L;
  8744  0027E0  0E00               	movlw	0
  8745  0027E2  6FFC               	movwf	252,b	;volatile
  8746                           
  8747                           ; BSR set to: 14
  8748  0027E4  0E00               	movlw	0
  8749  0027E6  6FFD               	movwf	253,b	;volatile
  8750                           
  8751                           ; BSR set to: 14
  8752                           ;ECANPoll.c: 484: RXM1EXIDEN = 0;
  8753  0027E8  97FD               	bcf	253,3,b	;volatile
  8754                           
  8755                           ;ECANPoll.c: 495: ECANSetOperationMode(0x00);
  8756  0027EA  0E00               	movlw	0
  8757  0027EC  ECEF  F015         	call	_ECANSetOperationMode
  8758  0027F0  0012               	return		;funcret
  8759  0027F2                     __end_of_ECANInitialize:
  8760                           	opt callstack 0
  8761                           
  8762 ;; *************** function _ECANSetOperationMode *****************
  8763 ;; Defined at:
  8764 ;;		line 1012 in file "can/ECANPoll.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  mode            1    wreg     enum E12067
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  mode            1    2[COMRAM] enum E12067
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;Total ram usage:        1 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:    2
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_ECANInitialize
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text36
  8793  002BDE                     __ptext36:
  8794                           	opt callstack 0
  8795  002BDE                     _ECANSetOperationMode:
  8796                           	opt callstack 27
  8797                           
  8798                           ;incstack = 0
  8799                           ;ECANSetOperationMode@mode stored from wreg
  8800  002BDE  6E03               	movwf	ECANSetOperationMode@mode,c
  8801                           
  8802                           ;ECANPoll.c: 1014: CANCON &= 0x1F;
  8803  002BE0  0E1F               	movlw	31
  8804  002BE2  166F               	andwf	3951,f,c	;volatile
  8805                           
  8806                           ;ECANPoll.c: 1015: CANCON |= mode;
  8807  002BE4  5003               	movf	ECANSetOperationMode@mode,w,c
  8808  002BE6  126F               	iorwf	3951,f,c	;volatile
  8809  002BE8                     l2904:
  8810  002BE8  506E               	movf	3950,w,c	;volatile
  8811  002BEA  0BE0               	andlw	224
  8812  002BEC  1803               	xorwf	ECANSetOperationMode@mode,w,c
  8813  002BEE  B4D8               	btfsc	status,2,c
  8814  002BF0  0012               	return	
  8815  002BF2  D7FA               	goto	l2904
  8816  002BF4                     __end_of_ECANSetOperationMode:
  8817                           	opt callstack 0
  8818                           
  8819 ;; *************** function _ISR *****************
  8820 ;; Defined at:
  8821 ;;		line 159 in file "main.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;		None
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  c2              1    1[COMRAM] unsigned char 
  8826 ;; Return value:  Size  Location     Type
  8827 ;;                  1    wreg      void 
  8828 ;; Registers used:
  8829 ;;		wreg, status,2, status,0, cstack
  8830 ;; Tracked objects:
  8831 ;;		On entry : 0/0
  8832 ;;		On exit  : 0/0
  8833 ;;		Unchanged: 0/0
  8834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;Total ram usage:        1 bytes
  8840 ;; Hardware stack levels used:    1
  8841 ;; Hardware stack levels required when called:    1
  8842 ;; This function calls:
  8843 ;;		_Read1USART
  8844 ;; This function is called by:
  8845 ;;		Interrupt level 2
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           	psect	intcode
  8850  000008                     __pintcode:
  8851                           	opt callstack 0
  8852  000008                     _ISR:
  8853                           	opt callstack 24
  8854                           
  8855                           ;incstack = 0
  8856  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8857                           
  8858                           ;main.c: 161: GIE=0;
  8859  00000A  9EF2               	bcf	4082,7,c	;volatile
  8860                           
  8861                           ;main.c: 162: if ((PIR1bits.RC1IF)) {
  8862  00000C  AA9E               	btfss	3998,5,c	;volatile
  8863  00000E  D011               	goto	i2l145
  8864                           
  8865                           ;main.c: 163: char c2 = Read1USART();
  8866  000010  ECE0  F015         	call	_Read1USART	;wreg free
  8867  000014  6E02               	movwf	ISR@c2,c
  8868                           
  8869                           ;main.c: 164: if (c2 == '\n') {
  8870  000016  0E0A               	movlw	10
  8871  000018  1802               	xorwf	ISR@c2,w,c
  8872  00001A  B4D8               	btfsc	status,2,c
  8873                           
  8874                           ;main.c: 165: cmd = ctmp;
  8875  00001C  C05B  F05C         	movff	_ctmp,_cmd
  8876                           
  8877                           ;main.c: 166: };main.c: 167: if (c2 != '\r' && c2 != '\n') {
  8878  000020  0E0D               	movlw	13
  8879  000022  1802               	xorwf	ISR@c2,w,c
  8880  000024  B4D8               	btfsc	status,2,c
  8881  000026  D005               	goto	i2l145
  8882  000028  0E0A               	movlw	10
  8883  00002A  1802               	xorwf	ISR@c2,w,c
  8884  00002C  A4D8               	btfss	status,2,c
  8885                           
  8886                           ;main.c: 168: ctmp = c2;
  8887  00002E  C002  F05B         	movff	ISR@c2,_ctmp
  8888  000032                     i2l145:
  8889                           
  8890                           ;main.c: 169: };main.c: 170: };main.c: 171: GIE=1;
  8891  000032  8EF2               	bsf	4082,7,c	;volatile
  8892  000034  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8893  000036  0011               	retfie		f
  8894  000038                     __end_of_ISR:
  8895                           	opt callstack 0
  8896                           
  8897 ;; *************** function _Read1USART *****************
  8898 ;; Defined at:
  8899 ;;		line 17 in file "plib/USART/u1read.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;		None
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  data            1    0[COMRAM] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      unsigned char 
  8906 ;; Registers used:
  8907 ;;		wreg, status,2, status,0
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8917 ;;Total ram usage:        1 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_ISR
  8923 ;;		_GetcharHW
  8924 ;;		_gets1USART
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text38
  8929  002BC0                     __ptext38:
  8930                           	opt callstack 0
  8931  002BC0                     _Read1USART:
  8932                           	opt callstack 24
  8933                           
  8934                           ;u1read.c: 19: char data;;u1read.c: 21: USART1_Status.val &= 0xf2;
  8935                           
  8936                           ;incstack = 0
  8937  002BC0  0EF2               	movlw	242
  8938  002BC2  165A               	andwf	_USART1_Status,f,c
  8939                           
  8940                           ;u1read.c: 23: if(RCSTA1bits.RX9)
  8941  002BC4  ACAB               	btfss	4011,6,c	;volatile
  8942  002BC6  D003               	goto	i2l275
  8943                           
  8944                           ;u1read.c: 24: {;u1read.c: 25: USART1_Status.RX_NINE = 0;
  8945  002BC8  905A               	bcf	_USART1_Status,0,c
  8946                           
  8947                           ;u1read.c: 26: if(RCSTA1bits.RX9D)
  8948  002BCA  B0AB               	btfsc	4011,0,c	;volatile
  8949                           
  8950                           ;u1read.c: 27: USART1_Status.RX_NINE = 1;
  8951  002BCC  805A               	bsf	_USART1_Status,0,c
  8952  002BCE                     i2l275:
  8953                           
  8954                           ;u1read.c: 28: };u1read.c: 30: if(RCSTA1bits.FERR)
  8955  002BCE  B4AB               	btfsc	4011,2,c	;volatile
  8956                           
  8957                           ;u1read.c: 31: USART1_Status.FRAME_ERROR = 1;
  8958  002BD0  845A               	bsf	_USART1_Status,2,c
  8959                           
  8960                           ;u1read.c: 33: if(RCSTA1bits.OERR)
  8961  002BD2  B2AB               	btfsc	4011,1,c	;volatile
  8962                           
  8963                           ;u1read.c: 34: USART1_Status.OVERRUN_ERROR = 1;
  8964  002BD4  865A               	bsf	_USART1_Status,3,c
  8965                           
  8966                           ;u1read.c: 36: data = RCREG1;
  8967  002BD6  CFAE F001          	movff	4014,Read1USART@data	;volatile
  8968                           
  8969                           ;u1read.c: 38: return (data);
  8970  002BDA  5001               	movf	Read1USART@data,w,c
  8971  002BDC  0012               	return		;funcret
  8972  002BDE                     __end_of_Read1USART:
  8973                           	opt callstack 0
  8974                           
  8975                           	psect	rparam
  8976  0000                     
  8977                           	psect	temp
  8978  00005D                     btemp:
  8979                           	opt callstack 0
  8980  00005D                     	ds	1
  8981  0000                     int$flags	set	btemp
  8982  0000                     wtemp8	set	btemp+1
  8983  0000                     ttemp5	set	btemp+1
  8984  0000                     ttemp6	set	btemp+4
  8985  0000                     ttemp7	set	btemp+8
  8986                           tosu	equ	0xFFF
  8987                           tosh	equ	0xFFE
  8988                           tosl	equ	0xFFD
  8989                           stkptr	equ	0xFFC
  8990                           pclatu	equ	0xFFB
  8991                           pclath	equ	0xFFA
  8992                           pcl	equ	0xFF9
  8993                           tblptru	equ	0xFF8
  8994                           tblptrh	equ	0xFF7
  8995                           tblptrl	equ	0xFF6
  8996                           tablat	equ	0xFF5
  8997                           prodh	equ	0xFF4
  8998                           prodl	equ	0xFF3
  8999                           indf0	equ	0xFEF
  9000                           postinc0	equ	0xFEE
  9001                           postdec0	equ	0xFED
  9002                           preinc0	equ	0xFEC
  9003                           plusw0	equ	0xFEB
  9004                           fsr0h	equ	0xFEA
  9005                           fsr0l	equ	0xFE9
  9006                           wreg	equ	0xFE8
  9007                           indf1	equ	0xFE7
  9008                           postinc1	equ	0xFE6
  9009                           postdec1	equ	0xFE5
  9010                           preinc1	equ	0xFE4
  9011                           plusw1	equ	0xFE3
  9012                           fsr1h	equ	0xFE2
  9013                           fsr1l	equ	0xFE1
  9014                           bsr	equ	0xFE0
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           preinc2	equ	0xFDC
  9019                           plusw2	equ	0xFDB
  9020                           fsr2h	equ	0xFDA
  9021                           fsr2l	equ	0xFD9
  9022                           status	equ	0xFD8


Data Sizes:
    Strings     144
    Constant    144
    Data        24
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      92
    BANK0           160     68     121
    BANK1           256    180     188
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 128
		 -> uds_get_soc@buf(BANK1[128]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(SFR_1[1]), RXB0CON(SFR_2[1]), 

    _RegsToCANID@val	PTR unsigned long  size(2) Largest target is 4
		 -> uds_get_vin@id(BANK0[4]), uds_get_soc@id(BANK1[4]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> uds_get_vin@id(BANK0[4]), uds_get_soc@id(BANK1[4]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(SFR_1[1]), TXB1CON(SFR_1[1]), TXB0CON(SFR_1[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> _CANIDToRegs@val(COMRAM[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 32
		 -> uds_get_vin@msg2(BANK0[32]), uds_get_soc@msg2(BANK1[32]), 

    ECANReceiveMessage@id	PTR unsigned long  size(2) Largest target is 4
		 -> uds_get_vin@id(BANK0[4]), uds_get_soc@id(BANK1[4]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(2) Largest target is 1
		 -> uds_get_vin@len(BANK0[1]), uds_get_soc@len(BANK1[1]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(SFR_1[1]), RXB0CON(SFR_2[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(SFR_1[1]), RXB0CON(SFR_2[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E12054 size(2) Largest target is 1
		 -> uds_get_vin@flags(BANK0[1]), uds_get_soc@flags(BANK1[1]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> uds_get_vin@msg_continue(BANK0[8]), uds_get_vin@msg_start(BANK0[8]), uds_get_soc@msg(BANK1[8]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(SFR_1[1]), TXB1CON(SFR_1[1]), TXB0CON(SFR_1[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(SFR_1[1]), TXB1CON(SFR_1[1]), TXB0CON(SFR_1[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(SFR_1[1]), TXB1CON(SFR_1[1]), TXB0CON(SFR_1[1]), 

    PutString@mess	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_15(CODE[15]), STR_14(CODE[20]), STR_13(CODE[16]), STR_12(CODE[25]), 
		 -> STR_11(CODE[16]), STR_10(CODE[12]), STR_9(CODE[25]), STR_8(CODE[18]), 
		 -> STR_7(CODE[24]), STR_6(CODE[18]), STR_5(CODE[16]), uds_get_soc@buf(BANK1[128]), 
		 -> STR_3(CODE[18]), STR_2(CODE[24]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _uds_get_vin->_ECANSendMessage
    _uds_get_soc->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___xxtofl
    _PutString->_Putchar
    _Putchar->_Write1USART
    _ECANSendMessage->__CANIDToRegs
    _ECANReceiveMessage->__RegsToCANID
    _ECANInitialize->_ECANSetOperationMode

Critical Paths under _ISR in COMRAM

    _ISR->_Read1USART

Critical Paths under _main in BANK0

    _main->_shell
    _shell->_uds_get_vin
    _uds_get_soc->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _shell->_uds_get_soc

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     1      5   49332
                                             62 BANK0      6     1      5
                     _ECANInitialize
                         _Open1USART
                          _PutString
                              _alive
                              _shell
 ---------------------------------------------------------------------------------
 (1) _shell                                                1     1      0   47275
                                             61 BANK0      1     1      0
                          _PutString
                            _Putchar
                              _alive
                        _uds_get_soc
                        _uds_get_vin
 ---------------------------------------------------------------------------------
 (2) _uds_get_vin                                        191   189      2    7408
                                             47 COMRAM     2     0      2
                                              0 BANK0     61    61      0
                 _ECANReceiveMessage
                    _ECANSendMessage
                          _PutString
                            _Putchar
                              _alive
 ---------------------------------------------------------------------------------
 (2) _uds_get_soc                                        180   180      0   38092
                                              0 BANK1    180   180      0
                 _ECANReceiveMessage
                    _ECANSendMessage
                          _PutString
                            ___fldiv
                           ___xxtofl
                              _alive
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             43    35      8   29448
                                             78 COMRAM    11     3      8
                                              0 BANK0     29    29      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4    6735
                                             41 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1208
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1364
                                              8 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4    5198
                                             41 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     618
                                              7 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3720
                                             16 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     455
                                              2 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     455
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     663
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     615
                                              2 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     466
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                             41 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2737
                                             70 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2414
                                             54 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     638
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     646
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _alive                                                6     4      2     502
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PutString                                            2     0      2    1229
                                              4 COMRAM     2     0      2
                            _Putchar
 ---------------------------------------------------------------------------------
 (3) _Putchar                                              1     1      0      44
                                              3 COMRAM     1     1      0
                        _Write1USART
 ---------------------------------------------------------------------------------
 (4) _Write1USART                                          1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ECANSendMessage                                     34    26      8    2511
                                             13 COMRAM    34    26      8
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (4) __CANIDToRegs                                        11     4      7     704
                                              2 COMRAM    11     4      7
 ---------------------------------------------------------------------------------
 (3) _ECANReceiveMessage                                  14     6      8    2148
                                             11 COMRAM    14     6      8
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (4) __RegsToCANID                                         9     4      5     717
                                              2 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           3     1      2     296
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ECANInitialize                                       0     0      0      30
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (2) _ECANSetOperationMode                                 1     1      0      30
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  1     1      0     112
                                              1 COMRAM     1     1      0
                         _Read1USART
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECANInitialize
     _ECANSetOperationMode
   _Open1USART
   _PutString
     _Putchar
       _Write1USART
   _alive
   _shell
     _PutString
       _Putchar
         _Write1USART
     _Putchar
       _Write1USART
     _alive
     _uds_get_soc
       _ECANReceiveMessage
         __RegsToCANID
       _ECANSendMessage
         __CANIDToRegs
       _PutString
         _Putchar
           _Write1USART
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
       _alive
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
     _uds_get_vin
       _ECANReceiveMessage
         __RegsToCANID
       _ECANSendMessage
         __CANIDToRegs
       _PutString
         _Putchar
           _Write1USART
       _Putchar
         _Write1USART
       _alive

 _ISR (ROOT)
   _Read1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     B4      BC       8       73.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5C       1       97.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     191       6        0.0%
DATA                 0      0     191       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May  6 13:48:40 2019

                 ___fldiv@aexp 0029                   ___fldiv@bexp 0028                   ___fldiv@sign 0021  
             uds_get_soc@flags 01AF                             l98 296C                             l99 2934  
                 ___awdiv@sign 000E            ___wmul@multiplicand 0005                    __CFG_BORV$3 000000  
             uds_get_vin@i_336 0097                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000               uds_get_vin@flags 0098  
                          l123 189A                            l240 2AB6                            l241 2AB8  
                          l234 2A9A                            l238 2AAC                            l407 1ED6  
                          l512 05FC                            l387 2130                            l557 276C  
                          l398 1E50                            l808 2456                            l972 28B6  
                          l895 2250                            l896 2278                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                            _RB7 007C0F                   __CFG_CPD$OFF 000000  
                          _ISR 0008                            _cmd 005C                   ___awmod@sign 0008  
                          prod 000FF3                            wreg 000FE8                     _TXSTA1bits 000FAC  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                           ?_ISR 0001  
                 ___fltol@exp1 0033                           l1106 11B6                           l1107 11B2  
                         l1043 2A1C                           l1053 2B44                           l1214 2038  
                         l1207 1FBA                           l1136 1644                           l1081 107E  
                         l1082 105C                           l1147 16B2                           l1148 16AE  
                         l1166 0C6A                           l1183 0F08                           l1175 0E82  
                         l3200 0F6C                           l1176 0E7E                           l1097 1150  
                         l3300 10C8                           l3220 0FB0                           l4110 214C  
                         l4014 28A8                           l4006 2874                           l4030 1FE8  
                         l4104 2134                           l3232 0FD4                           l3224 0FB4  
                         l4008 2880                           l4032 1FEE                           l4024 1FCA  
                         l3400 0C1A                           l4042 205E                           l4034 1FFA  
                         l3402 0C2A                           l4204 1F34                           l4212 1F52  
                         l4132 21C0                           l3308 10DA                           l4060 20AA  
                         l4044 206A                           l4036 2020                           l4118 2182  
                         l4126 21A0                           l3182 2C12                           l4070 2A50  
                         l3326 1174                           l3342 1194                           l3318 1140  
                         l3262 1010                           l3510 0F26                           l4230 005C  
                         l4136 21C4                           l3336 118A                           l3416 0C56  
                         l4240 008C                           l4232 0062                           l4218 1F6C  
                         l4170 1E86                           l4154 1E40                           l4090 20D8  
                         l4066 2A28                           l3370 1222                           l3362 11FC  
                         l3290 10A2                           l3274 106A                           l3426 0C88  
                         l3418 0C5A                           l3602 29EA                           l3530 269C  
                         l4402 067E                           l4330 03B8                           l4322 034C  
                         l4314 02D2                           l4306 0254                           l4250 00E6  
                         l4226 0048                           l4164 1E6A                           l4172 1E90  
                         l3276 106E                           l3196 0F68                           l3604 29F2  
                         l3524 268C                           l4420 0780                           l4412 075E  
                         l4252 00EA                           l4244 00C4                           l3374 122A  
                         l3614 2A12                           l3630 2B3A                           l3622 2B1A  
                         l3702 13A8                           l4414 076A                           l4350 04CA  
                         l4334 03E6                           l4318 0300                           l4422 078A  
                         l4246 00DA                           l2904 2BE8                           l4176 1E94  
                         l3376 122C                           l3624 2B22                           l3536 26B2  
                         l3552 26E4                           l4344 044E                           l4280 017C  
                         l4264 0120                           l4272 0144                           l4194 1EFA  
                         l3634 2BF6                           l4530 1642                           l4506 15A4  
                         l3298 10C4                           l3474 0E48                           l3538 26BA  
                         l3722 093C                           l4362 0502                           l4290 01CA  
                         l4266 0132                           l4258 0104                           l4274 0168  
                         l4442 07F4                           l4524 161C                           l4516 15F4  
                         l4460 14FE                           l3804 2292                           l3468 0E2A  
                         l3708 1484                           l3556 26F2                           l3548 26DA  
                         l3572 2812                           l3740 0B20                           l3732 0A06  
                         l4428 07A2                           l4348 04C6                           l4542 1678  
                         l3902 275E                           l3814 22AA                           l3494 0EC6  
                         l3398 0C16                           l4390 0600                           l4606 1A4C  
                         l4702 192C                           l3680 1BEE                           l3648 1D44  
                         l4536 165A                           l4480 153E                           l4464 1502  
                         l3920 2656                           l3824 22EC                           l3816 22B6  
                         l3808 22A2                           l3592 2858                           l3584 2840  
                         l3576 2820                           l3568 2806                           l3728 09DC  
                         l4384 05D8                           l4368 0528                           l4376 05B8  
                         l4810 2A9C                           l4802 2A8E                           l4570 1744  
                         l4562 16F6                           l3498 0EE4                           l3578 2828  
                         l3746 0BC0                           l4378 05C2                           l4626 1B28  
                         l4722 19A2                           l4714 197A                           l4642 17C0  
                         l4492 1576                           l4484 1542                           l3924 2674  
                         l3916 2622                           l3940 2440                           l3932 23F6  
                         l3852 236A                           l3844 233A                           l3588 284A  
                         l4822 2AAE                           l4566 171A                           l3758 2BB8  
                         l4398 061E                           l4734 19CE                           l4726 19AA  
                         l4576 1750                           l3936 242A                           l3864 2386  
                         l3768 21FC                           l4656 17E2                           l4578 1752  
                         l4498 158C                           l3946 248E                           l3954 2B6A  
                         l3890 271E                           l3874 239E                           l4594 1A2A  
                         l4690 18E4                           l4682 18C0                           l3980 24FA  
                         l3964 24B0                           l3892 272A                           l3876 23AA  
                         l3868 2396                           l3990 2512                           l4950 25BC  
                         l4942 2590                           l4934 256E                           l3992 251E  
                         l3984 250A                           l4696 1922                           l4946 25A6  
                         l4938 257A                           l4956 25D4                           l4972 29BC  
                         l3998 253A                           l4958 25E8                           STR_1 7FB0  
                         STR_2 7F70                           STR_3 7FC2                           STR_4 7F88  
                         STR_5 7FD4                           STR_6 7FB0                           STR_7 7F70  
                         STR_8 7FC2                           STR_9 7F6F                           u3100 1198  
                         u3120 11AC                           u4100 2524                           u3300 0DEC  
                         u5000 1728                           u3305 0DE2                           u4050 249E  
                         u4130 2884                           u4210 2074                           u3180 1208  
                         u4060 24CE                           u3340 0E78                           u3500 282C  
                         u5021 19EC                           u5101 1782                           _PIE1 000F9D  
                         u3440 26BE                           u4065 24C4                           u4250 2A48  
                         u3290 0C76                           u4260 2A70                           u3380 0ED4  
                         u3540 29F6                           u3390 0EF2                           u3615 1D06  
                         u2920 1032                           u5080 1B3E                           u3625 1D2E  
                         u4257 2A3E                           u2930 1042                           u3570 2B26  
                         u5250 19AA                           u3635 1D58                           u4267 2A66  
                         u5091 1770                           _PEIE 007F96                           u2940 1044  
                         u4620 03B8                           u5260 19C0                           u5190 18D6  
                         u3655 1B98                           u4375 1E48                           u3920 23B0  
                         u3665 1BB8                           u4377 1E4C                           u2970 1086  
                         u3850 22BC                           u3675 1C0A                           u3771 21E0  
                         u3940 272E                           u3860 22DA                           u3780 21EA  
                         u4580 0312                           u4590 035E                           u3791 220C  
                         u4680 05E6                           u4761 07D2                           u4690 05F6  
                         u3980 2670                           u4780 080C                           u4950 16A8  
                         u5667 29C4                           u5677 25DC                           u4990 1704  
                         u5687 2940                           u5697 295A               ??_ECANInitialize 0004  
               Read1USART@data 0001                           _main 2982                           _ctmp 005B  
                         fsr0h 000FEA                           fsr1h 000FE2                           indf0 000FEF  
                         fsr2h 000FDA                           fsr0l 000FE9                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 005D                           prodh 000FF4                           prodl 000FF3  
                         start 0038                  __CFG_IESO$OFF 000000                  __CFG_FOSC$HS1 000000  
              ___fldiv@new_exp 0022                   _sprintf$1889 0060                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000      ECANReceiveMessage@dataLen 0010                          ??_ISR 0002  
             __RegsToCANID@val 0005               __RegsToCANID@ptr 0003                          ISR@c2 0002  
      uds_get_vin@msg_continue 0068                __end_of_Putchar 2C06                  ___fltol@sign1 0032  
              __end_of___fladd 1248                          ?_main 009E                __end_of___fldiv 175A  
              __end_of___awdiv 26FC                __end_of___flneg 2B7C                          STR_10 7FF3  
                        STR_11 7FD4                          STR_12 7F6F                          STR_13 7FD4  
                        STR_14 7F9C                          STR_15 7FE4                __end_of___awmod 2862  
              __end_of___flmul 0F3C                __end_of___flsub 2B0C                __end_of___fltol 254C  
              __end_of___lldiv 277E                ___awdiv@divisor 000B                __end_of___llmod 28C8  
              __end_of___lwdiv 2A26                __end_of___lwmod 2B4E                          i2l145 0032  
                        i2l275 2BCE                ___awdiv@counter 000D                          _IRXIF 007BBF  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                          _alive 2928                __end_of_dpowers 7F6F  
                        _scale 081A                __end_of_isdigit 2BC0                          _shell 254C  
                   _Read1USART 2BC0                          tablat 000FF5                          plusw1 000FE3  
                        plusw2 000FDB                          ttemp5 005E                          ttemp6 0061  
                        ttemp7 0065                          status 000FD8                          wtemp8 005E  
              __end_of_sprintf 081A           _ECANSetOperationMode 2BDE                __initialization 28C8  
                 __end_of_main 29D4              ??_ECANSendMessage 0016                     _Open1USART 2A78  
                       ??_main 00A3                  __activetblptr 000002              __RegsToCANID@type 0007  
               __CFG_PLLCFG$ON 000000           __size_of__tdiv_to_l_ 00FE                 __CFG_RETEN$OFF 000000  
   ECANReceiveMessage@msgFlags 0012                         ?_alive 0003     ECANReceiveMessage@savedPtr 0014  
                       _CANCON 000F6F               ___llmod@dividend 0003                         ?_scale 002A  
                       ?_shell 0001               ___awdiv@dividend 0009                         _CIOCON 000F70  
                       _MDSEL0 007B96                         _MDSEL1 007B97                __CFG_BBSIZ$BB2K 000000  
               __CFG_WDTEN$OFF 000000                         _RCREG1 000FAE                         _RCSTA1 000FAB  
                       _RXB0IF 007BB8                         _RXB1IF 007BB9                         _SPBRG1 000FAF  
       ECANReceiveMessage@data 000E                         _TRISB7 007C9F         ECANReceiveMessage@temp 0019  
                       _TXREG1 000FAD               __end_of___xxtofl 20BC                         _TXSTA1 000FAC  
        ?_ECANSetOperationMode 0001             __CANIDToRegs@Value 000C                 __CFG_XINST$OFF 000000  
             __end_of__powers_ 7F13                         ___flge 23C2                         ___fleq 25EE  
                    ??_Putchar 0004                      ??___fladd 003F                         ___wmul 2B7C  
                    ??___fldiv 0019                      ??___awdiv 000D                      ??___flneg 0007  
               __CFG_STVREN$ON 000000                      ??___awmod 0007                      ??___flmul 0019  
                    ??___flsub 004F                      ??___fltol 002E                      ??___lldiv 000B  
                    ??___llmod 000B                      ??___lwdiv 000C                      ??___lwmod 0007  
                       _fround 1248                         clear_0 290E               ___awdiv@quotient 000F  
                       alive@i 0007                         alive@j 0003                ___awmod@divisor 0005  
                 ?_uds_get_soc 0001                   ?_uds_get_vin 0030                ___awmod@counter 0007  
                    ??_isdigit 0003                   __mediumconst 7EDE                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             __size_of_PutString 0052  
                    ??_sprintf 0057                    ?_Read1USART 0001                     ___flge@ff1 0003  
                   ___flge@ff2 0007                   ___xxtofl@arg 000D                   ___xxtofl@exp 000C  
                 ___xxtofl@val 0003                     ___fleq@ff1 0003                     ___fleq@ff2 0007  
                   __accesstop 0060        __end_of__initialization 291A                     ___flneg@f1 0003  
                ___rparam_used 000001                     ___fltol@f1 002A                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2C18                   __pidataBANK1 2C28                  __end_of_alive 2982  
                __end_of_scale 0BEA                  __end_of_shell 25EE                    ?_Open1USART 0003  
                ?__RegsToCANID 0003    __size_of_ECANReceiveMessage 015A                     __div_to_l_ 22CE  
           __RegsToCANID@Value 000A                        ??_alive 0005                __div_to_l_@exp1 0010  
              __div_to_l_@cntr 000F                        ??_scale 002E                        ??_shell 009D  
              __div_to_l_@quot 000B                     __pbssBANK0 00A4                  ??_Write1USART 0003  
       ??_ECANSetOperationMode 0003                  __div_to_l_@f1 0003                  __div_to_l_@f2 0007  
                      ?___flge 0003                        ?___fleq 0003              __end_of_PutString 2A78  
     ECANSetOperationMode@mode 0003                        ?___wmul 0003           __ECANRxFilterHitInfo 00C8  
                      ?_fround 002A                      _B1CONbits 000E90            __size_of_Read1USART 001E  
                      _CANSTAT 000F6E                 ??__RegsToCANID 0008                        _BRGCON1 000E43  
                      _BRGCON2 000E44                        _BRGCON3 000E45               Open1USART@config 0005  
             __CFG_CANMX$PORTB 000000                      ?___xxtofl 0003                        _RXB0CON 000F60  
                      _RXB1CON 000F30                        _RXB0FUL 007B07                        _SPBRGH1 000F7D  
                      _TXB0CON 000F20                        _TXB1CON 000F10                        _TXB2CON 000F00  
          __size_of_Open1USART 004E           uds_get_vin@msg_start 0060                _ECANSendMessage 20BC  
              __CFG_PWRTEN$OFF 000000              __end_of__npowers_ 7F47                        __Hparam 0000  
                   _scale$1888 002E                        __Lparam 0000            __end_of_Write1USART 2C18  
             _uds_get_soc$1885 01A8                        _Putchar 2BF4                __size_of___flge 00D0  
              __size_of___fleq 008A                        ___fladd 0F3C                        ___fldiv 14D2  
                      ___awdiv 2678                        ___flneg 2B4E                        ___awmod 27F2  
                      ___flmul 0BEA                        ___flsub 2AC6                        ___fltol 2492  
                      ___lldiv 26FC                __size_of___wmul 0026                        ___llmod 2862  
                      ___lwdiv 29D4                        ___lwmod 2B0C                        __pcinit 28C8  
              __size_of_fround 028A                        __ramtop 0F00                        _inIndex 00C6  
                      __ptext0 2982                        __ptext1 254C                        __ptext2 175A  
                      __ptext3 19D6                        __ptext4 003C                        __ptext5 081A  
                      __ptext6 27F2                        __ptext7 2678                        __ptext8 2BA2  
                      __ptext9 1248                   __size_of_ISR 0030                    ?__div_to_l_ 0003  
                      _dpowers 7F47           __size_of_uds_get_soc 0176           __size_of_uds_get_vin 027C  
                      _isdigit 2BA2                     ??___xxtofl 0007               ___awmod@dividend 0003  
            __CFG_MSSPMSK$MSK7 000000                        _sprintf 003C           end_of_initialization 291A  
                __Lmediumconst 7EDE                ___lldiv@divisor 0007                ___lldiv@counter 000F  
            ECANSendMessage@id 000E              ECANSendMessage@pb 0017                        postdec1 000FE5  
                      postdec2 000FDD        __size_of_ECANInitialize 0074                        postinc0 000FEE  
                      postinc2 000FDE                 __tdiv_to_l_@f1 0003                 __tdiv_to_l_@f2 0007  
                ??__tdiv_to_l_ 000B                      _RXM0EXIDM 0077CB                    ___fladd@grs 0046  
                ___xxtofl@sign 000B                      _TRISCbits 000F94                    ___fldiv@grs 0024  
                  ___fldiv@rem 001D                uds_get_soc@msg2 0180                   ??_Read1USART 0001  
            __CFG_SOSCSEL$HIGH 000000                uds_get_vin@hack 0030        __end_of_ECANSendMessage 21D0  
              uds_get_vin@msg2 0070                    ___flmul@grs 001E                  ?__CANIDToRegs 0003  
         __end_of__RegsToCANID 1CC2                    _Write1USART 2C06            __size_of__div_to_l_ 00F4  
               __end_of___flge 2492                 __end_of___fleq 2678                 __end_of___wmul 2BA2  
                 ??_Open1USART 0005             __end_of_Read1USART 2BDE                 __end_of_fround 14D2  
          start_initialization 28C8                    __end_of_ISR 0038            __end_of__tdiv_to_l_ 22CE  
               ??__CANIDToRegs 000A                ___llmod@divisor 0007               Putchar@send_data 0004  
              ___llmod@counter 000B             __end_of_Open1USART 2AC6          ECANReceiveMessage@ptr 0017  
                     ??___flge 000B                       ??___fleq 000B              __CANIDToRegs@type 0009  
                     ??___wmul 0007     __end_of_ECANReceiveMessage 1F7C                    __pdataBANK0 00C9  
                  __pdataBANK1 01B4                       ??_fround 002E                      _PutString 2A26  
                sprintf@tmpval 0072                      ___fladd@a 003B                      ___fladd@b 0037  
                   fround@prec 0036                      ___fldiv@a 0015                      ___fldiv@b 0011  
                    ___flmul@a 0015                      ___flmul@b 0011                    __pbssCOMRAM 005A  
                    ___flsub@a 004B                      ___flsub@b 0047                  __pcstackBANK0 0060  
                __pcstackBANK1 0100              __size_of___xxtofl 0140                   _isdigit$1661 0004  
             ?_ECANSendMessage 000E                    sprintf@flag 006A                    sprintf@eexp 0070  
                  sprintf@fval 0076                    sprintf@prec 007A               ___lwdiv@dividend 0008  
__size_of_ECANSetOperationMode 0016                 _ECANInitialize 277E                      __pintcode 0008  
                __pmediumconst 7EDE                       ?_Putchar 0001                       ?___fladd 0037  
                     ?___fldiv 0011                       ?___awdiv 0009                       ?___flneg 0003  
                     ?___awmod 0003                       ?___flmul 0011                       ?___flsub 0047  
                     ?___fltol 002A                       ?___lldiv 0003                       ?___llmod 0003  
                    __npowers_ 7F13                       ?___lwdiv 0008                       ?___lwmod 0003  
                   ?_PutString 0005                Open1USART@spbrg 0003                    __tdiv_to_l_ 21D0  
                 ??__div_to_l_ 000B                       _BAUDCON1 000FA7                       ?_isdigit 0001  
             ___lwdiv@quotient 000C                 __size_of_alive 005A          __size_of__RegsToCANID 0176  
                     ?_sprintf 004F                Write1USART@data 0003                 __size_of_scale 03D0  
               __size_of_shell 00A2                 ___wmul@product 0007                       _PIE1bits 000F9D  
       __end_of_ECANInitialize 27F2                       _PIR1bits 000F9E             __end_of__div_to_l_ 23C2  
             ECANSendMessage@i 002D               ECANSendMessage@j 0029                       _RXB0OVFL 007B8F  
                     _RXB1OVFL 007B8E                       _RXF0SIDH 000EE0                       _RXF0SIDL 000EE1  
                     _RXF1SIDH 000EE4                       _RXF1SIDL 000EE5                       _RXF2SIDH 000EE8  
                     _RXF2SIDL 000EE9                       _RXF3SIDH 000EEC                       _RXF3SIDL 000EED  
                     _RXF4SIDH 000EF0                       _RXF4SIDL 000EF1                       _RXF5SIDH 000EF4  
                     _RXF5SIDL 000EF5                       _RXM0SIDH 000EF8                       _RXM0SIDL 000EF9  
                     _RXM1SIDH 000EFC                       _RXM1SIDL 000EFD                  ??_uds_get_soc 005A  
                ??_uds_get_vin 0032           __end_of__CANIDToRegs 1E22                 uds_get_soc@buf 0100  
               uds_get_soc@len 01AC                 uds_get_soc@msg 01A0              ___wmul@multiplier 0003  
                 __RegsToCANID 1B4C                 uds_get_vin@len 0096                      copy_data0 28DC  
                    copy_data1 28FC                   ?_Write1USART 0001                       _RxBuffer 00A4  
              ?_ECANInitialize 0001                       __Hrparam 0000           ECANReceiveMessage@id 000C  
                     __Lrparam 0000               __CANIDToRegs@val 0005               __CANIDToRegs@ptr 0003  
           __CFG_BOREN$SBORDIS 000000               __size_of_Putchar 0012               __size_of___fladd 030C  
             __size_of___fldiv 0288               __size_of___awdiv 0084               __size_of___flneg 002E  
             __size_of___awmod 0070               __size_of___flmul 0352               __size_of___flsub 0046  
             __size_of___fltol 00BA               __size_of___lldiv 0082               __size_of___llmod 0066  
             __size_of___lwdiv 0052               __size_of___lwmod 0042                    ??_PutString 0007  
                  _fround$1886 0032                    _fround$1887 002E                     sprintf@len 0068  
                   sprintf@val 006C                       ___xxtofl 1F7C               __size_of_isdigit 001E  
          __end_of_uds_get_soc 1B4C            __end_of_uds_get_vin 19D6                ___lwdiv@divisor 000A  
              ___lwdiv@counter 000E                       __ptext10 2B0C                       __ptext11 29D4  
                     __ptext20 2AC6                       __ptext12 0BEA                       __ptext21 0F3C  
                     __ptext13 21D0                       __ptext30 20BC                       __ptext22 2B4E  
                     __ptext14 22CE                       __ptext31 1CC2                       __ptext23 23C2  
                     __ptext15 1F7C                       __ptext32 1E22                       __ptext24 25EE  
                     __ptext16 2B7C                       __ptext33 1B4C                       __ptext25 2928  
                     __ptext17 2862                       __ptext34 2A78                       __ptext26 14D2  
                     __ptext18 26FC                       __ptext35 277E                       __ptext27 2A26  
                     __ptext19 2492                       __ptext36 2BDE                       __ptext28 2BF4  
                     __ptext29 2C06                       __ptext38 2BC0                       __powers_ 7EDF  
        uds_get_vin@total_size 0090               __size_of_sprintf 07DE                  __size_of_main 0052  
          ECANSendMessage@data 0012                       _outIndex 00C4            ECANSendMessage@temp 002C  
                     int$flags 005D                  uds_get_soc@id 01B0                  uds_get_vin@id 0099  
                     main@argc 009E                       main@argv 00A0                    _RXB0FILHIT0 007B00  
          __CFG_INTOSCSEL$HIGH 000000                  _USART1_Status 005A            ECANReceiveMessage@i 0016  
                     isdigit@c 0005             _ECANReceiveMessage 1E22                       scale@scl 0032  
                     intlevel2 0000                      sprintf@ap 0064                      sprintf@cp 0066  
             __tdiv_to_l_@exp1 0013                      sprintf@sp 004F               __tdiv_to_l_@cntr 0012  
             __tdiv_to_l_@quot 000E               ___lwmod@dividend 0003            ?_ECANReceiveMessage 000C  
             ___lldiv@dividend 0003                     _RCSTA1bits 000FAB        ECANSendMessage@msgFlags 0015  
           ECANSendMessage@ptr 002E                   uds_get_soc@i 01AD          __size_of__CANIDToRegs 0160  
                 uds_get_vin@i 0092                   uds_get_vin@t 0094             __CFG_WDTPS$1048576 000000  
       ECANSendMessage@dataLen 0014                   ?__tdiv_to_l_ 0003                    _uds_get_soc 19D6  
                  _uds_get_vin 175A           ??_ECANReceiveMessage 0014                       sprintf@c 007C  
                     sprintf@f 0051               ___lldiv@quotient 000B                ___lwmod@divisor 0005  
 __end_of_ECANSetOperationMode 2BF4                ___lwmod@counter 0007                     _RXM1EXIDEN 0077EB  
       ECANSendMessage@tempPtr 002A              uds_get_soc@F12336 01B4                  ___fladd@signs 0043  
                 ___fladd@aexp 0044                   ___fladd@bexp 0045            __CFG_BORPWR$ZPBORMV 000000  
                 __CANIDToRegs 1CC2                  PutString@mess 0005           __size_of_Write1USART 0012  
            uds_get_vin@F12346 00D1              uds_get_vin@F12348 00C9       __size_of_ECANSendMessage 0114  
